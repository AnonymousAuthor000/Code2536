/* Copyright 2017 The TensorFlow Authors. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================*/
#include "tensorflow/lite/kernels/internal/optimized/integer_ops/conv.h"

#include <stddef.h>
#include <iostream>
#include <cstdint>
#include <vector>

// Only use multi-threaded Eigen if ruy is disabled.
#if !defined(TFLITE_WITH_RUY)
#define TFLITE_WITH_MULTITHREADED_EIGEN
#endif

#include "tensorflow/lite/c/builtin_op_data.h"
#include "tensorflow/lite/c/common.h"
#include "tensorflow/lite/kernels/cpu_backend_context.h"
#if defined(TFLITE_WITH_MULTITHREADED_EIGEN)
#include "tensorflow/lite/kernels/eigen_support.h"
#endif
#include "tensorflow/lite/kernels/internal/compatibility.h"
#include "tensorflow/lite/kernels/internal/types.h"
// b/131835803 forces us to include multithreaded_conv.h before optimized_ops.h
#if defined(TFLITE_WITH_MULTITHREADED_EIGEN)
#include "tensorflow/lite/kernels/internal/optimized/multithreaded_conv.h"
#endif
#include "tensorflow/lite/kernels/internal/optimized/optimized_ops.h"
#include "tensorflow/lite/kernels/internal/quantization_util.h"
#include "tensorflow/lite/kernels/internal/reference/conv.h"
#include "tensorflow/lite/kernels/internal/reference/integer_ops/conv.h"
#include "tensorflow/lite/kernels/internal/tensor.h"
#include "tensorflow/lite/kernels/internal/tensor_ctypes.h"
#include "tensorflow/lite/kernels/internal/tensor_utils.h"
#include "tensorflow/lite/kernels/kernel_util.h"
#include "tensorflow/lite/kernels/padding.h"
#include "tensorflow/lite/util.h"

namespace tflite {
namespace ops {
namespace custom {
namespace onoewg {

// This file has 4 implementation of Conv.
enum KernelType {
  kReference,
  kGenericOptimized,  // Neon-free
  // kMultithreadOptimized is a mixture of an Eigen-based kernel when threads
  // are available and kGenericOptimized when we must use only one thread.
  kMultithreadOptimized,
  // The kernel uses use CBLAS interface for matrix multiplication.
  // It's fast when an optimized CBLAS implementation is available (e.g. Apple
  // Accelerate Framework), and it's slow when falling back to naive
  // implementation.
  kCblasOptimized,
};

const int kTensorNotAllocated = -1;

static constexpr size_t kMaxIm2colBufferSizeMobile = 1024 * 1024 * 1024;  // 1GB

const float filter_raw[8192]={0.05214635282754898, 0.13597165048122406, -0.08267489075660706, -0.15740229189395905, -0.27302831411361694, -0.05045073479413986, -0.03476404771208763, 0.08084187656641006, 0.002630240749567747, 0.06504438817501068, 0.07562845200300217, 0.00986148975789547, -0.15967775881290436, 0.03427369147539139, -0.12887121737003326, 0.07214505970478058, 0.00939907506108284, 0.07203200459480286, -0.22303925454616547, 0.012065723538398743, 0.21434138715267181, 0.09417849779129028, -0.12321306020021439, 0.2644680440425873, 0.11419188976287842, -0.08841750025749207, -0.0851157084107399, 0.3819064199924469, 0.1832256317138672, -0.0729229599237442, -0.06665624678134918, 0.10831689834594727, -0.23644715547561646, 0.2660747468471527, -0.3065469264984131, -0.212901309132576, 0.025174591690301895, -0.015218660235404968, -0.1644468754529953, -0.2647917568683624, 0.046710237860679626, 0.6281716823577881, 0.12135045230388641, 0.3913855254650116, -0.031980834901332855, -0.2304910123348236, 0.14522770047187805, 0.10292720049619675, 0.09509821981191635, 0.04523210600018501, -0.3468448221683502, 0.009110644459724426, 0.19288384914398193, 0.10521885752677917, -0.2004096806049347, 0.19112282991409302, -0.08619940280914307, 0.17243929207324982, 0.12792044878005981, -0.02561989054083824, 0.6243025660514832, 0.09099326282739639, 0.0679265707731247, 0.1091909110546112, -0.3706962466239929, 0.4232214689254761, 0.17381024360656738, 0.19174431264400482, 0.12955425679683685, 0.031416457146406174, -0.1680610179901123, -0.22343963384628296, 0.13005293905735016, -0.26814723014831543, 0.02573573589324951, 0.005093270447105169, -0.022616427391767502, -0.05963189899921417, -0.23070161044597626, 0.10416888445615768, -0.16732993721961975, -0.30685511231422424, -0.34760066866874695, -0.03605964407324791, 0.0075611937791109085, -0.2118707150220871, -0.2086564600467682, 0.016117820516228676, -0.09040330350399017, 0.26141592860221863, 0.24257563054561615, -0.016888435930013657, 0.17727915942668915, -0.06560801714658737, 0.20630483329296112, -0.21707868576049805, 0.0898505374789238, -0.32144981622695923, -0.1065092608332634, 0.13411062955856323, -0.04012088105082512, -0.09436210244894028, -0.23650063574314117, 0.07985906302928925, -0.07180377095937729, 0.2409152090549469, -0.017446719110012054, -0.1738882213830948, 0.07332015037536621, -0.06432284414768219, 0.3857327401638031, -0.2116473913192749, -0.20006036758422852, -0.26809215545654297, 0.38476747274398804, -0.09758634865283966, -0.027922004461288452, -0.016423333436250687, 0.013880567625164986, -0.10647904872894287, -0.41243070363998413, 0.10824137926101685, -0.08530241996049881, 0.07523498684167862, 0.13807494938373566, 0.21719615161418915, -0.18273617327213287, 0.24774321913719177, 0.2172960788011551, 0.07146050035953522, -0.08237310498952866, -0.0716167688369751, -0.04310186207294464, 0.1253102868795395, -0.04158430173993111, 0.29450902342796326, 0.07600951194763184, -0.0010167816653847694, -0.02252088487148285, 0.0028060423210263252, 0.2817825675010681, -0.09389722347259521, -0.48154857754707336, -0.2629092037677765, -0.020464906468987465, -0.170761376619339, -0.11410710215568542, 0.07431694865226746, -0.1751893311738968, -0.21746665239334106, 0.01558798085898161, -0.10918454080820084, 0.10966406762599945, -0.14499007165431976, 0.057971686124801636, 0.2621101438999176, -0.13774798810482025, 0.20131152868270874, -0.0630035474896431, 0.1683662235736847, 0.565122663974762, -0.06376659125089645, -0.008535574190318584, 0.10072530061006546, 0.926426112651825, -0.18330496549606323, 0.09621009230613708, -0.011507929302752018, 0.015602448023855686, -0.1515117734670639, -0.13538897037506104, -0.24184873700141907, -0.09315244853496552, -0.2635655999183655, 0.21996185183525085, -0.09218884259462357, 0.11572591215372086, 0.08881480246782303, 0.13673964142799377, 0.2865959405899048, 0.0925016701221466, 0.1403353363275528, -0.3800128996372223, 0.23555563390254974, 0.561140239238739, 0.12977124750614166, -0.11125587671995163, 0.07682320475578308, -0.0031175140757113695, 0.03802785649895668, 0.05042223259806633, -0.10476674884557724, 0.14193645119667053, -0.06758365780115128, -0.19866906106472015, -0.034791965037584305, -0.010737567208707333, 0.334616482257843, -0.013696043752133846, 0.008911310695111752, -0.09767550975084305, 0.09984821826219559, 0.06300467252731323, 0.059240132570266724, -0.047505080699920654, 0.08419517427682877, -0.0459059402346611, -0.11378563195466995, 0.0950835570693016, -0.026153873652219772, 0.11311176419258118, 0.03705023229122162, 0.035789087414741516, 0.0018347325967624784, 0.049099069088697433, -0.10806269943714142, -0.01092058140784502, -0.03942351043224335, -0.1150156781077385, -0.05552012100815773, -0.29830431938171387, -0.01761864684522152, 0.10546738654375076, -0.07819074392318726, -0.3295343518257141, 0.24071025848388672, -0.006354381330311298, 0.26858705282211304, 0.03913243114948273, 0.10039912164211273, -0.03941337391734123, -0.034857627004384995, 0.09448148310184479, 0.0771978422999382, -0.13578294217586517, 0.03613068908452988, -0.019616492092609406, -0.06918369978666306, -0.10332360863685608, 0.09388694167137146, -0.1830979883670807, -0.04090774431824684, -0.2186475247144699, -0.011566797271370888, -0.004630568902939558, 0.05197226628661156, -0.2330089807510376, -0.0983542948961258, -0.10902481526136398, 0.41650205850601196, 0.10785336792469025, 0.059426285326480865, -0.0245354026556015, 0.10227733105421066, 0.11719463765621185, -0.0930410623550415, 0.0498531199991703, 0.13250786066055298, -0.011371887288987637, 0.021020440384745598, -0.057298485189676285, -0.26642608642578125, -0.1142587885260582, -0.2779618203639984, 0.10524245351552963, -0.03867558017373085, 0.07429580390453339, 0.08495596796274185, -0.036627449095249176, -0.24025166034698486, -0.19008950889110565, -0.040927108377218246, 0.153018519282341, -0.04925406724214554, -0.1179179921746254, -0.09980925917625427, 0.17661142349243164, -0.0788208618760109, 0.22997675836086273, 0.054697077721357346, -0.16557465493679047, 0.03528587892651558, -0.038462694734334946, -0.1231493130326271, 0.19904735684394836, -0.17166517674922943, 0.055657241493463516, 0.02689562737941742, 0.15111489593982697, -0.34755939245224, -0.07009393721818924, 0.18135033547878265, -0.17995105683803558, -0.008170939981937408, -0.09294495731592178, -0.1354925036430359, -0.06429952383041382, 0.049336452037096024, 0.053666528314352036, -0.0007572437752969563, -0.002216797322034836, -0.1910191923379898, 0.09108846634626389, 0.07846677303314209, -0.21700625121593475, -0.15117669105529785, 0.24514295160770416, 0.25538885593414307, -0.14835955202579498, 0.05537325143814087, 0.18117105960845947, 0.08453777432441711, 0.10721012204885483, 0.2686341106891632, -0.04871812090277672, 0.18006406724452972, -0.20864209532737732, -0.07060948014259338, -0.017433512955904007, 0.08230719715356827, -0.09997686743736267, -0.08768507838249207, -0.12056521326303482, 0.202529639005661, -0.0015750557649880648, 0.20987975597381592, -0.08601982146501541, -0.08921864628791809, -0.18823622167110443, -0.1718212068080902, -0.06835655122995377, -0.020313801243901253, 0.1842157542705536, 0.06728102266788483, 0.0854203999042511, -0.16713647544384003, 0.2031099796295166, -0.05470080301165581, -0.07846274971961975, -0.147030308842659, 0.062317587435245514, 0.19115112721920013, -0.03526991233229637, -0.19239212572574615, -0.11770880222320557, 0.04174960032105446, 0.03866729512810707, -0.02764146961271763, -0.12435059994459152, 0.11220815032720566, 0.04116223752498627, 0.1406731903553009, -0.17422959208488464, -0.16333837807178497, 0.14155009388923645, -0.07752303779125214, -0.009370864368975163, -0.14370161294937134, -0.07448019087314606, 0.1427418738603592, -0.053874384611845016, 0.5127062797546387, 0.014502182602882385, 0.0019266384188085794, -0.007228813599795103, -0.13045090436935425, 0.16214348375797272, -0.19060640037059784, 0.008554731495678425, -0.1791502982378006, 0.14225295186042786, 0.1941836029291153, -0.1129712238907814, 0.10770511627197266, 0.11320196092128754, -0.12406016886234283, 0.0016979662468656898, -0.037473421543836594, -0.008413377217948437, -0.068382129073143, -0.01901889778673649, 0.033284347504377365, -0.2579372227191925, 0.4340782165527344, 0.14776305854320526, -0.008750725537538528, -0.45094406604766846, 0.2871677577495575, 0.05382317677140236, -0.11821203678846359, -0.3154924809932709, -0.07408826053142548, 0.09923233836889267, -0.22319649159908295, 0.08509363979101181, -0.05112385004758835, 0.11463385820388794, 0.309490442276001, -0.05318795517086983, -0.1203676387667656, 0.018643096089363098, -0.031921882182359695, -0.04731448367238045, -0.09482258558273315, 0.1242305263876915, -0.02427259460091591, -0.06508917361497879, 0.04445783048868179, -0.16786767542362213, 0.026680869981646538, -0.04483460634946823, -0.1333029568195343, 0.18638387322425842, -0.13792972266674042, 0.07774010300636292, 0.18794108927249908, -0.04705965146422386, 0.06558538228273392, -0.2686305046081543, -0.1744740605354309, 0.32534995675086975, 0.02876131609082222, 0.16492661833763123, 0.03879816457629204, 0.014037404209375381, 0.10573351383209229, 0.10534624755382538, 0.0988142192363739, 0.21020221710205078, -0.07762280851602554, 0.06679767370223999, -0.06512584537267685, -0.002568475203588605, 0.19881251454353333, -0.13215228915214539, 0.13487344980239868, 0.039681125432252884, 0.2378178834915161, 0.07193226367235184, 0.042089659720659256, -0.16721989214420319, 0.2150925248861313, 0.27489909529685974, 0.10254411399364471, -0.12817762792110443, 0.06266932934522629, -0.08851786702871323, -0.146208256483078, -0.11171678453683853, -0.13260841369628906, 0.06851817667484283, 0.1562327891588211, -0.0923304557800293, 0.1370125561952591, -0.015813929960131645, -0.027725253254175186, 0.08225928992033005, -0.10890033841133118, -0.0759727954864502, 0.0550982765853405, -0.01965365558862686, -0.107559934258461, 0.1976480931043625, -0.009066185913980007, 0.11090762913227081, -0.00792013481259346, 0.12132615596055984, 0.1913430243730545, 0.046027690172195435, 0.042937617748975754, -0.01683320291340351, 0.033159106969833374, 0.06918301433324814, -0.10850689560174942, -0.18471936881542206, -0.026776079088449478, 0.22844670712947845, 0.08638336509466171, -0.037639398127794266, 0.09806918352842331, -0.10145868360996246, -0.03693283721804619, -0.11671479791402817, -0.2109721302986145, -0.06414811313152313, 0.1645013391971588, 0.13389992713928223, -0.07599145919084549, -0.21168959140777588, -0.20876914262771606, -0.09266377985477448, -0.017147503793239594, 0.2262749969959259, -0.08334513753652573, -0.19043494760990143, 0.09300313889980316, -0.10034837573766708, 0.061101313680410385, 0.1891459822654724, -0.10350010544061661, 0.025948870927095413, 0.00723318150267005, -0.07232774794101715, -0.13206663727760315, -0.09293466806411743, -0.16391222178936005, -0.07990258187055588, 0.0388653427362442, 0.2818472385406494, -0.01906675659120083, -0.1382063925266266, -0.20457769930362701, -0.6515204310417175, 0.21304596960544586, -0.06994373351335526, -0.04087597876787186, 0.19429650902748108, 0.2821879982948303, -0.008588029071688652, -0.12414204329252243, 0.17325682938098907, -0.05312762036919594, -0.013043590821325779, 0.14640536904335022, -0.23731695115566254, 0.2668643593788147, -0.10655135661363602, 0.18591144680976868, -0.09552989155054092, 0.08015774935483932, -0.008485606871545315, 0.2334832102060318, 0.08377493917942047, 0.1880752593278885, -0.10056032985448837, -0.04320608451962471, 0.1921786516904831, -0.005931883119046688, 0.10253793001174927, -0.03543157875537872, 0.07341338694095612, -0.13143685460090637, 0.2015630155801773, -0.10564570873975754, 0.035907868295907974, 0.0540245957672596, 0.09767080843448639, 0.269413024187088, 0.026086177676916122, 0.022921178489923477, -0.18013189733028412, 0.21805405616760254, 0.14403656125068665, 0.4092305302619934, 0.09799358993768692, -0.10992460697889328, 0.10311171412467957, 0.08875729888677597, -0.10857102274894714, -0.05091419070959091, 0.0019697402603924274, -0.03392886742949486, -0.036213573068380356, -0.03912906348705292, -0.1955936700105667, -0.13621896505355835, 0.009492865763604641, 0.09189724177122116, -0.01960795745253563, 0.00837339460849762, 0.18956106901168823, 0.08033181726932526, 0.013817976228892803, -0.012045864015817642, -0.26292961835861206, -0.17250977456569672, -0.14442329108715057, 0.04245505854487419, 0.24603116512298584, 0.19752781093120575, 0.025267183780670166, 0.4294821619987488, -0.14614422619342804, -0.09189455211162567, -0.020942246541380882, -0.009987620636820793, 0.0767316222190857, 0.11097077280282974, 0.08011701703071594, -0.20684334635734558, 0.839313805103302, -0.09307408332824707, 0.05845785513520241, 0.13854020833969116, -0.14586730301380157, -0.1810302436351776, 0.1822369247674942, -0.09067148715257645, -0.007736994419246912, 0.28143197298049927, 0.16712993383407593, 0.0866546556353569, -0.01554217841476202, -0.1315784752368927, -0.12406720966100693, -0.21258340775966644, 0.20702068507671356, 0.19756530225276947, 0.27082961797714233, -0.10909757763147354, -0.06711646169424057, -0.07469689100980759, 0.21925701200962067, -0.0748891606926918, 0.2019999623298645, 0.2215343862771988, 0.06659607589244843, -0.11567749083042145, -0.3839688003063202, 0.6751143336296082, 0.11433587968349457, 0.012153130024671555, 0.26829928159713745, -0.11851008236408234, 0.13915829360485077, 0.012574661523103714, 0.13418564200401306, 0.289365291595459, -0.015784475952386856, 0.18774276971817017, 0.014367698691785336, 0.25201311707496643, -0.2612660229206085, 0.3631522059440613, 0.22319361567497253, -0.1089550256729126, 0.07689358294010162, 0.11215853691101074, 0.07417713105678558, 0.08024493604898453, 0.13473719358444214, -0.16268391907215118, 0.002619938226416707, -0.038565997034311295, -0.19389557838439941, 0.14629091322422028, -0.4272958040237427, -0.16025961935520172, -0.012923122383654118, -0.06703432649374008, 0.11654282361268997, -0.034943800419569016, 0.07781277596950531, 0.061255257576704025, -0.4190458059310913, -0.15139280259609222, -0.16244161128997803, 0.15564103424549103, 0.2578277289867401, -0.16727180778980255, 0.21842509508132935, -0.14920322597026825, -0.034850314259529114, -0.07377883046865463, 0.27987140417099, 0.27504977583885193, 0.06491106003522873, 0.0051788873970508575, -0.025639180094003677, -0.04788514971733093, 0.0013616213109344244, -0.006472501438111067, 0.3523389995098114, 0.08453736454248428, -0.12026099115610123, 0.07591760903596878, 0.21636424958705902, 0.06416052579879761, 0.21996058523654938, 0.17343081533908844, 0.036556076258420944, -0.0003868575731758028, -0.020486369729042053, -0.05563453957438469, -0.18890948593616486, 0.12190854549407959, 0.3294737637042999, -0.0809231773018837, 0.0801437646150589, 0.06616301834583282, -0.09945426136255264, 0.05045269802212715, 0.0866035595536232, -0.14072352647781372, -0.10586827993392944, 0.100577212870121, 0.09979572892189026, 0.020260652527213097, 0.14819635450839996, 0.3138410449028015, 0.05335640162229538, -0.11331144720315933, -0.07911781221628189, -0.0024797467049211264, 0.22635263204574585, 0.13271194696426392, 0.05741460621356964, 0.028062967583537102, 0.1033298447728157, 0.10582850873470306, -0.11338109523057938, 0.1501879096031189, 0.11297831684350967, 0.18317820131778717, 0.10201693326234818, 0.062258701771497726, 0.05884876847267151, -0.09701015800237656, 0.04479816555976868, 0.08500839024782181, -0.059807296842336655, -0.13523177802562714, -0.009711622260510921, 0.06667967885732651, -0.019988926127552986, -0.015371947549283504, 0.22692109644412994, 0.21278207004070282, -0.051212891936302185, 0.158402219414711, -0.04532303288578987, 0.2066492885351181, -0.004969472531229258, -0.044667236506938934, -0.10283558070659637, -0.0195058211684227, 0.39327165484428406, 0.16944336891174316, 0.17102596163749695, 0.1391202211380005, -0.6233232617378235, -0.028956297785043716, -0.08196026086807251, -0.09222031384706497, 0.0076366085559129715, -0.07041632384061813, 0.33032599091529846, 0.1405407190322876, 0.3081870675086975, -0.5590797066688538, 0.2200530469417572, 0.285742849111557, 0.1014326736330986, -0.09271688759326935, -0.022526029497385025, 0.41229692101478577, 0.12836094200611115, 0.17909090220928192, 0.19915883243083954, 0.40017515420913696, 0.2509606182575226, -0.5008503198623657, 0.015627186745405197, 0.012044900096952915, -0.23444876074790955, -0.09742935001850128, 0.07311968505382538, 0.05593707785010338, 0.10402797907590866, -0.11409864574670792, 0.0250912643969059, -0.06905051320791245, 0.45794254541397095, 0.0358707457780838, 0.060966163873672485, 0.026873057708144188, 0.07845893502235413, 0.06705856323242188, -0.4128795862197876, 0.45859476923942566, -0.11416314542293549, 0.007467924617230892, 0.1580895632505417, -0.15606023371219635, 0.04714859649538994, -0.07300125807523727, -0.13178925216197968, -0.39855456352233887, 0.03532218188047409, 0.029873594641685486, 0.0965418815612793, 0.06000980734825134, 0.027462905272841454, -0.0061833206564188, 0.29554182291030884, 0.057355545461177826, 0.11591296643018723, 0.2524559795856476, 0.06161785498261452, -0.13045905530452728, 0.14744272828102112, 0.14128795266151428, -0.055956415832042694, -0.25489649176597595, 0.4574269950389862, 0.012671127915382385, 0.40680748224258423, 0.47800371050834656, -0.03270018845796585, -0.1674463301897049, 0.48347795009613037, -0.0882829800248146, -0.35881081223487854, 0.0746111199259758, 0.379134863615036, -0.12460047751665115, 0.19927766919136047, 0.10905759036540985, -0.05368364229798317, 0.36902546882629395, -0.010743893682956696, 0.21702945232391357, -0.0837588831782341, 0.06764774024486542, -0.020436828956007957, 0.8317368626594543, 0.026352785527706146, -0.21446558833122253, 0.34993797540664673, 0.11594180762767792, 0.10324318706989288, -0.09498444944620132, 0.031880833208560944, 0.003970534075051546, 0.2457137256860733, 0.49932095408439636, 0.20983730256557465, -0.24810291826725006, -0.12112672626972198, -0.158529594540596, -0.12369918078184128, -0.1707172393798828, -0.06171198934316635, -0.25731170177459717, 0.010471967980265617, 0.05083611607551575, 0.008918007835745811, 0.07387541979551315, -0.22795669734477997, -0.15282529592514038, 0.2666664123535156, -0.2049250453710556, -0.08520592004060745, 0.0060483538545668125, -0.1530856192111969, 0.0657251700758934, -0.25978976488113403, 0.13709023594856262, 0.025604775175452232, 0.03140782192349434, -0.11188194155693054, 0.22831714153289795, -0.035562288016080856, -0.031975336372852325, -0.13373920321464539, -0.09062089771032333, 0.12781687080860138, -0.012950094416737556, -0.11297162622213364, 0.10531819611787796, 0.013969006016850471, -0.3340793251991272, 0.003758019767701626, 0.07036830484867096, 0.00907677598297596, -0.1003274992108345, 0.10714554041624069, -0.28235283493995667, -0.21665392816066742, -0.02148508094251156, -0.08155640214681625, -0.06917865574359894, -0.019611939787864685, -0.0894443690776825, 0.059232961386442184, 0.018773721531033516, -0.09725832939147949, -0.2412794977426529, -0.17552052438259125, -0.15281669795513153, -0.15069301426410675, 0.2139928936958313, 0.15887071192264557, -0.10609528422355652, 0.10608071833848953, 0.16978150606155396, 0.12024077028036118, 0.1467900276184082, 0.2106175720691681, -0.040272753685712814, 0.013942388817667961, 0.16986967623233795, 0.2839008569717407, 0.25983256101608276, -0.0005219330778345466, 0.1910915970802307, -0.09844344854354858, -0.03181667625904083, -0.2267811894416809, 0.2066376805305481, -0.17621737718582153, -0.25250712037086487, 0.04489944875240326, 0.06572244316339493, -0.13577601313591003, 0.31788328289985657, -0.2069980651140213, -0.24486258625984192, 0.09834063053131104, -0.0419173464179039, 0.19074085354804993, -0.18463437259197235, -0.05142764002084732, 0.18097199499607086, -0.2185540348291397, -0.1092984676361084, -0.0451713390648365, 0.10388845950365067, 0.10763798654079437, 0.28531375527381897, 0.17907258868217468, -0.1590327024459839, 0.16027754545211792, -0.04296129569411278, 0.10007652640342712, 0.21306101977825165, 0.0962645411491394, 0.09838523715734482, 0.34900209307670593, 0.19915543496608734, -0.26310816407203674, 0.04202915355563164, 0.025921104475855827, -0.06106872111558914, -0.05331442132592201, 0.08629439026117325, -0.1366586536169052, 0.18812894821166992, 0.19211746752262115, -0.13996821641921997, -0.0012072151293978095, 0.027195477858185768, -0.051846519112586975, -0.011290030553936958, 0.008341795764863491, 0.16938850283622742, -0.2348753660917282, -0.16787326335906982, 0.050733812153339386, -0.24649347364902496, -0.024307619780302048, -0.06752578914165497, -0.17894670367240906, 0.13789263367652893, 0.005089911166578531, 0.021525194868445396, -0.12275279313325882, -0.12545625865459442, -0.0036560706794261932, 0.0942135602235794, -0.001796955126337707, -0.06616944819688797, -0.08638399094343185, 0.33989325165748596, -0.09529197216033936, 0.12443016469478607, 0.12359821051359177, 0.10068228095769882, -0.17208148539066315, -0.08576171845197678, -0.018322324380278587, 0.050663385540246964, 0.06948332488536835, 0.2260303646326065, 0.1435972899198532, 0.06265493482351303, -0.011239670217037201, -0.05047917738556862, 0.012127658352255821, 0.04646851867437363, 0.11838391423225403, 0.10841550678014755, -0.1891920417547226, 0.290091872215271, 0.07382630556821823, 0.0003748887684196234, 0.12384647130966187, 0.03716275095939636, 0.17545363306999207, 0.10494671761989594, 0.03730117902159691, -0.20946818590164185, -0.11023570597171783, 0.0597103051841259, -0.3883526921272278, 0.09965246170759201, 0.12215292453765869, -0.003350670449435711, -0.04402792081236839, -0.0476277694106102, -0.1074681505560875, 0.19391600787639618, -0.02567257732152939, -0.004483344964683056, 0.05136772617697716, 0.01924242079257965, -0.015582178719341755, 0.1397310197353363, -0.08384399116039276, 0.10961209982633591, -0.013314853422343731, -0.04049086943268776, 0.11883949488401413, 0.09894751757383347, -0.05456706881523132, 0.15713226795196533, 0.17949005961418152, 0.2341870367527008, -0.12857839465141296, -0.1377498060464859, 0.04750009998679161, 0.275329053401947, -0.01588132418692112, -0.3454047441482544, 0.041225675493478775, -0.028878265991806984, -0.0540919192135334, 0.2059784233570099, -0.013470855541527271, -0.10130095481872559, 0.008998140692710876, -0.0018031332874670625, -0.03350567817687988, -0.253000408411026, -0.024233072996139526, 0.1855229139328003, 0.017164532095193863, 0.05613839253783226, 0.22884857654571533, -0.16360622644424438, -0.2986209988594055, 0.1419786512851715, 0.03529277443885803, -0.19747917354106903, 0.05532079190015793, 0.22388051450252533, 0.3258077800273895, -0.020290667191147804, -0.05435532331466675, -0.16461339592933655, 0.11260167509317398, 0.005495897494256496, -0.06731611490249634, 0.09354552626609802, 0.042436953634023666, -0.06973781436681747, -0.013784760609269142, 0.00044554125634022057, 0.04498247802257538, 0.15734852850437164, 0.022737519815564156, -0.25455379486083984, 0.07306322455406189, 0.07331503927707672, 0.11479675769805908, -0.04241324961185455, 0.13064901530742645, 0.017868611961603165, -0.04713422805070877, 0.2557925283908844, -0.15029138326644897, -0.05942787975072861, 0.08016729354858398, -0.021564597263932228, -0.06349284201860428, -0.13374289870262146, 0.03018304519355297, 0.16207151114940643, -0.13863076269626617, -0.00910925678908825, -0.04730231687426567, 0.019141746684908867, 0.15399719774723053, -0.061372824013233185, -0.0069897836074233055, 0.2695205509662628, -0.060734186321496964, 0.07546697556972504, 0.1871301382780075, 0.0410720594227314, 0.06198533624410629, -0.00045437488006427884, 0.027646789327263832, 0.05906742066144943, 0.03119748830795288, -0.14151835441589355, 0.10093897581100464, -0.24542032182216644, 0.000311967363813892, -0.07112393528223038, 0.1796799898147583, 0.09833349287509918, -0.1384136825799942, 0.1945599913597107, 0.07575565576553345, 0.1909078061580658, 0.059273432940244675, 0.1560484766960144, 0.1733144372701645, -0.3799853026866913, 0.24996115267276764, 0.13419143855571747, -0.1261460930109024, -0.0681559294462204, -0.04756191372871399, -0.1285642683506012, -0.1634169965982437, 0.07506248354911804, 0.06814929842948914, -0.06727580726146698, -0.15661180019378662, -0.23856160044670105, 0.04724184423685074, -0.08997052162885666, 0.13113875687122345, 0.12693288922309875, -0.1257065236568451, 0.05831282213330269, 0.05143168196082115, -0.06263847649097443, 0.14127188920974731, -0.06261520832777023, 0.036167778074741364, 0.05134163051843643, -0.11180385947227478, -0.12066301703453064, 0.03293483704328537, 0.09259627014398575, -0.3630251884460449, 0.004095984157174826, 0.03749115392565727, 0.0019456654554232955, 0.1222626194357872, 0.2168230265378952, -0.0018200594931840897, -0.10896642506122589, -0.15807504951953888, -0.18267269432544708, -0.14597512781620026, 0.017995072528719902, -0.048785023391246796, -0.005510212853550911, 0.3239557147026062, -0.02799638733267784, -0.13342735171318054, -0.15909095108509064, -0.02843290939927101, -0.16185744106769562, 0.06002172455191612, -0.03595362976193428, -0.0891086757183075, -0.1425277441740036, -0.06605462729930878, -0.07604984939098358, 0.0441574826836586, 0.013691112399101257, -0.049519021064043045, -0.1934051215648651, -0.07434234768152237, 0.01285917591303587, 0.17814967036247253, -0.1540357768535614, -0.1779576689004898, 0.009897067211568356, -0.17169803380966187, 0.17143766582012177, 0.1426328718662262, 0.015506657771766186, 0.2286442369222641, -0.008897745050489902, -0.03183036297559738, 0.07117670774459839, 0.07578165084123611, -0.1891736388206482, 0.12420641630887985, 0.040303055197000504, 0.38462120294570923, 0.07567185908555984, 0.06497607380151749, 0.08407973498106003, -0.22801430523395538, 0.06486515700817108, 0.08761217445135117, 0.009867534041404724, -0.03915293887257576, 0.09126440435647964, 0.07655484974384308, -0.00796477124094963, -0.13376282155513763, 0.041560545563697815, 0.03059198521077633, 0.13238582015037537, -0.17202390730381012, 0.07799423485994339, 0.018957216292619705, -0.10646418482065201, 0.27970170974731445, -0.27828875184059143, 0.04438495635986328, 0.0929521918296814, -0.06362393498420715, -0.06512189656496048, 0.02280445210635662, 0.4224000573158264, -0.053586624562740326, 0.17026641964912415, -0.16083195805549622, -0.013010473921895027, 0.07872533053159714, 0.15137118101119995, 0.07643688470125198, -0.0333542637526989, 0.11255018413066864, 0.06596836447715759, 0.38390159606933594, 0.20183971524238586, -0.056026119738817215, -0.08368740230798721, -0.05039277300238609, -0.09304630756378174, 0.14550943672657013, -0.10481914132833481, -0.039421431720256805, -0.030604097992181778, 0.03746446222066879, -0.28319621086120605, 0.20947135984897614, -0.023534661158919334, -0.1918327659368515, 0.04212617874145508, -0.08890079706907272, -0.07792579382658005, -0.02793160080909729, -0.1022186279296875, -0.2159571498632431, 0.1625131517648697, -0.028706995770335197, 0.17201343178749084, -0.1056043952703476, 0.043771032243967056, 0.2775940001010895, 0.19984295964241028, -0.0907549262046814, 0.05320985987782478, -0.1277196854352951, 0.15923219919204712, -0.07855098694562912, -0.18082763254642487, -0.11908403784036636, -0.07792916148900986, 0.12082630395889282, 0.01021076925098896, 0.20034195482730865, 0.1870117038488388, -0.06938304752111435, 0.00037553321453742683, 0.012896226719021797, -0.21285930275917053, -0.06802069395780563, -0.19210295379161835, -0.11276852339506149, -0.2840925455093384, 0.0833238735795021, 0.008558649569749832, 0.03931673616170883, 0.2165767252445221, -0.22801446914672852, -0.14822325110435486, 0.00547022046521306, -0.12067002058029175, 0.10085583478212357, 0.08822688460350037, 0.3548787236213684, -0.13564008474349976, 0.21180258691310883, -0.22101999819278717, -0.11453838646411896, 0.05054071918129921, 0.05310700088739395, -0.12880252301692963, 0.2821980118751526, -0.1361914873123169, -0.24483662843704224, -0.15911053121089935, 0.03636031597852707, 0.12190710753202438, -0.0293247252702713, -0.20605717599391937, 0.08831042051315308, -0.09205800294876099, 0.07594896107912064, 0.047901738435029984, 0.0700027346611023, -0.13665072619915009, 0.1278802901506424, 0.014759175479412079, 0.169215589761734, -0.13542532920837402, 0.05375979468226433, -0.025427795946598053, 0.10228817164897919, 0.1731465756893158, 0.13893698155879974, -0.06849388778209686, 0.29047510027885437, -0.11181247979402542, -0.4123009443283081, 0.13592585921287537, -0.13928915560245514, -0.19008851051330566, 0.10983803868293762, -0.020843951031565666, -0.05927024036645889, 0.12004860490560532, 0.09594784677028656, 0.025373542681336403, -0.11551717668771744, -0.021126532927155495, 0.07589921355247498, 0.2532714903354645, 0.0363190658390522, 0.26013609766960144, 0.37096187472343445, 0.05434802919626236, 0.2280685305595398, 0.10249931365251541, -0.015847863629460335, 0.07405160367488861, -0.1516849845647812, -0.07015173137187958, -0.05288053676486015, 0.05932498350739479, 0.12867490947246552, -0.04950529709458351, -0.06186927109956741, -0.08052033185958862, 0.1503836214542389, 0.11736690998077393, -0.058761775493621826, 0.06947877258062363, -0.03231080248951912, 0.019489800557494164, -0.03470216318964958, -0.12784722447395325, 0.14973363280296326, 0.08433206379413605, -0.12297531217336655, -0.10272713750600815, -0.11112368106842041, 0.030676940456032753, -0.017018424347043037, -0.04629914462566376, 0.278189092874527, -0.022527171298861504, 0.35964563488960266, -0.09665732830762863, 0.21517632901668549, -0.14312390983104706, 0.22241409122943878, -0.08609510213136673, -0.18604570627212524, -0.0008050984470173717, 0.07970388233661652, -0.1654004007577896, -0.05410474166274071, 0.1041216105222702, -0.15053437650203705, 0.12687453627586365, -0.0034106411039829254, 0.12441501766443253, -0.008622076362371445, 0.16160789132118225, -0.01992836408317089, -0.0088738314807415, 0.10049453377723694, -0.02835134230554104, -0.3323209583759308, -0.10683079808950424, 0.30009081959724426, -0.016446568071842194, -0.10386486351490021, 0.07228094339370728, -0.008510079234838486, 0.05962004140019417, -0.0489887073636055, 0.05174495279788971, 0.1483730524778366, -0.08867069333791733, -0.11536536365747452, 0.012810507789254189, 0.08203346282243729, 0.28133586049079895, 0.13513177633285522, -0.122957244515419, 0.30958080291748047, 0.09005650132894516, -0.09420455992221832, 0.013306478038430214, 0.31912654638290405, 0.028017504140734673, -0.00467657670378685, 0.12398692220449448, 0.14495283365249634, -0.034265853464603424, 0.014079195447266102, 0.027898037806153297, 0.05730367824435234, 0.165681391954422, -0.06669347733259201, 0.20529858767986298, -0.07236911356449127, -0.1427060216665268, -0.1032743752002716, 0.016687078401446342, -0.1654268354177475, 0.1284572333097458, -0.035558633506298065, -0.05083198845386505, 0.055455319583415985, 0.12613485753536224, -0.12983524799346924, 0.192485049366951, -0.2165103405714035, 0.19415119290351868, -0.002591856522485614, -0.11970788985490799, 0.06386754661798477, 0.1152779757976532, 0.08044786006212234, -0.11195530742406845, -0.02084696851670742, 0.190877303481102, -0.1368369311094284, 0.07480553537607193, -0.027209222316741943, -0.006059157196432352, 0.14539237320423126, -0.11587435752153397, -0.19561775028705597, -0.08227086812257767, 0.17295454442501068, 0.014102460816502571, -0.04066655784845352, 0.1252817064523697, 0.061553023755550385, 0.05401776731014252, -0.015314395539462566, -0.06597807258367538, 0.33702361583709717, 0.06447217613458633, 0.18398378789424896, 0.2807605266571045, -0.09056675434112549, 0.3066115081310272, 0.09830426424741745, 0.11497434228658676, 0.16918708384037018, 0.06888405233621597, -0.12317677587270737, -0.14955511689186096, 0.009225090965628624, 0.06042098626494408, 0.03810814395546913, -0.1864159256219864, 0.29531413316726685, 0.07639466971158981, -0.0016249774489551783, 0.07300452888011932, -0.036742206662893295, 0.09607432037591934, -0.3269282877445221, 0.30729570984840393, 0.12388730049133301, 0.1527354121208191, -0.24126432836055756, 0.023617049679160118, -0.21703168749809265, 0.12716785073280334, -0.19474482536315918, -0.05557120591402054, -0.028061825782060623, -0.11862678825855255, 0.1093134954571724, 0.20616023242473602, -0.08475231379270554, 0.13433724641799927, -0.06940697878599167, -0.04603514447808266, 0.03425731509923935, -0.022150972858071327, -0.135517418384552, -0.3821199834346771, -0.05548999458551407, 0.038851309567689896, -0.03846591338515282, -0.38491958379745483, -0.21570909023284912, -0.23391516506671906, -0.029767103493213654, 0.008708082139492035, -0.013364558108150959, -0.08577853441238403, -0.16887320578098297, -0.2956715226173401, 0.03836514428257942, -0.007915981113910675, -0.339047908782959, -0.2305881232023239, 0.3840302526950836, -0.3415154218673706, -0.2305208444595337, 0.05672997608780861, 0.41852784156799316, -0.09728533029556274, -0.07297980785369873, 0.3158533275127411, 0.337924063205719, 0.10799406468868256, -0.10361018776893616, -0.05334217846393585, -0.10217975825071335, 0.17993824183940887, 0.059087492525577545, 0.06962384283542633, -0.0453384704887867, 0.07299312204122543, 0.060663942247629166, -0.1187872514128685, 0.08158835768699646, -0.030739612877368927, 0.17992642521858215, -0.07169513404369354, 0.21547582745552063, -0.007500688545405865, -0.10181676596403122, -0.1450686901807785, -0.06417775899171829, -0.10711341351270676, 0.3669684827327728, -0.04684026911854744, 0.23257383704185486, -0.1597461849451065, -0.2373170256614685, 0.001896049128845334, -0.1569283902645111, 0.2321043312549591, -0.004202370997518301, 0.13012343645095825, 0.3359670639038086, 0.14168821275234222, -0.16153831779956818, -0.22394384443759918, -0.03788815811276436, -0.1071598082780838, -0.09888248890638351, 0.17940691113471985, -0.027870286256074905, -0.006731447298079729, -0.11180142313241959, 0.16412968933582306, -0.08206027746200562, 0.06032181531190872, -0.026994425803422928, -0.05482795089483261, 0.044471338391304016, -0.07236392796039581, -0.02821567840874195, 0.04160415753722191, -0.10957837849855423, 0.11515146493911743, -0.006154963281005621, 0.08124389499425888, 0.10088637471199036, -0.007665312383323908, 0.0968746542930603, 0.053987886756658554, -0.186802476644516, -0.004401215817779303, 0.13821358978748322, 0.11817548424005508, -0.11303547024726868, -0.18896585702896118, 0.02430490404367447, 0.1619468629360199, 0.10051131248474121, -0.021214507520198822, 0.14035236835479736, -0.24556773900985718, -0.06089982017874718, 0.12029217928647995, -0.13258041441440582, 0.037342656403779984, -0.09543657302856445, -0.042503226548433304, -0.027660798281431198, -0.011147556826472282, -0.09591887146234512, 0.10225995630025864, 0.3188478648662567, 0.24516955018043518, -0.18544068932533264, -0.14178358018398285, 0.005879541859030724, -0.005068580154329538, -0.16206955909729004, 0.16339987516403198, -0.02645147405564785, 0.03132256120443344, 0.13185317814350128, -0.17244064807891846, -0.19708557426929474, 0.297932893037796, -0.1714845448732376, 0.0021809691097587347, -0.11419221013784409, 0.07818220555782318, -0.10738973319530487, -0.2115282267332077, 0.10842010378837585, 0.04947059601545334, 0.2435838282108307, -0.30351322889328003, 0.08346880972385406, -0.0683479979634285, -0.3441479504108429, -0.14774870872497559, 0.07229176163673401, 0.06550200283527374, -0.024911940097808838, -0.17025431990623474, -0.08916075527667999, 0.029967226088047028, -0.17494671046733856, 0.10716574639081955, 0.3301202952861786, 0.11179620772600174, 0.26964879035949707, 0.2443540394306183, 0.2611265778541565, 0.3756277561187744, 0.4335898458957672, -0.21792113780975342, -0.22052712738513947, 0.09984104335308075, -0.23125313222408295, 0.3914852440357208, 0.19738051295280457, -0.650441586971283, 0.06424945592880249, -0.28941449522972107, 0.23039720952510834, 0.12656982243061066, -0.08991257101297379, 0.42612406611442566, 0.02184326946735382, 0.11206760257482529, 0.045385781675577164, 0.03075675666332245, 0.04885619506239891, 0.09085127711296082, 0.20566339790821075, 0.13363017141819, -0.3973791003227234, 0.06518708914518356, 0.03694318234920502, -0.020725836977362633, -0.08263502269983292, 0.2207069993019104, 0.3724236488342285, -0.004691748414188623, 0.5087104439735413, 0.20057712495326996, -0.13013562560081482, 0.22352251410484314, 0.06981547176837921, 0.31164464354515076, -0.08114909380674362, -0.01251554861664772, 0.036839667707681656, 0.04180808365345001, -0.04365856200456619, 0.19436077773571014, 0.12370692938566208, -0.08573782444000244, 0.18352416157722473, 0.05593911185860634, 0.0882086381316185, 0.2631298899650574, 0.07306838780641556, -0.1287289708852768, 0.0015880404971539974, -0.19526724517345428, -0.038669321686029434, -0.012751590460538864, 0.04644814506173134, 0.02774696797132492, -0.10400398820638657, -0.23558343946933746, -0.03702418506145477, -0.09993619471788406, -0.036284759640693665, 0.05049746483564377, -0.0645371675491333, 0.017309295013546944, 0.06160162761807442, 0.06742708384990692, -0.04409615322947502, 0.21855224668979645, 0.1339125782251358, -0.06717217713594437, 0.03460502251982689, -0.03461914509534836, 0.35186517238616943, -0.058391913771629333, 0.11726025491952896, -0.04008258506655693, 0.07984684407711029, -0.13822536170482635, -0.08465516567230225, 0.2883489429950714, 0.24350586533546448, -0.03880219906568527, -0.07223207503557205, 0.14817671477794647, 0.031160514801740646, -0.07896022498607635, -0.03733956813812256, 0.05283677205443382, -0.008754204958677292, 0.07828494161367416, 0.16738878190517426, 0.11841762065887451, -0.14137500524520874, 0.061797916889190674, 0.11933682858943939, -0.05427324399352074, -0.14955364167690277, 0.34605827927589417, 0.155016228556633, -0.1585278958082199, 0.10644174367189407, -0.04946570098400116, -0.05961747094988823, 0.02700977772474289, 0.08515293151140213, -0.2399267703294754, -0.06566791981458664, 0.35611510276794434, 0.12027894705533981, -0.03624323382973671, -0.07473516464233398, 0.08426126092672348, 0.05715036019682884, 0.12199882417917252, -0.2603761851787567, -0.11944809556007385, -0.08593837916851044, 0.23798447847366333, 0.0459740050137043, 0.08292686939239502, 0.14680616557598114, -0.1917228102684021, 0.06950020045042038, 0.1807926744222641, 0.22887009382247925, 0.018984073773026466, -0.009658039547502995, 0.08402485400438309, -0.09547993540763855, -0.09227264672517776, -0.10641811788082123, 0.06359661370515823, -0.2380126267671585, -0.0696786567568779, -0.1194358617067337, 0.06874734908342361, 0.0346430167555809, 0.027884453535079956, -0.1286575049161911, 0.039385825395584106, 0.09109514951705933, 0.14288963377475739, -0.05501699820160866, 0.1321013867855072, 0.335195392370224, -0.10067453235387802, -0.024046054109930992, 0.13698303699493408, 0.0484311580657959, 0.13646705448627472, -0.08060689270496368, 0.0029484527185559273, 0.2037753313779831, -0.06147177144885063, 0.01317712850868702, -0.036761365830898285, 0.1600593477487564, 0.24568356573581696, -0.02890205755829811, 0.009514564648270607, -0.012702103704214096, -0.025100983679294586, -0.03787722811102867, -0.0069352127611637115, -0.0026889946311712265, 0.1481088101863861, -0.008749745786190033, -0.19690822064876556, 0.0736352726817131, -0.0950171947479248, 0.028087247163057327, -0.05331102013587952, 0.13118603825569153, 0.09961969405412674, 0.13439182937145233, 0.4624916613101959, 0.11080869287252426, -0.008025226183235645, -0.007831895723938942, -0.0035836745519191027, -0.07894178479909897, -0.1789177507162094, -0.24147850275039673, 0.148044615983963, -0.00544753996655345, 0.015423729084432125, 0.03086679056286812, -0.10062193870544434, -0.09109098464250565, -0.03313358873128891, 0.04478897526860237, 0.1265335977077484, 0.08235201984643936, -0.07616060227155685, -0.006909527350217104, 0.10082252323627472, -0.0325966477394104, 0.012076007202267647, -0.23281508684158325, 0.21750707924365997, -0.005724798422306776, 0.045281533151865005, -0.06100105494260788, 0.3341915011405945, 0.031524207442998886, 0.05386161804199219, -0.11048583686351776, -0.03069430962204933, -0.08089400082826614, 0.027254804968833923, 0.19071665406227112, -0.131199449300766, -0.12858137488365173, -0.053377166390419006, -0.1513790786266327, -0.18844221532344818, -0.0045005870051681995, -0.03429064154624939, -0.3278336822986603, -0.01212774496525526, 0.08630818873643875, -0.07469147443771362, -0.03444530442357063, 0.16140827536582947, -0.4884948134422302, -0.27068692445755005, 0.09675348550081253, -0.23892565071582794, 0.06101695075631142, -0.04368476942181587, 0.06901467591524124, -0.2601875960826874, -0.5031142830848694, 0.14871203899383545, 0.18626521527767181, 0.18126392364501953, 0.020588945597410202, -0.3017105460166931, -0.14185188710689545, 0.16062219440937042, 0.22637946903705597, 0.18710553646087646, 0.28924018144607544, 0.04508034139871597, 0.12464641034603119, 0.06924358755350113, 0.08870695531368256, 0.07266921550035477, 0.028104597702622414, 0.34023576974868774, 0.27157238125801086, 0.06289102137088776, -0.06935262680053711, 0.04508473724126816, 0.36092618107795715, 0.04089663177728653, -0.013383227400481701, 0.05732230469584465, -0.08190605789422989, -0.10709471255540848, -0.018094372004270554, 0.03923724219202995, -0.12191858142614365, 0.07350775599479675, 0.05612127110362053, -0.053504567593336105, 0.04854268208146095, 0.14382287859916687, 0.03291727229952812, -0.0026850637514144182, -0.1581469029188156, -0.08031657338142395, 0.27059561014175415, 0.16161182522773743, -0.09639377892017365, 0.17508915066719055, -0.044654764235019684, 0.21855415403842926, 0.023168116807937622, 0.12196187674999237, -0.1965722292661667, -0.014426030218601227, -0.11583995074033737, -0.03384173661470413, -0.036989886313676834, 0.07662856578826904, 0.05267121642827988, 0.010002019815146923, -0.16056865453720093, -0.23125126957893372, 0.1007845476269722, -0.18895480036735535, 0.0710134208202362, -0.21330176293849945, -0.13422127068042755, 0.015985654667019844, 0.008225378580391407, -0.07282844930887222, 0.2367561012506485, 0.1251486986875534, -0.12332765012979507, 0.09899449348449707, -0.12680017948150635, -0.08554144948720932, -0.4091131091117859, 0.13745008409023285, 0.2481049746274948, -0.0999445766210556, 0.058002933859825134, 0.1233934536576271, 0.2033739686012268, -0.05042371526360512, -0.10051733255386353, 0.28256669640541077, 0.014432089403271675, -0.05893978849053383, -0.14898766577243805, 0.013779486529529095, 0.16155974566936493, -0.20398950576782227, 0.016646647825837135, 0.08527541160583496, -0.20837309956550598, -0.08665204793214798, -0.05589786544442177, -0.2311250865459442, 0.09688776731491089, 0.4272804856300354, 0.02411946840584278, -0.13723014295101166, -0.2396114319562912, -0.052008725702762604, -0.012352412566542625, -0.22640348970890045, 0.08198746293783188, -0.02214987203478813, 9.248431888408959e-05, 0.056386012583971024, 0.021751878783106804, -0.02521894872188568, -0.14853742718696594, -0.001187079818919301, 0.1881415843963623, -0.008044185116887093, -0.12094493955373764, 0.07870666682720184, -0.1576680690050125, 0.01297585479915142, -0.019192367792129517, 0.1106032207608223, 0.05267838388681412, -0.024697091430425644, 0.11678468436002731, 0.1481013149023056, 0.08755169808864594, 0.19903424382209778, 0.4013250768184662, -0.0337955541908741, -0.12009289860725403, 0.383696049451828, -0.046361085027456284, 0.1186874508857727, -0.004091803915798664, -0.09485199302434921, 0.1723008006811142, -0.07908425480127335, 0.06835594773292542, 0.07198780030012131, 0.2850188612937927, -0.09749419242143631, 0.15645429491996765, 0.3022003471851349, -0.019218483939766884, -0.18125620484352112, 0.05138319358229637, 0.6701556444168091, 0.11558046191930771, -0.08076747506856918, -0.04851158335804939, 0.7125369906425476, 0.322302907705307, -0.17611248791217804, 0.1963736116886139, -0.08014977723360062, -0.19665436446666718, 0.1354479342699051, 0.16003163158893585, -0.22239939868450165, 0.003382030175998807, -0.28014224767684937, 0.17895211279392242, -0.22175662219524384, 0.06823919713497162, -0.01961231790482998, -0.017730962485074997, -0.022583404555916786, 0.09841714799404144, -0.0569484569132328, -0.008980066515505314, 0.010316279716789722, -0.2136109173297882, 0.1021968424320221, 0.12827624380588531, 0.21231935918331146, -0.10427304357290268, -0.06279872357845306, 0.3470725417137146, 0.010680893436074257, -0.031181804835796356, -0.16079743206501007, 0.02021154947578907, -0.10434877127408981, -0.3265323340892792, -0.08834000676870346, -0.10426612943410873, -0.17296239733695984, 0.11123894900083542, -0.08063796162605286, 0.05288442596793175, -0.02621140331029892, 0.030617615208029747, 0.032776255160570145, -0.10092786699533463, 0.0005818406352773309, -0.21566253900527954, 0.11167163401842117, 0.15435324609279633, -0.07101713120937347, -0.19235467910766602, 0.003317659255117178, -0.07013130933046341, -0.13456083834171295, 0.13497106730937958, -0.042197439819574356, 0.028789691627025604, -0.06607374548912048, -0.0862407386302948, 0.1751204878091812, 0.09903376549482346, 0.03551743924617767, -0.14276628196239471, 0.06315645575523376, -0.08526994287967682, 0.06589511781930923, 0.19897398352622986, -0.12081445008516312, -0.18695011734962463, 0.4762609899044037, 0.03787849843502045, 0.10002628713846207, -0.2254556268453598, -0.0008315762970596552, -0.02214639261364937, -0.042069509625434875, -0.19578562676906586, -0.028834190219640732, 0.01128618698567152, -0.2785738706588745, 0.032888468354940414, 0.0740920901298523, 0.11267543584108353, -0.21389970183372498, 0.07310453802347183, -0.024652445688843727, 0.17164716124534607, -0.09801164269447327, -0.1363566368818283, -0.08569435030221939, -0.0030537405982613564, -0.043275848031044006, -0.26831257343292236, -0.11088651418685913, -0.09086646139621735, -0.03391944244503975, 0.3472560942173004, 0.1068827360868454, 0.1556481570005417, -0.09349960833787918, -0.07397015392780304, 0.027584480121731758, 0.33967193961143494, -0.21936826407909393, -0.13795144855976105, 0.14592291414737701, -0.11940322816371918, 0.014647485688328743, 0.06591856479644775, -0.09721523523330688, 0.05849428102374077, 0.34951674938201904, -0.05356505513191223, 0.07908695936203003, 0.07556343823671341, -0.12587210536003113, 0.14816716313362122, 0.08469833433628082, 0.09292848408222198, -0.052791401743888855, -0.868340253829956, 0.010318160988390446, 0.061571359634399414, -0.17348559200763702, -0.12215491384267807, -0.025183670222759247, 0.03507442772388458, -0.5163148045539856, -0.011351324617862701, -0.13579776883125305, 0.140955850481987, -0.1124771237373352, -0.08424963057041168, 0.034341804683208466, 0.004105284344404936, 0.3691473603248596, 0.2079513967037201, 0.11070146411657333, -0.4190199673175812, 0.019406089559197426, 0.07194266468286514, 0.016698220744729042, 0.04930015653371811, 0.1835300624370575, -0.0018840511329472065, 0.05212090536952019, 0.12222108989953995, -0.2671893537044525, -0.002765535144135356, 0.0789184644818306, -0.2679454982280731, 0.00485355406999588, -0.10007839649915695, 0.03188743814826012, 0.005995841231197119, -0.07644950598478317, -0.196077361702919, -0.05437072366476059, 0.26496243476867676, -0.17348042130470276, 0.11104769259691238, 0.1623615175485611, 0.1064227744936943, -0.08562977612018585, -0.1340593844652176, -0.1300201117992401, 0.05443490669131279, 0.0016562393866479397, 0.25706014037132263, 0.11044450104236603, 0.06861238181591034, 0.29452380537986755, -0.2902143597602844, 0.2174462080001831, -0.2002401202917099, 0.13772647082805634, 0.008779404684901237, -0.11689085513353348, 0.10789921879768372, -0.05274847894906998, 0.07394380867481232, 0.24491894245147705, -0.0007895476301200688, -0.05591365322470665, 0.05932440981268883, -0.12007627636194229, -0.041848380118608475, -0.08449304848909378, -0.11007341742515564, -0.1338941752910614, 0.13519287109375, 0.02274826355278492, -0.015763966366648674, 0.10863515734672546, 0.18541929125785828, -0.03758854791522026, -0.009110899642109871, 0.2403775006532669, 0.07691943645477295, -0.06973812729120255, 0.13488049805164337, 0.08908029645681381, 0.17132049798965454, -0.087254099547863, 0.08645246177911758, 0.06025921553373337, 0.15557681024074554, 0.1251908838748932, 0.10370855033397675, 0.00354784051887691, -0.10687470436096191, 0.11260039359331131, 0.005187819711863995, 0.061805360019207, 0.06507253646850586, -0.08684450387954712, -0.18755152821540833, 0.08285403251647949, -0.06199735775589943, 0.07701744884252548, 0.13797494769096375, -0.056854669004678726, 0.026957057416439056, -0.00720825744792819, 0.0952305942773819, 0.04146166890859604, 0.12954996526241302, 0.013769171200692654, -0.12728916108608246, 0.09727654606103897, -0.19822584092617035, 0.3048233687877655, 0.07987689226865768, -0.05666273087263107, 0.09580259770154953, 0.1169644221663475, -0.2863908112049103, 0.055331602692604065, -0.04616738483309746, 0.031117677688598633, -0.014707967638969421, -0.009585930965840816, -0.08436273038387299, 0.12173854559659958, 0.12675149738788605, 0.12131576240062714, 0.054155416786670685, 0.10531012713909149, -0.10922345519065857, 0.05598810315132141, 0.03671865910291672, 0.07986434549093246, -0.06820471584796906, -0.036383457481861115, -0.35413363575935364, -0.07502420246601105, -0.036425478756427765, -0.0475727841258049, 0.13592056930065155, 0.08272646367549896, 0.21324580907821655, -0.000598408340010792, -0.408437043428421, -0.1583099514245987, 0.10671443492174149, -0.17467829585075378, -0.01903434284031391, 0.13935129344463348, -0.0897255465388298, 0.23896129429340363, 0.2570655941963196, 0.1874966025352478, -0.008814685046672821, 0.2878822684288025, 0.004386338405311108, 0.028957029804587364, 0.1547175943851471, 0.1329335868358612, 0.08856905996799469, 0.2614656090736389, -0.10677105188369751, -0.05432676523923874, 0.028735928237438202, -0.0780535563826561, -0.14310839772224426, -0.21985934674739838, 0.11683917045593262, 0.014811297878623009, 0.12789709866046906, 0.2364562302827835, -0.026094472035765648, 0.2391740083694458, -0.06882373988628387, -0.030138205736875534, 0.11706392467021942, 0.1753988116979599, 0.008922368288040161, -0.2490306794643402, 0.04208337143063545, -0.0003953416016884148, 0.20477986335754395, 0.0508437342941761, 0.07089162617921829, -0.066254623234272, -0.24171720445156097, -0.3077192008495331, -0.04536807909607887, -0.2702171504497528, -0.04409167170524597, -0.17585451900959015, 0.006159495562314987, -0.10795369744300842, 0.19864843785762787, -0.1452213078737259, -0.09875990450382233, 0.023976262658834457, 0.07060317695140839, 0.0875592902302742, 0.028120649978518486, -0.1865832507610321, -0.2056080847978592, -0.1566455066204071, -0.05933438241481781, 0.08371124416589737, -0.0012664099922403693, -0.055644698441028595, -0.2344033569097519, 0.005943259224295616, 0.2444136142730713, -0.0936591699719429, 0.0362948477268219, -0.020917756482958794, -0.09378045797348022, 0.019972220063209534, 0.13174138963222504, 0.21557000279426575, -0.17331203818321228, 0.0012685076799243689, 0.07833370566368103, 0.028760097920894623, -0.07156243920326233, 0.012920851819217205, 0.2463158369064331, 0.05014162138104439, 0.2644668519496918, -0.07225839793682098, -0.0017796738538891077, 0.049095217138528824, 0.17018382251262665, 0.16492633521556854, 0.24719007313251495, 0.14253921806812286, 0.05960465967655182, -0.15777873992919922, -0.3468949496746063, -0.14359842240810394, -0.235654816031456, -0.13279050588607788, 0.17953674495220184, 0.31489694118499756, -0.1595717966556549, 0.24391993880271912, -0.20342981815338135, -0.042942821979522705, 0.033210933208465576, -0.2929283082485199, -0.03329646214842796, -0.10704268515110016, -0.1264951229095459, -0.012979809194803238, -0.06093902140855789, -0.040864069014787674, -0.009412441402673721, -0.11144080013036728, 0.08392955362796783, -0.1251922994852066, 0.05674753338098526, -0.033603426069021225, 0.11356805264949799, -0.18863990902900696, 0.17622210085391998, -0.0787472277879715, -0.22995196282863617, -0.11696010828018188, 0.10993803292512894, -0.10561670362949371, 0.15349876880645752, -0.21197353303432465, -0.02952168881893158, -0.06003841012716293, 0.061821114271879196, -0.2694907486438751, 0.25022661685943604, 0.2804810702800751, 0.18347807228565216, -0.3250982165336609, 0.01909351535141468, 0.022526046261191368, 0.07069139182567596, -0.14243435859680176, -0.014829590916633606, 0.12962526082992554, -0.05541655048727989, 0.09986329823732376, -0.08124403655529022, -0.0595083050429821, 0.046804413199424744, -0.16250523924827576, -0.1624491810798645, -0.07882063090801239, -0.007620705757290125, -0.05381486192345619, 0.33926862478256226, -0.0880824476480484, -0.1512363702058792, -0.21457670629024506, 0.026755619794130325, -0.2965131103992462, 0.11432575434446335, 0.06308375298976898, -0.011157355271279812, 0.09481988102197647, -0.031658973544836044, -0.261136531829834, -0.1459479182958603, -0.07599611580371857, -0.24399857223033905, 0.34319576621055603, 0.0866314172744751, -0.02439604513347149, 0.03582175076007843, -0.02665366604924202, -0.03074280358850956, 0.09270253032445908, 0.1502453088760376, -0.05904112011194229, -0.08170293271541595, 0.03615878149867058, -0.09966981410980225, 0.09212160855531693, -0.38875824213027954, 0.11946261674165726, 0.14063984155654907, -0.1776861548423767, -0.2338191419839859, -0.045474112033843994, -0.15826937556266785, -0.05965564399957657, -0.0445246584713459, -0.03785622492432594, 0.23429661989212036, 0.09309634566307068, 0.06905118376016617, -0.22063300013542175, -0.01888715662062168, -0.31222808361053467, 0.16239169239997864, 0.11977260559797287, -0.05946796014904976, -0.2414504736661911, 0.3152591586112976, 0.053121041506528854, 0.13648681342601776, -0.06841886043548584, -0.039220888167619705, -0.0009129944955930114, 0.02486054040491581, 0.020736025646328926, 0.11998700350522995, 0.048560891300439835, -0.0843321904540062, 0.15071849524974823, -0.016780542209744453, 0.03168635815382004, 0.11134664714336395, 0.004908684175461531, 0.12614738941192627, -0.051840540021657944, -0.10720870643854141, -0.10963506996631622, 0.1021517887711525, 0.2377064824104309, -0.030511805787682533, 0.2538154125213623, 0.04799921065568924, -0.05818668380379677, -0.019542517140507698, 0.22054341435432434, -0.15906505286693573, 0.0848722979426384, 0.1648201197385788, -0.02303289994597435, 0.07135958224534988, -0.15703260898590088, -0.137467160820961, -0.16569554805755615, -0.24366861581802368, 0.11425886303186417, 0.02208193577826023, 0.019339803606271744, 0.12123211473226547, 0.1548306792974472, 0.18826216459274292, 0.01089569553732872, -0.07020452618598938, -0.01561267115175724, 0.009260742925107479, -0.009194737300276756, -0.1267852634191513, -0.08774998039007187, 0.19129639863967896, -0.0485207661986351, -0.07212813943624496, -0.18906204402446747, -0.046846576035022736, 0.04613510146737099, -0.04207703471183777, 0.06490898132324219, 0.07001414895057678, -0.035131167620420456, -0.12979087233543396, -0.18408234417438507, -0.0807819664478302, -0.03588385507464409, 0.22978730499744415, 0.04394116625189781, -0.18852651119232178, 0.11192871630191803, 0.09799863398075104, 0.07761212438344955, 0.0725615993142128, 0.07892122864723206, -0.055607959628105164, -0.1703805923461914, -0.10740920901298523, -0.12935183942317963, 0.25444531440734863, 0.044244442135095596, 0.022923031821846962, 0.1135094091296196, 0.06486091762781143, 0.048591408878564835, 0.0975227952003479, -0.1285702884197235, 0.1333732008934021, 0.04814235493540764, 0.12627564370632172, 0.15715599060058594, -0.26106908917427063, 0.08340083062648773, -0.14118757843971252, 0.07540831714868546, -0.0961301252245903, -0.14529724419116974, 0.36845651268959045, -0.033332470804452896, -0.008422043174505234, -0.06281972676515579, 0.3834609091281891, -0.10141453891992569, -0.14751076698303223, -0.01341245323419571, 0.039709463715553284, -0.07856608927249908, 0.027474595233798027, 0.38557684421539307, -0.10131882131099701, -0.19398081302642822, 0.13104745745658875, 0.0843580961227417, 0.017472820356488228, -0.09525708854198456, 0.12358894944190979, 0.1958148181438446, 0.01878970116376877, 0.16659463942050934, 0.0917932316660881, 0.13458138704299927, 0.23927922546863556, -0.40668782591819763, -0.04169691354036331, -0.04684007540345192, -0.24581275880336761, -0.1806974858045578, 0.04354064539074898, 0.29275262355804443, -0.13885121047496796, 0.10893774032592773, -0.18256236612796783, 0.17494253814220428, -0.06932462751865387, -0.12123522907495499, -0.20272709429264069, 0.07727283984422684, 0.08678670227527618, 0.1528100073337555, -0.051710061728954315, -0.0883936807513237, 0.2673725187778473, -0.034673795104026794, -0.28424203395843506, 0.031118495389819145, -0.13806982338428497, -0.19121630489826202, -0.11372676491737366, -0.08629059046506882, -0.06436816602945328, 0.05985032394528389, 0.15934684872627258, 0.0099348658695817, 0.11836037784814835, -0.07923019677400589, 0.1502722203731537, 0.017306916415691376, 0.1633758246898651, -0.2008787840604782, -0.16404327750205994, -0.08670146763324738, -0.0008718734025023878, -0.05058504641056061, -0.002903080079704523, -0.10800611227750778, 0.12044596672058105, 0.09595328569412231, 0.03984292224049568, 0.3546659052371979, 0.0668015107512474, -0.2748800814151764, 0.06476403772830963, 0.13912899792194366, 0.11526218801736832, 0.2908669412136078, 0.29944685101509094, -0.1415225863456726, -0.04911261051893234, 0.052590206265449524, 0.2441478818655014, -0.04709772393107414, 0.1028117835521698, 0.16543886065483093, 0.16997858881950378, 5.577503179665655e-05, -0.0008923821151256561, -0.03718392550945282, 0.05571862310171127, 0.12578323483467102, -0.05822146683931351, -0.0021759928204119205, -0.017251743003726006, -0.10248884558677673, -0.26415732502937317, -0.09173358231782913, 0.0390678308904171, 0.16035152971744537, 0.24585123360157013, -0.00042976526310667396, 0.03520911931991577, 0.1164904311299324, 0.0061039733700454235, 0.3107885718345642, 0.31913164258003235, 0.1526932567358017, 0.38662391901016235, 0.42289382219314575, 0.0747557133436203, 0.08407299965620041, 0.08478958904743195, -0.024879928678274155, 0.12379151582717896, 0.1516685038805008, 0.028586914762854576, 0.3352258801460266, 0.05730891600251198, -0.05360538884997368, -0.04652618616819382, -0.13615494966506958, 0.035680141299963, 0.07831621170043945, -0.034670740365982056, -0.044842176139354706, -0.04052774980664253, -0.01172605063766241, -0.08178865164518356, -0.12223676592111588, 0.41579923033714294, 0.20441949367523193, 0.10361797362565994, -0.1158410832285881, 0.028332984074950218, -0.12477921694517136, -0.13967694342136383, 0.0892253965139389, -0.0031325588934123516, -0.07645417749881744, 0.11749916523694992, -0.07933241128921509, 0.28437188267707825, -0.05452192947268486, 0.0499962717294693, 0.18840715289115906, 0.21558937430381775, 0.06935902684926987, 0.20917224884033203, 0.025426842272281647, 0.03938299044966698, 0.09421822428703308, -0.0673733577132225, 0.0852341279387474, 0.161738321185112, 0.08292558044195175, -0.2083132416009903, -0.03443253040313721, -0.03699750453233719, 0.15874895453453064, 0.2798929214477539, -0.1516755372285843, 0.031842175871133804, 0.23606181144714355, 0.0704348161816597, 0.10516771674156189, 0.0476946197450161, 0.2911786139011383, 0.042281847447156906, 0.13047081232070923, -0.02499193698167801, -0.008551256731152534, -0.036826785653829575, 0.19746516644954681, 0.008017527870833874, -0.08195722103118896, -0.10076674073934555, -0.16494299471378326, 0.23950381577014923, 0.289485365152359, 0.025994950905442238, -0.10482523590326309, 0.18397384881973267, 0.0017740122275426984, -0.002747278893366456, -0.1146627813577652, 0.045427337288856506, 0.21465721726417542, -0.28964710235595703, 0.0898618996143341, 0.026827165856957436, 0.17065460979938507, -0.10684949904680252, -0.38855692744255066, -0.23130112886428833, 0.33186861872673035, 0.33830952644348145, 0.5783398747444153, 0.10997776687145233, -0.1930730938911438, 0.22852274775505066, 0.22301535308361053, 0.43285998702049255, 0.1522681564092636, 0.07516853511333466, 0.18295353651046753, -0.037814248353242874, 0.46504026651382446, -0.2293744534254074, 0.11067904531955719, 0.2761610448360443, 0.15587854385375977, -0.09878600388765335, -0.21663326025009155, 0.3567771911621094, 0.08621837198734283, 0.18195964395999908, 0.5300525426864624, 0.28611135482788086, 0.35820314288139343, -0.23932673037052155, 0.37665876746177673, 0.11269281804561615, -0.28224512934684753, 0.11747576296329498, 0.11126669496297836, -0.11399354040622711, -0.08484654128551483, -0.28628256916999817, -0.07540741562843323, -0.19715972244739532, 0.21321281790733337, -0.09247084707021713, 0.13640347123146057, -0.21298901736736298, 0.06603456288576126, 0.14257614314556122, -0.08961906284093857, 0.2306705117225647, -0.24943462014198303, 0.018116867169737816, 0.015597648918628693, -0.2219119668006897, -0.07956713438034058, -0.20046588778495789, -0.1391620934009552, -0.1306317150592804, -0.04228655621409416, -0.19030766189098358, -0.0701325535774231, -0.15636734664440155, 0.16528388857841492, 0.08264943212270737, 0.3992484509944916, -0.15714100003242493, 0.3791596591472626, 0.025409959256649017, -0.06045548990368843, 0.02372545376420021, 0.15504835546016693, -0.03287545219063759, -0.11481551826000214, 0.11773796379566193, 0.12955331802368164, -0.02692771703004837, 0.09065547585487366, -0.0031463480554521084, -0.04300832748413086, -0.023633450269699097, 0.13736718893051147, -0.18267621099948883, -0.14479243755340576, -0.02174590900540352, -0.20843392610549927, 0.1425405740737915, 0.04815465956926346, -0.07647382467985153, -0.028417104855179787, 0.007130871526896954, 0.1310882270336151, 0.22702084481716156, 0.1270933896303177, -0.02851931005716324, 0.15229742228984833, -0.2846648693084717, -0.04759479686617851, -0.0010898386826738715, 0.10898306220769882, -0.027946658432483673, -0.22117507457733154, -0.15707999467849731, -0.06253701448440552, 0.004942284896969795, 0.011702152900397778, -0.3418702781200409, -0.08120334148406982, -0.003523270133882761, 0.06692980229854584, 0.044692885130643845, 0.108792245388031, 0.11837195605039597, -0.22323335707187653, 0.0925908237695694, -0.007586185820400715, -0.17859971523284912, -0.15543463826179504, 0.24785146117210388, -0.10825639963150024, 0.16670413315296173, -0.1135699450969696, 0.029129646718502045, 0.03680353984236717, -0.029612405225634575, -0.05462496355175972, -0.2479240894317627, 0.1280108243227005, 0.09538652747869492, 0.14843890070915222, -0.020686594769358635, 0.04681815207004547, -0.07020153105258942, 0.0017273927805945277, -0.1301301270723343, 0.09405823796987534, 0.12103547155857086, -0.09784349799156189, 0.010124866850674152, 0.0023438602220267057, -0.11134280264377594, 0.09246465563774109, 0.010102856904268265, 0.08162541687488556, 0.26226818561553955, -0.22026565670967102, 0.004882207605987787, -0.12154491990804672, 0.14712445437908173, -0.18099260330200195, 0.04042151942849159, -0.07020621001720428, 0.041859403252601624, 0.18112923204898834, 0.2756398022174835, 0.0039792973548173904, -0.032593585550785065, -0.001432693679817021, -0.027782175689935684, 0.02989252284169197, 0.06857754290103912, -0.04158942773938179, 0.2341223806142807, 0.0983707383275032, 0.40525490045547485, -0.1299266517162323, -0.026738177984952927, -0.07374464720487595, 0.181008979678154, 0.12351565062999725, 0.08225454390048981, -0.2033424824476242, 0.08260186016559601, -0.002525555668398738, 0.005482293665409088, -0.181081622838974, 0.043417174369096756, -0.11758778989315033, -0.04698409140110016, 0.16340132057666779, 0.01610775850713253, 0.017809897661209106, 0.07616215199232101, 0.030745459720492363, -0.07416461408138275, -0.08880659937858582, 0.138005331158638, 0.004830892663449049, -0.07624948769807816, -0.26014843583106995, -0.010702635161578655, 0.153233602643013, 0.05015307664871216, -0.0025809104554355145, 0.24920177459716797, 0.04811554774641991, 0.11647748947143555, -0.02262018993496895, 0.02159757912158966, 0.34058836102485657, -0.06745162606239319, 0.080864317715168, -0.04650323465466499, -0.06748683005571365, 0.017261581495404243, 0.13285095989704132, 0.11249029636383057, -0.0901985913515091, 0.14814859628677368, -0.19129565358161926, 0.2243840992450714, -0.13472296297550201, -0.002938390476629138, 0.10804076492786407, 0.20271679759025574, 0.15713153779506683, -0.040150824934244156, -0.029235314577817917, -0.016165748238563538, -0.10853032022714615, -0.14473295211791992, 0.20322749018669128, -0.03413752466440201, 0.03287037834525108, 0.053999412804841995, 0.08535593003034592, -0.16565099358558655, -0.06184764951467514, -0.18620580434799194, 0.10788881033658981, -0.06453470885753632, -0.1011338159441948, 0.19887767732143402, 0.07227534055709839, -0.05248545855283737, -0.17764028906822205, -0.06637254357337952, -0.2302705943584442, 0.17361007630825043, 0.07364124804735184, 0.23256632685661316, -0.1256200075149536, 0.050354450941085815, -0.04833897948265076, 0.05280352383852005, -0.14275231957435608, -0.11970540881156921, -0.13909505307674408, -0.00048326366231776774, 0.0722888931632042, -0.044043779373168945, 0.2772336006164551, -0.3380492329597473, 0.238699808716774, 0.2297864556312561, -0.3127236068248749, 0.1037670448422432, 0.18132437765598297, 0.03205661103129387, -0.23696286976337433, 0.07491518557071686, -0.09604115784168243, -0.09836526215076447, -0.039110083132982254, 0.08505847305059433, 0.1442413330078125, 0.1496107280254364, 0.19438302516937256, 0.0567978173494339, 0.09225186705589294, -0.126772940158844, -0.19015362858772278, 0.4998493194580078, 0.118697389960289, 0.15968069434165955, 0.07472600042819977, -0.17451132833957672, 0.10059104114770889, -0.025670956820249557, 0.1750112622976303, 0.012181424535810947, 0.16248810291290283, 6.043950634193607e-06, 0.051180027425289154, 0.13342340290546417, 0.02724229171872139, 0.12640461325645447, 0.1902799904346466, 0.05879459157586098, -0.10642547905445099, -0.038171734660863876, 0.05227043479681015, -0.11888635158538818, -0.18185611069202423, 0.1208835169672966, -0.012635968625545502, -0.10574855655431747, 0.008576650172472, 0.1356302946805954, -0.033450815826654434, -0.09418404847383499, -0.3450234830379486, -0.16522854566574097, 0.03311621770262718, -0.20361897349357605, 0.11742798984050751, 0.04231560230255127, -0.09475890547037125, 0.003386187367141247, -0.09343035519123077, 0.3094238340854645, 0.03692657873034477, -0.0616610124707222, 0.07496178895235062, -0.19357654452323914, 0.014151863753795624, -0.06447706371545792, -0.0750497505068779, 0.23055961728096008, -0.23387794196605682, 0.266764760017395, 0.04402407258749008, -0.009722682647407055, -0.13607025146484375, -0.10244439542293549, -0.28734076023101807, 0.16336855292320251, 0.33791038393974304, 0.1472245305776596, 0.015308533795177937, 0.0029938556253910065, -0.15890681743621826, 0.13045236468315125, -0.05031822994351387, 0.1666596531867981, 0.08633317798376083, -0.19734928011894226, -0.30624517798423767, 0.14280346035957336, 0.09586727619171143, -0.1020442321896553, -0.0743507370352745, 0.35049834847450256, 0.16858530044555664, -0.038980863988399506, -0.009365850128233433, -0.17892487347126007, -0.053843580186367035, 0.055413104593753815, 0.1736312210559845, 0.1850966364145279, -0.16128620505332947, 0.2788968086242676, -0.055365730077028275, -0.1034502163529396, 0.09297182410955429, 0.2150564193725586, 0.05754048004746437, -0.045541681349277496, 0.11589475721120834, -0.04886939749121666, -0.034611478447914124, -0.18920622766017914, 0.16635504364967346, 0.11834412068128586, 0.10723268985748291, -0.015365717001259327, -0.1279347687959671, -0.1586359441280365, 0.3777219355106354, -0.12781676650047302, -0.14010529220104218, 0.1879735291004181, -0.03750251978635788, 0.03681860864162445, 0.17032122611999512, 0.056072723120450974, 0.02579686976969242, 0.08069539070129395, -0.07160109281539917, 0.06485814601182938, -0.10802163928747177, 0.05320119857788086, 0.026360459625720978, -0.12020546197891235, -0.030206719413399696, -0.0582016184926033, -0.061197344213724136, -0.3189403712749481, 0.12881244719028473, -0.04138035699725151, -0.30517178773880005, -0.02118839882314205, -0.11446957290172577, 0.07557273656129837, -0.14792269468307495, -0.10550060123205185, -0.20626099407672882, -0.0051204608753323555, -0.08743894100189209, 0.39607203006744385, 0.0832727923989296, -0.05593974143266678, 0.10658355802297592, 0.16826435923576355, 0.028494134545326233, -0.05996289104223251, 0.2960366904735565, 0.08543635904788971, -0.11414409428834915, -0.1666148155927658, 0.05523849278688431, -0.13355828821659088, 0.5121246576309204, -0.23751267790794373, -0.12147011607885361, 0.0702628344297409, 0.2510300576686859, 0.1607455313205719, 0.20997501909732819, 0.12076587975025177, 0.04147573187947273, 0.32145053148269653, -0.11770757287740707, 0.05268305540084839, 0.151271253824234, 0.01902678795158863, -0.015341097488999367, 0.08818095177412033, 0.11416096240282059, -0.037613395601511, 0.0531332790851593, 0.18245749175548553, 0.2844843566417694, 0.051421452313661575, -0.03771806135773659, -0.013121609576046467, -0.14565637707710266, -0.12868718802928925, -0.07206051796674728, 0.30790334939956665, -0.18223422765731812, -0.3101198673248291, 0.2101241499185562, -0.20589080452919006, 0.00630840752273798, -0.09558133035898209, 0.09708711504936218, -0.03204571455717087, -0.10449470579624176, -0.07302393019199371, -0.09468662738800049, 0.015156825073063374, 0.02882567048072815, -0.04997929558157921, 0.25430208444595337, 0.08663500845432281, -0.03070032224059105, 0.1406857669353485, 0.022027140483260155, 0.111903615295887, 0.10882320255041122, 0.22567597031593323, 0.16440418362617493, 0.066905178129673, 0.020996233448386192, 0.029267193749547005, 0.08536554872989655, 0.13798384368419647, 0.020266110077500343, 0.006506753154098988, -0.004055161960422993, 0.09997967630624771, 0.03441769257187843, 0.34132787585258484, -0.0966801717877388, -0.10122094303369522, -0.00233843713067472, -0.10140717029571533, 0.09253502637147903, -0.18686066567897797, -0.12929271161556244, 0.21948650479316711, 0.17094948887825012, -0.144590362906456, -0.1300860345363617, -0.06576789915561676, -0.026200179010629654, 0.05611652508378029, 0.11327115446329117, -0.033110421150922775, 0.034642402082681656, -0.16125395894050598, 0.05878743901848793, -0.07049167901277542, -0.11977597326040268, 0.03573812544345856, 0.009652569890022278, -0.21044956147670746, 0.1340135931968689, -0.05856233090162277, -0.0676504522562027, 0.14186710119247437, -0.011322942562401295, 0.29171106219291687, 0.012065211310982704, 0.14340361952781677, -0.006808339152485132, -0.16041679680347443, -0.03973601013422012, -0.07836616784334183, -0.14491204917430878, -0.23772096633911133, 0.2722693681716919, 0.03906400874257088, -0.09516893327236176, 0.18139658868312836, 0.10632935911417007, 0.012981804087758064, -0.07074355334043503, 0.11405695974826813, 0.050160832703113556, 0.15481366217136383, 0.14337414503097534, 0.07357056438922882, 0.18932509422302246, 0.20035864412784576, -0.06984814256429672, -0.11703477054834366, 0.029924243688583374, 0.10909952968358994, 0.0016690498450770974, -0.00030903363949619234, 0.07026980072259903, -0.1691354215145111, -0.08159155398607254, -0.06321185827255249, -0.15459044277668, -0.08515739440917969, 0.02332621067762375, -0.038343507796525955, 0.08471807092428207, -0.06353174895048141, 0.22084982693195343, -0.05611772835254669, -0.024014022201299667, -0.03687060996890068, 0.13491412997245789, -0.04645289108157158, -0.26498761773109436, -0.023191271349787712, -0.12658874690532684, -0.032114215195178986, -0.08141790330410004, -0.02624240145087242, 0.2910946011543274, -0.14173099398612976, 0.08084709197282791, -0.027279842644929886, -0.0730234757065773, -0.10098573565483093, -0.06679463386535645, 0.01824275776743889, 0.10122200846672058, -0.04230170324444771, -0.09724786877632141, 0.2700197696685791, -0.03591800108551979, 0.16786277294158936, -0.09139443188905716, 0.07386795431375504, -0.09537947177886963, -0.24314920604228973, 0.06819972395896912, -0.05652562156319618, 0.057846952229738235, -0.08468246459960938, 0.3935753405094147, -0.20516012609004974, 0.002312480239197612, 0.0787188783288002, 0.34342947602272034, 0.07533847540616989, -0.31695106625556946, -0.020495174452662468, 0.19935256242752075, 0.008549300953745842, 0.02878945879638195, 0.13555938005447388, -0.19573858380317688, -0.025274205952882767, 0.09050575643777847, 0.11005384474992752, 0.14411748945713043, 0.05994492769241333, 0.049685653299093246, -0.08101449906826019, -0.11396437883377075, -0.5303359031677246, 0.07422922551631927, -0.057936422526836395, -0.03358815610408783, -0.2096405178308487, 0.009678181260824203, -0.17956198751926422, -0.0036213654093444347, 0.1784420609474182, 0.14082874357700348, 0.06109337508678436, -0.022679241374135017, 0.11456840485334396, -0.2847273647785187, 0.2571592330932617, 0.030487924814224243, -0.03654637932777405, 0.2548900246620178, 0.4663105607032776, -0.13411034643650055, 0.001454705256037414, -0.1054331511259079, -0.11863740533590317, 0.14090976119041443, -0.13261891901493073, 0.021154379472136497, 0.05163701996207237, -0.111176498234272, 0.2253299504518509, -0.1391298919916153, 0.026258517056703568, -0.09888722747564316, -0.10149720311164856, -0.16936711966991425, 0.0903480052947998, 0.1816997081041336, -0.09345641732215881, -0.1006331592798233, 0.09520633518695831, -0.3325556516647339, -0.08711418509483337, -0.1439722776412964, 0.046047504991292953, -0.09228047728538513, -0.06373751163482666, 0.15319158136844635, -0.05813032016158104, -0.13726560771465302, 0.061186544597148895, 0.009793195873498917, 0.08690983802080154, 0.014888167381286621, 0.03825915604829788, 0.014535891823470592, -0.10057134926319122, 0.29026636481285095, 0.046051688492298126, 0.02304491214454174, 0.025175128132104874, 0.043522320687770844, 0.20582278072834015, -0.2891235947608948, 0.04914224147796631, -0.15255652368068695, 0.3140539824962616, -0.09088566899299622, -0.06574268639087677, -0.11058738827705383, 0.13730287551879883, -0.05747481808066368, -0.2291409969329834, -0.011562325991690159, -0.016499623656272888, -0.06220908463001251, -0.018273843452334404, -0.1506928950548172, 0.1168992817401886, 0.14438754320144653, 0.08490503579378128, 0.23068085312843323, 0.1876075267791748, -0.03590123727917671, 0.0051134489476680756, -0.10253562033176422, -0.04632176458835602, 0.30617856979370117, 0.05915875732898712, -0.13366766273975372, 0.2553170323371887, 0.040693338960409164, -0.06739340722560883, 0.028522362932562828, -0.08084346354007721, 0.2207389622926712, -0.1288076937198639, 0.04232839494943619, -0.2463883012533188, -0.17931196093559265, -0.20501866936683655, -0.023450981825590134, -0.10133105516433716, 0.1083327904343605, -0.038860686123371124, 0.026067456230521202, -0.2046973705291748, 0.21382708847522736, 0.07676121592521667, 0.1516205370426178, -0.0607304684817791, -0.09997987747192383, -0.00986128393560648, -0.10512562841176987, 0.0330921970307827, -0.11213620752096176, 0.057079579681158066, 0.07336463034152985, 0.2890487611293793, 0.051151931285858154, 0.08151768147945404, -0.028259946033358574, -0.05905010551214218, -0.1692606508731842, 0.07286317646503448, 0.07717212289571762, -0.13699062168598175, -0.16406938433647156, 0.027825549244880676, -0.015782464295625687, 0.04590748995542526, -0.09245873242616653, 0.20833668112754822, 0.02179322950541973, 0.012982326559722424, 0.08325789123773575, -0.07557269930839539, -0.15720660984516144, -0.12883606553077698, 0.0503404326736927, -0.20183192193508148, -0.1611272245645523, -0.06289640814065933, -0.07255871593952179, 0.15596337616443634, 0.2262537181377411, 0.13893552124500275, 0.18248572945594788, -0.06484213471412659, -0.2082991749048233, 0.054744794964790344, 0.06907647103071213, 0.13727694749832153, 0.0809192880988121, -0.03621968626976013, 0.0718543753027916, -0.23500005900859833, 0.0791863352060318, 0.1336623579263687, 0.15359683334827423, 0.12627916038036346, 0.0945524126291275, -0.11358373612165451, 0.016233565285801888, -0.03535747155547142, -0.04121397063136101, -0.018461894243955612, 0.34680941700935364, 0.21130633354187012, 0.06368248164653778, -0.2466544210910797, 0.22291970252990723, -0.1684851199388504, 0.1424141228199005, 0.15497587621212006, -0.07282339781522751, 0.03059946931898594, -0.2726452946662903, -0.10596484690904617, 0.06086070463061333, -0.02900782972574234, 0.026379544287919998, -0.09506222605705261, 0.24033218622207642, 0.0013530314899981022, 0.057623594999313354, 0.021123142912983894, 0.10983641445636749, 0.017866404727101326, 0.059805113822221756, -0.29029977321624756, -0.006554181221872568, 0.11450359970331192, -0.1144515797495842, 0.09217442572116852, 0.05022977292537689, -0.021427888423204422, -0.04589932784438133, 0.10070585459470749, 0.13100330531597137, 0.10698990523815155, -0.00018371999613009393, 0.010700320824980736, -0.021967416629195213, 0.0543907955288887, 0.24268390238285065, 0.020727165043354034, -0.009712867438793182, -0.2929387092590332, -0.12119391560554504, 0.04170367121696472, 0.13722863793373108, 0.043552324175834656, 0.08350548893213272, 0.0679481104016304, -0.06226218119263649, 0.16538108885288239, -0.2858838140964508, 0.08823172003030777, -0.09330818057060242, 0.011394727043807507, -0.23779283463954926, -0.10171564668416977, 0.2765079736709595, 0.04552598297595978, -0.00047006606473587453, 0.07948998361825943, -0.13048236072063446, 0.10942669212818146, -0.12109195441007614, -0.20923928916454315, -0.1064508780837059, -0.06805125623941422, -0.012275890447199345, 0.15919238328933716, -0.05331879109144211, 0.13583742082118988, 0.24566100537776947, 0.1010546162724495, -0.07570485025644302, 0.3288646638393402, 0.13472770154476166, -0.11664373427629471, -0.005343764089047909, 0.3665858805179596, -0.16624659299850464, 0.041037604212760925, -0.012327359057962894, -0.018666841089725494, -0.1411907970905304, -0.22579166293144226, 0.163327157497406, 0.5898869633674622, 0.14270247519016266, 0.12076256424188614, 0.03289055451750755, -0.02388685941696167, -0.04319452866911888, -0.06392907351255417, 0.31555497646331787, 0.09153211116790771, 0.187870591878891, 0.13594204187393188, 0.0873488187789917, 0.015480583533644676, -0.03827185183763504, 0.01778789982199669, 0.13461409509181976, 0.0447390116751194, -0.017061404883861542, 0.0864289328455925, 0.12524329125881195, 0.1114133968949318, 0.191341832280159, -0.28022122383117676, 0.20400604605674744, 0.0507039874792099, -0.006896969396620989, -0.16126258671283722, -0.028759818524122238, 0.07876545190811157, -0.16798293590545654, 0.12277136743068695, -0.04645057022571564, 0.01777738891541958, 0.16365820169448853, 0.07442256063222885, 0.05496618151664734, 0.047164298593997955, 0.0778314545750618, -0.06377378851175308, -0.10985083878040314, 0.2140030413866043, 0.06892260909080505, -0.2376994639635086, 0.16461199522018433, 0.0258712787181139, 0.010340237990021706, 0.42225170135498047, 0.05248990282416344, 0.20848320424556732, 0.11342824995517731, 0.3527255058288574, 0.17192000150680542, 0.0682234913110733, 0.14953847229480743, -0.11803445219993591, -0.15519382059574127, -0.08723174035549164, -0.20717228949069977, -0.13241679966449738, -0.03915560245513916, 0.0457753911614418, -0.09694930166006088, 0.14694342017173767, 0.24036335945129395, -0.1489589661359787, 0.19829967617988586, -0.06533409655094147, -0.13975480198860168, 0.0377928800880909, 0.002912431489676237, -0.18258044123649597, -0.13923028111457825, 0.07860354334115982, 0.07219091057777405, -0.04125123843550682, -0.2284383922815323, -0.2331719547510147, 0.4180068373680115, 0.16410818696022034, 0.10426995903253555, 0.13573652505874634, -0.0062637170776724815, 0.02339857630431652, -0.01892612688243389, -0.12165738642215729, 0.17645296454429626, 0.059065885841846466, 0.22386041283607483, 0.15719358623027802, 0.049056604504585266, -0.17128831148147583, -0.0845327228307724, 0.011559097096323967, 0.038251981139183044, 0.09748953580856323, 0.3046194016933441, 0.2209625393152237, -0.04241320490837097, -0.017479650676250458, 0.06608591228723526, -0.05646941438317299, 0.047319307923316956, -0.16147860884666443, -0.10272461175918579, 0.016014432534575462, 0.037393998354673386, 0.040955349802970886, 0.23042358458042145, 0.06005899980664253, 0.002680564997717738, 0.09959869086742401, 0.10128665715456009, -0.05241561308503151, 0.1040259301662445, 0.014157856814563274, -0.29011350870132446, 0.03389039635658264, 0.17558947205543518, 0.22293062508106232, -0.015672344714403152, 0.06424520909786224, -0.1359943151473999, 0.13688848912715912, -0.27497410774230957, -0.04994441196322441, 0.060323189944028854, -0.6222359538078308, 0.3317476212978363, 0.18008892238140106, -0.035569772124290466, 0.01590653881430626, 0.1807936131954193, 0.18660643696784973, 0.18774744868278503, 0.002666587010025978, 0.2244364321231842, 0.0973457470536232, 0.04067680984735489, -0.13533757627010345, 0.06738555431365967, -0.12556476891040802, 0.13368582725524902, -0.2048170417547226, -0.044291362166404724, 0.29221659898757935, 0.03553307428956032, 0.14571763575077057, 0.1100756973028183, 0.03258999437093735, -0.10799609869718552, 0.15960469841957092, 0.1631607860326767, 0.17583917081356049, 0.07017623633146286, 0.1600208431482315, -0.029142683371901512, -0.13086368143558502, 0.027430545538663864, -0.061778225004673004, -0.01831097900867462, 0.2925063669681549, 0.11349275708198547, 0.0317889004945755, 0.13301435112953186, -0.12062268704175949, 0.13353540003299713, -0.05376666039228439, -0.025470981374382973, 0.23447683453559875, 0.08221253007650375, 0.09544616937637329, -0.005214254837483168, -0.04975269362330437, 0.04866475239396095, -0.04939330741763115, 0.05137428641319275, 0.035966657102108, 0.251280277967453, 0.08299444615840912, 0.08438629657030106, 0.2288605272769928, -0.14913581311702728, -0.28895333409309387, 0.01275060698390007, -0.06515173614025116, 0.12725768983364105, 0.0365816205739975, 0.16584797203540802, 0.05248695984482765, 0.24615301191806793, 0.06967584043741226, -0.0066022323444485664, 0.2613387703895569, 0.06459750235080719, 0.23302657902240753, 0.1415768265724182, 0.03647633641958237, -0.22500623762607574, 0.16946955025196075, -0.14508478343486786, -0.08849924802780151, -0.0008779328200034797, -0.09893201291561127, 0.2058761566877365, -0.11369512975215912, 0.010597510263323784, -0.019734153524041176, 0.10959095507860184, 0.24501581490039825, -0.08188777416944504, 0.1336875855922699, -0.025868156924843788, 0.1657417267560959, -0.062078431248664856, 0.14112070202827454, -0.028583446517586708, -0.007130797021090984, -0.06002625823020935, -0.05277518555521965, 0.13144586980342865, 0.1018669530749321, 0.31737905740737915, 0.12693831324577332, -0.06827971339225769, 0.06660805642604828, 0.1814764142036438, -0.20079076290130615, 0.23600678145885468, 0.0359288714826107, -0.13469384610652924, -0.2066929042339325, -0.042317092418670654, -0.14507697522640228, -0.026385881006717682, 0.0047457655891776085, 0.054050520062446594, -0.17792068421840668, -0.00975059438496828, -0.07875067740678787, 0.3148380219936371, 0.11168430000543594, -0.31434714794158936, 0.20340608060359955, 0.029926028102636337, -0.3439026474952698, -0.035461630672216415, -0.08357413113117218, -0.03093566745519638, 0.042754653841257095, 0.2243226021528244, 0.0741162970662117, -0.22049961984157562, -0.10347520560026169, -0.11134522408246994, 0.07089974731206894, -0.016415899619460106, 0.13087144494056702, -0.24953733384609222, 0.16305699944496155, -0.01549019105732441, 0.14505663514137268, -0.05886155739426613, 0.021602768450975418, -0.24086149036884308, 0.08253325521945953, -0.2093389481306076, 0.036487478762865067, 0.015797726809978485, 0.0476364903151989, -0.3421267569065094, -0.23647864162921906, -0.13165655732154846, 0.1712012141942978, -0.14108632504940033, 0.32916492223739624, 0.06766314804553986, 0.1029215008020401, 0.13783518970012665, 0.06176804006099701, 0.34458136558532715, -0.09323723614215851, -0.15728403627872467, -0.09459507465362549, -0.09627404063940048, 0.08038550615310669, -0.11171730607748032, -0.319256067276001, 0.17054219543933868, -0.06250113248825073, 0.03204140439629555, 0.1655762940645218, -0.06158982589840889, 0.06703256815671921, -0.04639943316578865, -0.20375679433345795, 0.228262796998024, 0.0019102856749668717, -0.09004350751638412, -0.2686961591243744, 0.018039176240563393, -0.022960666567087173, 0.036294106394052505, -0.05357962101697922, 0.11282148957252502, 0.07100781798362732, -0.14764542877674103, -0.001124238595366478, 0.13787204027175903, 0.23084856569766998, -0.04253381863236427, -0.10798975080251694, 0.21016260981559753, 0.0407499261200428, 0.11218717694282532, -0.04678987339138985, -0.11169867217540741, -0.007575154770165682, -0.05578017607331276, 0.024406038224697113, -0.21743477880954742, 0.13971777260303497, 0.21404677629470825, 0.11831718683242798, 0.17502549290657043, 0.11621491611003876, -0.04396652430295944, 0.001311969361267984, -0.031818971037864685, -0.1986963152885437, -0.14026221632957458, -0.052276864647865295, 0.1675027310848236, -0.10766851902008057, 0.23747143149375916, 0.0701640248298645, 0.19926701486110687, 0.06039053574204445, 0.06484758108854294, 0.012872324325144291, 0.3158254027366638, 0.09856988489627838, -0.0944671705365181, -0.1699419915676117, 0.01936149224638939, -0.0332050584256649, -0.05334503576159477, 0.004649869631975889, 0.2434718757867813, 0.1556447595357895, 0.04624539613723755, 0.12446979433298111, 0.0850052610039711, 0.1454182118177414, -0.12976162135601044, -0.6406424641609192, -0.08210458606481552, -0.09166518598794937, 0.17425400018692017, 0.11392141878604889, -0.07405531406402588, 0.4099026918411255, -0.2216326892375946, -0.02768634259700775, -0.020367883145809174, 0.028579074889421463, -0.12680169939994812, -0.043293546885252, 0.18505947291851044, -0.03447721153497696, 0.24082215130329132, -0.08915578573942184, 0.20775900781154633, -0.15513521432876587, 0.083014577627182, 0.09442515671253204, -0.16552838683128357, -0.138101264834404, -0.1538230925798416, -0.003575385082513094, -0.28362444043159485, -0.018248645588755608, 0.06453463435173035, -0.03192165866494179, -0.18751342594623566, -0.15480685234069824, -0.1895475685596466, 0.10873450338840485, -0.06553377211093903, 0.0801696628332138, 0.11647415906190872, -0.007493393961340189, -0.06256042420864105, -0.05742521584033966, -0.08362103998661041, -0.10335871577262878, 0.14528195559978485, 0.34850600361824036, 0.01267631072551012, 0.2528798580169678, 0.10623346269130707, -0.13509100675582886, 0.09096568822860718, -0.16358739137649536, 0.12691405415534973, 0.002225583652034402, -0.23753991723060608, 0.08288577944040298, 0.004279698710888624, 0.2605385482311249, 0.1414632499217987, 0.12177830189466476, 0.02246689237654209, 0.05204731971025467, -0.004970203619450331, -0.5179244875907898, 0.0494479238986969, -0.0688425824046135, 0.2647840082645416, 0.08345571905374527, 0.055267199873924255, 0.05024978891015053, -0.10058409720659256, 0.5044904947280884, -0.03140636533498764, -0.1758509874343872, -0.12180832773447037, -0.1501699537038803, 0.11044969409704208, -0.04274187982082367, 0.1884077489376068, 0.1934608519077301, 0.28457123041152954, 0.18777604401111603, 0.28745096921920776, -0.05835011973977089, 0.006017729174345732, 0.056520070880651474, -0.5858078002929688, 0.3237815499305725, -0.1261375993490219, 0.027171391993761063, -0.014483405277132988, -0.11478812247514725, 0.054726678878068924, -0.03886173665523529, -0.17580974102020264, 0.16007257997989655, 0.0912642702460289, 0.26645413041114807, -0.11105664074420929, -0.38877052068710327, 0.23661914467811584, -0.02937580645084381, -0.1906713843345642, 0.23560574650764465, -0.00043403907329775393, 0.3305816054344177, 0.008254907093942165, -0.01747533492743969, -0.02631472609937191, 0.05265110358595848, -0.1140608936548233, -0.0011041611433029175, -0.036514848470687866, 0.09620107710361481, 0.24467159807682037, 0.3402212858200073, -0.10304084420204163, -0.10056506842374802, 0.19743072986602783, -0.1640014797449112, 0.050094980746507645, -0.033373165875673294, -0.007739362306892872, -0.206209197640419, -0.17253708839416504, 0.05830526351928711, -0.03043089434504509, 0.0639820322394371, 0.17343635857105255, -0.15272893011569977, 0.13394078612327576, -0.2625119686126709, 0.07144463807344437, 0.10174811631441116, -0.13224555552005768, -0.18091508746147156, 0.062332600355148315, 0.16381974518299103, 0.2000959813594818, -0.18745148181915283, -0.028490537777543068, 0.1647331565618515, -0.03298508748412132, 0.010349273681640625, -0.1491951048374176, 0.1615404486656189, -0.05823246389627457, 0.06900305300951004, 0.013480459339916706, 0.07064986974000931, -0.09649349749088287, 0.08172370493412018, 0.15316706895828247, -0.030114352703094482, -0.17097976803779602, -0.19034434854984283, 0.17621548473834991, 0.08296232670545578, -0.07729887217283249, -0.025150025263428688, -0.07635454088449478, -0.1603851318359375, -0.030775850638747215, -0.1809011697769165, 0.0955934002995491, -0.006624474655836821, 0.25353214144706726, 0.10047192871570587, 0.01788007654249668, 0.003472247626632452, -0.13560670614242554, 0.07046892493963242, 0.027507580816745758, -0.003372632432729006, 0.037666503340005875, 0.00013108465645927936, 0.005772327538579702, -0.057394929230213165, 0.24996070563793182, -0.10685683786869049, 0.14705514907836914, 0.09461378306150436, -0.16389353573322296, -0.07186894863843918, 0.2258937805891037, -0.08710042387247086, -0.16367053985595703, -0.08892374485731125, 0.15717165172100067, -0.06753703206777573, 0.07418036460876465, -0.054832346737384796, -0.0382765494287014, -0.13965536653995514, 0.0018420601263642311, 0.008410048671066761, 0.1234249621629715, 0.10729210823774338, -0.08096771687269211, 0.1416953206062317, -0.04569026455283165, -0.0014308972749859095, 0.05233387276530266, -0.03500264510512352, 0.04464421421289444, 0.13627979159355164, 0.02218848094344139, 0.0010533867171034217, -0.07926386594772339, -0.03956988826394081, 0.07525893300771713, -0.04453207552433014, 0.22513975203037262, -0.03370504826307297, -0.1999153345823288, 0.06984806805849075, 0.003403796348720789, -0.01134372316300869, 0.05901683494448662, -0.02806376852095127, -0.07153968513011932, -0.037992287427186966, 0.04063410684466362, 0.10414861887693405, 0.031903985887765884, -0.01153738796710968, 0.2163289487361908, -0.4344225525856018, 0.03599783778190613, 0.06960729509592056, 0.12060883641242981, 0.056514643132686615, 0.10497432202100754, -0.0029192150104790926, 0.11478352546691895, -0.045007795095443726, -0.1619185209274292, 0.103277288377285, -0.10796093195676804, 0.013524729758501053, -0.12667444348335266, 0.004925218410789967, -0.018412383273243904, 0.08397123962640762, -0.07127190381288528, 0.1529104858636856, -0.24155721068382263, 0.08049320429563522, -0.053483061492443085, 0.032988451421260834, 0.056227874010801315, 0.2206117957830429, 0.04907501861453056, 0.1036171242594719, 0.09285125136375427, -0.011304384097456932, -0.0428897887468338, -0.04512932524085045, -0.0025555891916155815, -0.0595172643661499, -0.04524870961904526, 0.023043205961585045, 0.09718221426010132, 0.306103378534317, 0.022105390205979347, 0.10508394241333008, -0.005040349438786507, 0.1978195309638977, 0.10169894993305206, -0.01819618232548237, 0.10381438583135605, 0.05699143186211586, 0.20569534599781036, -0.132075697183609, -0.17075364291667938, 0.0358559787273407, 0.0612616166472435, 0.1024516373872757, 0.005870508030056953, -0.03301246836781502, 0.1347711980342865, -0.031444232910871506, 0.08219969272613525, 0.12246125936508179, 0.13816912472248077, -0.08006585389375687, 0.14073869585990906, -0.047027356922626495, -0.023353051394224167, -0.0003871387743856758, -0.02411198802292347, 0.3775995373725891, -0.20609979331493378, 0.24163523316383362, 0.0011473584454506636, 0.04971025139093399, -0.0018984067719429731, -0.11146162450313568, -0.09389543533325195, 0.1883479654788971, 0.018881212919950485, 0.05261553078889847, -0.025574108585715294, -0.00876334123313427, -0.03151519596576691, -0.08524720370769501, -0.027771081775426865, 0.08786533772945404, 0.19232207536697388, 0.23449386656284332, -0.03636922314763069, -0.10545333474874496, 0.15648284554481506, 0.1838662028312683, -0.062299661338329315, 0.039698731154203415, -0.06739336997270584, -0.11805316060781479, 0.11201098561286926, -0.04654578119516373, -0.010714230127632618, 0.1748453676700592, -0.3042205572128296, -0.07061182707548141, 0.029625752940773964, -0.07783634960651398, 0.08855929225683212, -0.01264533493667841, 0.056873153895139694, 0.022209815680980682, 0.008808152750134468, -0.08282583951950073, 0.10537213832139969, 0.1378185749053955, -0.1699581742286682, 0.034356653690338135, -0.1138840913772583, 0.03265542909502983, -0.11277636885643005, -0.07028081268072128, 0.0022361937444657087, 0.002511700615286827, -0.07850121706724167, -0.08568989485502243, -0.10586421936750412, -0.008699175901710987, -0.10090528428554535, -0.17436301708221436, 0.16185832023620605, 0.03967975452542305, 0.07769860327243805, -0.09465671330690384, 0.003235607873648405, -0.1752615123987198, 0.0631684735417366, -0.23571214079856873, 0.11588212847709656, -0.011346794664859772, -0.20248183608055115, 0.035475194454193115, 0.06928569823503494, 0.09087928384542465, 0.0817738026380539, 0.0352264903485775, -0.059155624359846115, 0.020259179174900055, 0.008699215948581696, 0.020282667130231857, -0.2305932343006134, 0.05708422139286995, -0.09382348507642746, 0.10386151820421219, 0.07961959391832352, 0.06299043446779251, -0.1652190089225769, 0.15520243346691132, -0.06800300627946854, -0.06793398410081863, -0.010869222693145275, 0.11521221697330475, 0.1984964907169342, 0.12809893488883972, -0.09965609014034271, -0.06904873251914978, -0.04383693262934685, -0.0323704369366169, -0.13007594645023346, -0.04484608396887779, -0.033192723989486694, 0.009323365986347198, -0.03486066684126854, 0.08972500264644623, 0.0030595888383686543, 0.39706751704216003, -0.19275248050689697, 0.046708256006240845, -0.06782110780477524, -0.04791068285703659, -0.01283597107976675, -0.003083642106503248, 0.0034851348027586937, 0.024700189009308815, 0.08286039531230927, -0.01912282593548298, -0.052804697304964066, -0.10651655495166779, -0.28011637926101685, 0.2778089940547943, 0.1438198834657669, 0.0006560390465892851, -0.09165696799755096, -0.1223720833659172, 0.14272862672805786, -0.3310455083847046, 0.0553358793258667, -0.04826241731643677, -0.13095369935035706, 0.03610945865511894, 0.0460079163312912, 0.06988240778446198, 0.1609889715909958, -0.13655973970890045, -0.18586750328540802, 0.15239721536636353, -0.0518401674926281, -0.04976876825094223, -0.13774022459983826, -0.026871057227253914, 0.04043814539909363, 0.10718970000743866, 0.13469895720481873, 0.026467226445674896, -0.043085310608148575, -0.17246440052986145, 0.07122384756803513, 0.015895312651991844, 0.06573512405157089, 0.06866934150457382, -0.15057595074176788, 0.12528376281261444, 0.25088101625442505, -0.06261340528726578, -0.1630965620279312, -0.049034152179956436, 0.03373023495078087, -0.03790983185172081, -0.16704116761684418, 0.030179191380739212, -0.05510390177369118, 0.058377429842948914, 0.13026659190654755, 0.013706156052649021, -0.07234233617782593, 0.08850818872451782, 0.06469706445932388, 0.10364891588687897, -0.0981307253241539, 0.01789950020611286, 0.03250425308942795, 0.046933602541685104, -0.04733019322156906, 0.17052797973155975, 0.0839150995016098, 0.029433870688080788, -0.06315029412508011, -0.030074413865804672, 0.0061500114388763905, 0.17555958032608032, 0.028804399073123932, -0.01661972515285015, -0.1357099413871765, 0.11955057084560394, -0.08318476378917694, -0.0847189724445343, -0.02728227898478508, 0.17392051219940186, -0.15557114779949188, -0.12222780287265778, -0.03979544714093208, 0.11230336129665375, -0.026702268049120903, -0.01258951798081398, 0.1694009006023407, -0.050987835973501205, -0.012169490568339825, 0.1283401995897293, -0.022595809772610664, 0.15888327360153198, -0.12056895345449448, 0.02722269482910633, -0.04080959036946297, -0.1413061022758484, 0.06348032504320145, -0.1010427251458168, -0.09022697806358337, -0.008346633985638618, -0.24428912997245789, 0.05794818699359894, -0.08281901478767395, -0.18167291581630707, -0.12271684408187866, -0.08313730359077454, -0.27599218487739563, 0.20236200094223022, -0.08542929589748383, 0.062429651618003845, -0.04686645045876503, 0.22717610001564026, -0.006958651822060347, 0.1317266970872879, 0.015442406758666039, 0.0748806893825531, -0.08269765973091125, 0.03534344211220741, 0.18688969314098358, -0.4068794548511505, -0.077659972012043, -0.010774261318147182, -0.01444318238645792, 0.15444688498973846, -0.025552455335855484, -0.06893949210643768, 0.10821900516748428, 0.05784520134329796, 0.12237178534269333, -0.02273000404238701, 0.015562325716018677, -0.02684076689183712, 0.10471180081367493, -0.10445323586463928, -0.008447475731372833, -0.08354799449443817, 0.06440216302871704, -0.18342049419879913, 0.05375223234295845, 0.22029680013656616, -0.016321701928973198, 0.10615234822034836, 0.3497014045715332, 0.0319981724023819, 0.12041869759559631, 0.03123129904270172, 0.010271498933434486, -0.020736990496516228, 0.0011815845500677824, 0.06199709698557854, -0.08820613473653793, 0.1682712286710739, -0.19027000665664673, -0.033288776874542236, -0.12588569521903992, -0.06439512968063354, 0.010975414887070656, -0.10409906506538391, -0.2755480408668518, 0.1027747094631195, -0.00822786707431078, -0.009501866064965725, -0.011433398351073265, -0.027553707361221313, -0.008422852493822575, 0.04026412218809128, -0.19399209320545197, 0.1927809715270996, 0.10842517018318176, 0.06402211636304855, 0.004368857946246862, -0.1735864281654358, 0.006360720843076706, -0.02786489948630333, 0.022872136905789375, -0.013581867329776287, -0.2199433445930481, -0.13619853556156158, -0.041794732213020325, -0.054996248334646225, -0.09542639553546906, -0.11139499396085739, -0.03478502854704857, 0.010901493020355701, -0.03519938513636589, 0.00227729813195765, -0.13979262113571167, 0.09243375808000565, -0.10025116056203842, -0.04895790293812752, -0.011498031206429005, -0.08266996592283249, 0.13717520236968994, -0.07632037997245789, -0.013214478269219398, -0.1046498641371727, 0.06422597914934158, -0.034573592245578766, 0.12530986964702606, -0.04707213118672371, -0.15267664194107056, 0.1054876521229744, 0.02623930387198925, 0.10552887618541718, -0.016916589811444283, -0.10530471801757812, -0.019113443791866302, 0.04817403852939606, 0.09597944468259811, 0.13766168057918549, 0.04026443138718605, 0.20992793142795563, 0.07182958722114563, -0.2421272099018097, -0.043751854449510574, 0.18087425827980042, -0.3456869125366211, -0.19459959864616394, -0.1176159605383873, 0.020115960389375687, -0.023399444296956062, 0.11993058025836945, -0.18002468347549438, 0.13061419129371643, 0.10299235582351685, 0.021394023671746254, -0.1270299255847931, 0.1349060833454132, -0.0658458024263382, -0.01678433082997799, -0.013445770367980003, 0.0617370679974556, -0.14704227447509766, -0.046300262212753296, 0.09784772992134094, 0.047169242054224014, 0.09877049177885056, 0.05839606001973152, 0.03863997384905815, 0.18048278987407684, -0.022214462980628014, 0.10075079649686813, -0.012903154827654362, -0.04935996234416962, 0.07482532411813736, -0.23854726552963257, 0.032324984669685364, -0.07939722388982773, 0.16293981671333313, -0.06079540774226189, 0.03226982802152634, 0.0022037867456674576, 0.13933105766773224, -0.08495951443910599, 0.22903607785701752, -0.14645932614803314, 0.02741081826388836, -0.0065125576220452785, -0.041076768189668655, 0.016095872968435287, 0.06114688888192177, -0.016098417341709137, -0.04323088005185127, 0.12346498668193817, -0.04820745438337326, -0.011558037251234055, -0.10017034411430359, 0.11643103510141373, 0.055912960320711136, 0.015630632638931274, 0.02317330241203308, 0.327689528465271, -0.02778499387204647, 0.008479560725390911, -0.0953107550740242, 0.07403334975242615, -0.009898025542497635, 0.052541397511959076, 0.12046852707862854, 0.10756979882717133, -0.22803133726119995, 0.06030162796378136, -0.07267433404922485, 0.17206327617168427, -0.028238214552402496, -0.010225716978311539, -0.43185028433799744, -0.006384895183146, -0.0014235693961381912, -0.030384117737412453, 0.0009223168599419296, -0.009369658306241035, -0.03843049332499504, -0.06684345752000809, -0.07716280966997147, 0.02813790738582611, 0.029106907546520233, 0.09273635596036911, 0.01188602764159441, 0.007517895195633173, -0.09481728821992874, -0.08140885829925537, 0.07341328263282776, -0.08915430307388306, -0.258914589881897, -0.12622998654842377, 0.04472319409251213, 0.03005692921578884, 0.03892364725470543, -0.10308203846216202, -0.011370215564966202, -0.3698034882545471, 0.07137969136238098, 0.05923479422926903, -0.058837857097387314, 0.04533388838171959, 0.04542875289916992, 0.12529198825359344, -0.06951747089624405, -0.01819482631981373, -0.14238514006137848, 0.1797894835472107, 0.042893778532743454, 0.026762472465634346, -0.09789416939020157, -0.08091813325881958, -0.03322349116206169, 0.2292434126138687, -0.032353926450014114, -0.03220980241894722, 0.16528011858463287, 0.1746019870042801, -0.02483954094350338, 0.03293188661336899, -0.01844662055373192, 0.28332072496414185, 0.12356936186552048, 0.12338972091674805, -0.023441899567842484, -0.061632201075553894, -0.001304136705584824, -0.08028346300125122, 0.08957752585411072, 0.03238240256905556, -0.02539524994790554, 0.001687434734776616, -0.04255867749452591, -0.08612994104623795, 0.18091465532779694, 0.03316845744848251, -0.2620084583759308, 0.03635243698954582, 0.003006615675985813, 0.1606753021478653, -0.07899562269449234, 0.023097366094589233, 0.18749955296516418, -0.1298656165599823, -0.1447383165359497, 0.10024718195199966, -0.06662866473197937, 0.12515529990196228, -0.16118359565734863, 0.060706187039613724, -0.03343919664621353, -0.09531806409358978, -0.0640251561999321, -0.12932616472244263, 0.1801258772611618, 0.005216044839471579, 0.05818811431527138, 0.17257775366306305, 0.14752818644046783, -0.3757721185684204, -0.17845425009727478, 0.14397364854812622, -0.1191922053694725, -0.14195649325847626, 0.009098398499190807, 0.10066456347703934, 0.10479235649108887, -0.001763385022059083, 0.16542236506938934, 0.006043019704520702, -0.11167655885219574, 0.045106902718544006, 0.015224412083625793, 0.1305633932352066, -0.013429454527795315, -0.11120820045471191, -0.10666567832231522, 0.0400458388030529, -0.12152222543954849, 0.07196754217147827, 0.023527005687355995, 0.015271888114511967, 0.06105048581957817, -0.021267741918563843, -0.0508703775703907, 0.18880772590637207, 0.13078944385051727, 0.20131266117095947, -0.18020330369472504, -0.0339946374297142, -0.003494832431897521, -0.10693571716547012, -0.024998720735311508, 0.11290284991264343, -0.21755951642990112, 0.05231105908751488, -0.13360825181007385, -0.08814869076013565, -0.004866038914769888, 0.22211529314517975, -0.24398338794708252, 0.07430267333984375, 0.052685853093862534, -0.01025308109819889, 0.06289234757423401, 0.05829659849405289, 0.12111181765794754, -0.017883267253637314, -0.09862911701202393, 0.06487971544265747, 0.11464457213878632, -0.22142185270786285, 0.028646687045693398, 0.3086334764957428, -0.06962163001298904, 0.11244364082813263, 0.27270227670669556, -0.006525943521410227, 0.14763018488883972, 0.08269043266773224, -0.06314422935247421, -0.022098375484347343, 0.019917186349630356, 0.02127142623066902, -0.06845203042030334, 0.3925636410713196, -0.06975763291120529, -0.16135850548744202, -0.07619568705558777, -0.027345728129148483, 0.03243828937411308, -0.026482008397579193, -0.3704318106174469, 0.07691070437431335, 0.025356609374284744, -0.022364819422364235, 0.010533052496612072, -0.05804835632443428, 0.09583570808172226, -0.006973443552851677, -0.1582287698984146, 0.17953966557979584, 0.0694957748055458, -0.09603190422058105, 0.221269428730011, -0.05017336085438728, 0.1603994369506836, 0.03805026784539223, -0.007187218870967627, 0.027041207998991013, -0.17834565043449402, -0.18164785206317902, -0.13635320961475372, -0.003802960505709052, 0.04834854230284691, 0.036553800106048584, -0.017490873113274574, -0.16228963434696198, 0.08515845984220505, -0.14668957889080048, -0.15760259330272675, -0.20070450007915497, -0.12289302051067352, 0.039720650762319565, -0.03635116294026375, -0.07668881118297577, 0.031238345429301262, -0.07809442281723022, 0.08764706552028656, 0.0219105314463377, -0.08936937153339386, 0.08098864555358887, -0.027868647128343582, 0.14480245113372803, 0.061603959649801254, 0.06953232735395432, 0.09047579020261765, 0.022306231781840324, -0.11515279859304428, 0.029700759798288345, -0.06927873939275742, 0.249467670917511, -0.057808924466371536, 0.18276502192020416, 0.07382917404174805, -0.12255287170410156, -0.04417980834841728, 0.09503789246082306, 0.17640987038612366, 0.12516245245933533, -0.32466650009155273, -0.3275067210197449, 0.07132075726985931, -0.09464846551418304, 0.15682561695575714, 0.06890908628702164, -0.17344117164611816, -0.004646745044738054, 0.12825685739517212, -0.03775954991579056, 0.11584292352199554, -0.04290752857923508, -0.2393958419561386, 0.22935165464878082, 0.15932781994342804, 0.08020925521850586, -0.10230749845504761, 0.13348865509033203, -0.2227066606283188, 0.07384134829044342, 0.14453229308128357, -0.11792858690023422, -0.1064295694231987, 0.028186827898025513, 0.27226653695106506, 0.0956723615527153, 0.16082139313220978, -0.04195505008101463, -0.07789894193410873, -0.17268244922161102, -0.017910804599523544, -0.10379564762115479, -0.065935418009758, 0.0669812485575676, -0.07293406873941422, 0.14289146661758423, 0.12222234904766083, 0.07959595322608948, 0.08552364259958267, 0.037826549261808395, -0.12293128669261932, 0.036108314990997314, -0.10411945730447769, 0.043596357107162476, 0.02794330008327961, 0.0002389459841651842, -0.0952901840209961, -0.0703115165233612, -0.050235357135534286, -0.07586830109357834, 0.3416420519351959, -0.06291501224040985, 0.004347889684140682, 0.07976141571998596, -0.004597879480570555, -0.1662014275789261, 0.01564343273639679, -0.3727326989173889, -0.16155758500099182, -0.08902069181203842, 0.07099561393260956, 0.06988352537155151, -0.0558701790869236, -0.13307680189609528, 0.13283294439315796, -0.10348284244537354, 0.13350427150726318, -0.19910553097724915, -0.07075221836566925, 0.016292931511998177, -0.15907524526119232, -0.004099540878087282, 0.00966667477041483, -0.019538452848792076, 0.02660161256790161, -0.06169227138161659, -0.01654188521206379, 0.09120089560747147, -0.0980537161231041, 0.0605132021009922, 0.16968832910060883, -0.14750456809997559, 0.07438869029283524, 0.24835816025733948, 0.10637321323156357, 0.02677467092871666, 0.12307080626487732, -0.024811478331685066, 0.09616387635469437, -0.02883205935359001, 0.03258033096790314, -0.08736853301525116, -0.042414385825395584, -0.13685935735702515, -0.08509515970945358, 0.5527365207672119, -0.050319865345954895, 0.08794625103473663, -0.04443756118416786, -0.09718319773674011, -0.05906524136662483, -0.033066246658563614, -0.11341915279626846, 0.0988161563873291, 0.20762260258197784, 0.1354956179857254, 0.01718454249203205, -0.013215162791311741, -0.1419752985239029, -0.04199359193444252, -0.00894104316830635, 0.12193320691585541, 0.2217462807893753, 0.025403209030628204, -0.018425513058900833, -0.207299143075943, 0.1371304988861084, 0.018087098374962807, -0.02936684340238571, 0.08186589926481247, -0.07826189696788788, 0.3125869035720825, 0.02553962729871273, 0.023661045357584953, -0.046461429446935654, -0.11440680921077728, 0.13640110194683075, -0.013759379275143147, -0.31976690888404846, 0.16377557814121246, -0.21962790191173553, -0.04919632524251938, 0.020181583240628242, 0.07593027502298355, -0.0987350270152092, 0.07297158986330032, 0.08363421261310577, -0.19240567088127136, -0.059731870889663696, 0.05056280642747879, -0.017134662717580795, 0.11952473223209381, -0.11777859926223755, 0.05196808651089668, 0.03803372383117676, -0.057324688881635666, -0.13625673949718475, -0.02176111377775669, 0.0388297401368618, -0.01075353566557169, -0.02049201726913452, 0.017258085310459137, 0.04292335733771324, -0.00015894154785200953, -0.04472788795828819, -0.018753625452518463, 0.04322577267885208, 0.2985568940639496, 0.020952656865119934, -0.061027660965919495, 0.09929735213518143, -0.08037596940994263, -0.0010117279598489404, 0.038239117711782455, 0.12739303708076477, -0.06717605143785477, -0.016599556431174278, 0.024052105844020844, 0.24870438873767853, -0.0839853435754776, -0.06571450084447861, 0.046512387692928314, 0.07401926070451736, -0.09781529009342194, -0.05086694657802582, -0.05218901112675667, -0.07638908177614212, -0.09131716936826706, -0.10539106279611588, 0.199408158659935, -0.060505691915750504, 0.07854924350976944, -0.020821359008550644, -0.04498383775353432, 0.06055647134780884, -0.16186265647411346, 0.04905684292316437, -0.03909413143992424, -0.08879203349351883, 0.06902053207159042, -0.01942921057343483, -0.3786015510559082, 0.09981226921081543, -0.07041200995445251, -0.073050856590271, 0.0669482871890068, -0.05255144461989403, 0.12648262083530426, -0.05661565810441971, 0.09236034005880356, 0.12015419453382492, -0.12023132294416428, 0.06448423117399216, 0.0026488215662539005, 0.04948759078979492, 0.02581269107758999, 0.0016409422969445586, -0.042131271213293076, 0.032971739768981934, -0.0038528507575392723, 0.030041759833693504, 0.13635769486427307, 0.13714846968650818, 0.023753143846988678, 0.07861600816249847, 0.09351634234189987, -0.044195663183927536, 0.023790283128619194, 0.03744098171591759, 0.03816850483417511, -0.06149948015809059, -0.12848925590515137, 0.06151473522186279, -0.03165185824036598, -0.15455639362335205, 0.07556357234716415, 0.13096652925014496, -0.10292793065309525, 0.1960757076740265, 0.13926926255226135, -0.0890577957034111, 0.18069902062416077, -0.05185258761048317, -0.06933099031448364, -0.18424060940742493, 0.08527792990207672, 0.08023559302091599, 0.13758522272109985, -0.2233467400074005, -0.09816592931747437, -0.05784786120057106, -0.024932188913226128, 0.03243587538599968, -0.322801798582077, -0.06839952617883682, 0.0794418528676033, 0.11749470978975296, -0.40404000878334045, -0.060257699340581894, -0.09419012814760208, 0.1789534091949463, 0.09202534705400467, 0.0846354141831398, 0.32845449447631836, 0.29955291748046875, -0.019018085673451424, -0.03632977604866028, -0.20061533153057098, -0.10905628651380539, -0.10377196967601776, -0.019975902512669563, -0.04858103767037392, -0.10142279416322708, -0.07467245310544968, -0.028343994170427322, -0.05033468082547188, 0.018050486221909523, -0.05885814130306244, 0.26932093501091003, -0.016972031444311142, -0.05534852668642998, -0.09212757647037506, -0.019045038148760796, 0.024949396029114723, 0.04952877759933472, -0.011412598192691803, -0.12398651987314224, -0.08745000511407852, 0.04582899808883667, -0.23048356175422668, 0.07302729040384293, -0.15557117760181427, -0.05086483061313629, 0.016173653304576874, 0.028198396787047386, 0.217680886387825, 0.13998116552829742, 0.14885357022285461, 0.0029290413949638605, 0.133112832903862, 0.0301603265106678, -0.16241686046123505, -0.05372117832303047, -0.04701477661728859, 0.13712945580482483, 0.13261625170707703, -0.12108875811100006, 0.24267776310443878, 0.07575375586748123, 0.02272343635559082, -0.0589781329035759, -0.04145108163356781, 0.03943052515387535, 0.0151344770565629, 0.022516194730997086, -0.08793316781520844, -0.31841519474983215, 0.10375380516052246, -0.07841593027114868, -0.021875491365790367, -0.020768344402313232, -0.039616428315639496, 0.13660427927970886, 4.673229341278784e-06, 0.05231286957859993, 0.38711631298065186, 0.23595371842384338, -0.12408895045518875, -0.00028234097408130765, 0.09898742288351059, 0.0214005708694458, 0.026821516454219818, -0.07948717474937439, 0.2239476889371872, -0.13104355335235596, -0.03458385542035103, 0.1575307697057724, -0.07563599944114685, 0.012418399564921856, 0.07958065718412399, -0.10658202320337296, 0.1021077111363411, -0.09350492060184479, -0.06512344628572464, 0.044201917946338654, -0.02440572902560234, -0.10320868343114853, 0.03205851837992668, -0.031630150973796844, 0.08731400221586227, -0.05177857354283333, -0.03727224841713905, 0.1657039076089859, -0.029383739456534386, -0.06342117488384247, -0.031034529209136963, 0.02420889399945736, 0.03878702595829964, -0.03056596778333187, -0.05718535929918289, 0.1137540340423584, -0.28482696413993835, 0.062200285494327545, 0.13511161506175995, -0.01696053333580494, 0.0683029294013977, 0.10910248756408691, 0.28522101044654846, -0.20554856956005096, -0.034439168870449066, -0.061187878251075745, 0.08625799417495728, -0.24477547407150269, -0.028644932433962822, -0.10334496945142746, -0.01437707245349884, 0.07118024677038193, 0.03746064379811287, -0.12901298701763153, 0.09194175153970718, -0.06942011415958405, 0.02875647321343422, 0.05511336773633957, -0.07103679329156876, 9.088376828003675e-05, -0.08829338848590851, 0.12157156318426132, 0.04846002906560898, 0.1186036542057991, -0.05473491922020912, -1.2269680155441165e-05, 0.20420603454113007, -0.2399740219116211, 0.19549347460269928, 0.052643224596977234, 0.13294526934623718, 0.08381324261426926, 0.03499413654208183, -0.0777330994606018, 0.11826357990503311, -0.034344956278800964, 0.019419575110077858, -0.09352902323007584, 0.0037329820916056633, -0.021599510684609413, 0.029062990099191666, -0.10214457660913467, 0.031848132610321045, -0.14487342536449432, -0.007641161326318979, -0.06868313997983932, -0.11898009479045868, -0.11863276362419128, 0.22989384829998016, -0.20782418549060822, 0.08357406407594681, 0.15753616392612457, -0.12232226133346558, 0.14414870738983154, 0.1516427993774414, -0.0809241309762001, 0.04024381563067436, -0.015104214660823345, 0.11494336277246475, 0.05878813564777374, -0.7025833129882812, -0.06437692791223526, -0.23885661363601685, -0.008541680872440338, 0.08360623568296432, 0.09122942388057709, 0.03147685155272484, 0.15161916613578796, -0.003739005420356989, -0.013343059457838535, -0.06265433132648468, -0.08944990485906601, -0.09802733361721039, 0.18033352494239807, 0.004441646859049797, 0.002845291281118989, -0.047090496867895126, 0.03225099295377731, -0.08932378888130188, 0.00885044876486063, 0.05033154785633087, -0.11394071578979492, -0.024083120748400688, -0.04097451642155647, 0.0008577724802307785, -0.059446752071380615, 0.2535068392753601, 0.09002511948347092, 0.004327425733208656, -0.06884529441595078, -0.08185672760009766, 0.18158873915672302, -0.10680367797613144, -0.18432937562465668, -0.0726805031299591, 0.043895941227674484, -0.03285948932170868, 0.1049906313419342, -0.07097264379262924, 0.08282431215047836, -0.01002548262476921, -0.035170067101716995, -0.01015093456953764, 0.1192401647567749, -0.1375233381986618, -0.03699574992060661, 0.014775807969272137, 0.06373285502195358, 0.1768421232700348, 0.01726839505136013, 0.1015961691737175, 0.014728622511029243, 0.027092967182397842, 0.01615491881966591, 0.09935703873634338, 0.06529086828231812, 0.08758749812841415, 0.024402108043432236, -0.4260559678077698, -0.14758017659187317, -0.19052278995513916, 0.0422721728682518, -0.06813923269510269, -0.05090329423546791, -0.058595411479473114, 0.10052180290222168, 0.10116158425807953, 0.009101184085011482, -0.041694339364767075, 0.2509840726852417, -0.016470056027173996, -0.03538237512111664, -0.027785412967205048, -0.04976988583803177, -0.11557955294847488, 0.2261415272951126, -0.05989377573132515, -0.1721055954694748, 0.09154564887285233, -0.007158879656344652, 0.046386703848838806, 0.07400571554899216, -0.04734606668353081, 0.1256290227174759, -0.021425776183605194, -0.12612980604171753, 0.05488542467355728, 0.010060327127575874, -0.09806832671165466, -0.036836687475442886, -0.2417430430650711, 0.32119858264923096, -0.042763080447912216, 0.09885711967945099, -0.09722857922315598, -0.11699776351451874, -0.03170683979988098, 0.19909651577472687, -0.012125158682465553, -0.006876394152641296, -0.16599242389202118, 0.09716039896011353, -0.0021757513750344515, -0.15283317863941193, 0.057274751365184784, 0.05365699157118797, 0.008971299044787884, 0.028476489707827568, 0.03529175743460655, -0.1155739575624466, 0.04663703963160515, -0.01293214876204729, -0.03187701478600502, 0.05632949247956276, -0.08037067204713821, 0.13664288818836212, -0.08723685890436172, 0.030344542115926743, 0.02853565290570259, 0.0329006053507328, 0.14393854141235352, -0.2742365598678589, 0.17666248977184296, -0.07562420517206192, 0.1820356696844101, 0.17053352296352386, -0.18988321721553802, 0.007843571715056896, -0.10864956676959991, -0.07347416132688522, -0.11447523534297943, -0.18693891167640686, -0.17878399789333344, 0.1470140814781189, 0.09935782104730606, -0.023827072232961655, -0.06585479527711868, -0.05165645480155945, 0.0010922751389443874, -0.07664749026298523, 0.07141296565532684, 0.03254110738635063, 0.13666819036006927, -0.09792167693376541, 0.07998724281787872, 0.02184935472905636, 0.13790881633758545, 0.000792858365457505, -0.022243980318307877, -0.05632460489869118, -0.028185084462165833, -0.022994542494416237, -0.0653044804930687, 0.029163114726543427, 0.25643500685691833, -0.08873387426137924, 0.011642389930784702, 0.03994357958436012, -0.07875963300466537, -0.07777458429336548, -0.21069738268852234, -0.007733629085123539, 0.05990692973136902, 0.07693377137184143, 0.08825521916151047, -0.01974347233772278, -0.18002794682979584, 0.06147492676973343, -0.03055565617978573, -0.021160578355193138, 0.1116880252957344, -0.050463125109672546, -0.1372562050819397, -0.036773115396499634, -0.1440592259168625, -0.0922519713640213, 0.022534115239977837, 0.305144339799881, -0.021554796025156975, -0.20507612824440002, 0.06274791061878204, 0.02367839589715004, 0.0021252306178212166, 0.02848338708281517, 0.15711888670921326, 0.01836249977350235, 0.14821270108222961, -0.03163587301969528, -0.028818713501095772, 0.0629437193274498, -0.02353239245712757, 0.05852210894227028, 0.09640884399414062, -0.004036541562527418, -0.07504452019929886, 0.14406926929950714, 0.18688392639160156, 0.08321863412857056, 0.3708423674106598, 0.07957352697849274, -0.17804908752441406, -0.1545984297990799, -0.05482107028365135, 0.02493845857679844, -0.012140527367591858, -0.012157456949353218, -0.045185431838035583, 0.0856754407286644, 0.0500623993575573, 0.037554848939180374, -0.12060536444187164, -0.11812109500169754, -0.00722893513739109, -0.08018365502357483, -0.006815571337938309, 0.0625801607966423, 0.1503734588623047, 0.09817391633987427, 0.0449487678706646, 0.05798376351594925, 0.03306848555803299, 0.0202291551977396, 0.24237315356731415, -0.0566370002925396, -0.12282954901456833, 0.08622074127197266, -0.09046286344528198, 0.19337446987628937, 0.17860047519207, -0.15350767970085144, 0.17208126187324524, 0.04520033299922943, 0.08004312962293625, -0.055026087909936905, 0.04278745502233505, 0.14621655642986298, -0.06579343974590302, -0.04212039336562157, -0.09288347512483597, -0.12945860624313354, 0.059589482843875885, 0.022326165810227394, 0.002717608120292425, -0.08450976759195328, 0.05453958362340927, -0.05382567644119263, 0.023444192484021187, 0.07845515757799149, 0.04821665957570076, 0.03530973568558693, -0.0907454565167427, -0.17751756310462952, 0.012071692384779453, 0.09131376445293427, 0.0737643912434578, -0.09388675540685654, -0.13590621948242188, 0.11754797399044037, -0.2534656226634979, -0.14718030393123627, 0.10000542551279068, -0.0660475641489029, -0.09037307649850845, -0.029081856831908226, -0.08091500401496887, -0.1430046558380127, -0.1476743221282959, 0.18757492303848267, 0.06157693639397621, 0.11787830293178558, 0.05630911514163017, 0.05735240876674652, 0.0980881005525589, 0.019702700898051262, 0.049524594098329544, -0.2065512090921402, -0.045756056904792786, 0.11416658014059067, -0.02403307519853115, 0.0628930926322937, 0.5551762580871582, -0.04830481857061386, 0.15046247839927673, 0.0726868212223053, 0.14981894195079803, 0.16233274340629578, -0.13844607770442963, -0.03787944093346596, -0.0630204901099205, -0.17463752627372742, 0.0011065679136663675, -0.07717252522706985, 0.10117699950933456, -0.03821486234664917, -0.025923900306224823, -0.09986275434494019, -0.0001416072918800637, 0.09140823781490326, 0.0175090990960598, 0.024808159098029137, -0.06905126571655273, -0.015140681527554989, -0.1929241418838501, 0.004494164139032364, -0.039474889636039734, 0.32668834924697876, 0.006790311075747013, 0.02045983076095581, 0.08737264573574066, 0.05823052302002907, 0.10989200323820114, 0.2834548056125641, 0.09543949365615845, -0.10246343910694122, 0.037660710513591766, -0.005079183261841536, -0.018751995638012886, -0.0891505554318428, 0.07814428210258484, 0.16628311574459076, 0.25920093059539795, -0.12882374227046967, 0.09158701449632645, -0.030849426984786987, -0.07802074402570724, 0.03792502358555794, 0.14640572667121887, -0.2131960690021515, 0.009587572887539864, 0.0677899718284607, -0.026717716827988625, 0.02530757337808609, 0.05144059285521507, -0.04417709633708, 0.017922168597579002, -0.07546556740999222, -0.08438637852668762, -0.10368407517671585, -0.043323758989572525, -0.00258400896564126, -0.0282782930880785, -0.022219114005565643, 0.10472577810287476, 0.012255391106009483, -0.19241321086883545, -0.010821291245520115, 0.15310697257518768, 0.17682334780693054, 0.04592156410217285, 0.03134259954094887, 0.20208552479743958, -0.03432973101735115, 0.048664387315511703, 0.021990269422531128, -0.10476282984018326, 0.04482409730553627, -0.02220982499420643, 0.0026301266625523567, -0.1114518940448761, -0.13374194502830505, 0.01767112873494625, 0.01187907811254263, -0.190606489777565, 0.05659168213605881, 0.02191893942654133, 0.09795638173818588, 0.16051992774009705, 0.025263210758566856, -0.14349916577339172, 0.10283143818378448, -0.014245606027543545, -0.07563920319080353, -0.05142560228705406, -0.150366872549057, -0.007554987445473671, -0.1732974797487259, 0.0018750904127955437, 0.07579854875802994, 0.0943901464343071, -0.03582652285695076, -0.019134027883410454, -0.04029454290866852, 0.01822073943912983, 0.15158146619796753, 0.14588706195354462, -0.17024415731430054, 0.13323356211185455, -0.0189852062612772, 0.0068841176107525826, 0.11833097785711288, 0.03517790511250496, 0.0009345875005237758, 0.07290809601545334, 0.06032981351017952, 0.1074751690030098, -0.15397657454013824, -0.0385274738073349, 0.36372441053390503, -0.009919751435518265, 0.003118253080174327, 0.043463774025440216, -0.00647726422175765, -0.006978271529078484, -0.32303616404533386, -0.17202745378017426, 0.03601096570491791, -0.03560122102499008, -0.0403626412153244, 0.19014950096607208, -0.12495824694633484, 0.18708528578281403, 0.2626858651638031, 0.1261470764875412, 0.09551766514778137, -0.003876357339322567, 0.06754555553197861, 0.21728481352329254, -0.06856833398342133, 0.10321909189224243, -0.2457486242055893, 0.24397991597652435, 0.003280142555013299, 0.016896480694413185, -0.022204166278243065, -0.05475163459777832, -0.01107937004417181, -0.017294729128479958, -0.01456615049391985, -0.08648452907800674, -0.1311144381761551, 0.037708114832639694, 0.039701689034700394, 0.04492511600255966, 0.16818277537822723, 0.0691104382276535, -0.2838023900985718, 0.09279029816389084, -0.021383609622716904, -0.022241543978452682, 0.10605613887310028, -0.010536943562328815, 0.20849522948265076, 0.11028996109962463, 0.037577372044324875, -0.05966674163937569, -0.027045153081417084, -0.0375281497836113, 0.004102004691958427, -0.2375556379556656, 0.24668627977371216, -0.03950043395161629, -0.028491241857409477, 0.2276795208454132, 0.012152962386608124, -0.008334938436746597, 0.2017160952091217, -0.006063986569643021, -0.07269855588674545, -0.02560923621058464, 0.07867859303951263, -0.024470068514347076, 0.07769661396741867, -0.09381403028964996, -0.008435346186161041, 0.26728636026382446, -0.013203910551965237, -0.20446325838565826, 0.03765661269426346, 0.023808706551790237, 0.04440072551369667, 0.03516155108809471, 0.05638700723648071, -0.035182565450668335, -0.016520004719495773, -0.1346600204706192, 0.15910953283309937, -0.021349923685193062, 0.21794848144054413, -0.0005451570032164454, -0.1603587120771408, 0.15728916227817535, 0.09259022772312164, -0.10377530753612518, 0.09227515012025833, -0.04607026278972626, 0.008743698708713055, 0.042587462812662125, 0.13799290359020233, -0.006644302513450384, -0.023804044350981712, -0.012565206736326218, 0.27711063623428345, 0.020520223304629326, 0.15364322066307068, 0.05214778333902359, 0.015514660626649857, -0.003238472854718566, -0.02871248684823513, 0.2333703637123108, -0.06471599638462067, -0.0430951789021492, -0.024734199047088623, 0.039602767676115036, -0.020923666656017303, -0.19724446535110474, -0.15144748985767365, 0.19426873326301575, 0.012278072535991669, 0.059723325073719025, 0.014351674355566502, 0.012092222459614277, 0.028832415118813515, 0.14433258771896362, -0.12139587104320526, -0.2716573476791382, -0.2542044222354889, 0.057121098041534424, 0.08157581835985184, -0.011784025467932224, 0.11199332773685455, 0.04446762427687645, -0.016450034454464912, 0.2370549738407135, -0.20341572165489197, -0.041760291904211044, -0.021288946270942688, -0.10391554981470108, 0.05377872288227081, 0.11156507581472397, 0.04940246790647507, 0.06941694766283035, 0.12203845381736755, -0.1251223087310791, -0.03684145212173462, -0.014281651005148888, 0.007776370272040367, -0.05144374445080757, 0.28965601325035095, -0.3304176330566406, 0.06938754767179489, 0.008567891083657742, 0.07684411853551865, -0.02632286585867405, 0.11933170258998871, -0.08500859141349792, 0.003937670029699802, -0.1118306890130043, 0.0016422817716374993, -0.12267713248729706, 0.11298142373561859, -0.014263120479881763, 0.009484456852078438, 0.17071010172367096, -0.05775722861289978, -0.08094234764575958, -0.0702892541885376, -0.03412475809454918, 0.015065670013427734, 0.1785389631986618, -0.13822974264621735, -0.07687599956989288, 0.11089643090963364, -0.06400886178016663, -0.033013977110385895, -0.06869743764400482, -0.10982399433851242, 0.04028527811169624, -0.07956679165363312, -0.2386833280324936, -0.029452461749315262, 0.28436288237571716, -0.025964869186282158, 0.18213500082492828, 0.049720145761966705, 0.16106019914150238, 0.2305891066789627, -0.04777451604604721, -0.053863853216171265, 0.1518881767988205, 0.2543639540672302, 0.026650838553905487, -0.10002471506595612, -0.1015130877494812, -0.20121169090270996, 0.06708391010761261, 0.05695059522986412, -0.06410306692123413, -0.13978730142116547, -0.09740521013736725, -0.01334360707551241, 0.08812184631824493, 0.02454269677400589, -0.10547423362731934, 0.06513562053442001, -0.0641171857714653, 0.04783978685736656, 0.01087765209376812, 0.12202352285385132, 0.024276316165924072, 0.014850600622594357, -0.18768751621246338, 0.20089073479175568, -0.32988375425338745, -0.026510372757911682, -0.058676473796367645, -0.04532269760966301, -0.08030698448419571, -0.1082884892821312, 0.08408142626285553, -0.018981045112013817, -0.10977783799171448, -0.04451404884457588, -0.11500269919633865, 0.009134749881923199, -0.10202828049659729, -0.11033068597316742, 0.11729457229375839, 0.07832947373390198, -0.010650482028722763, 0.07338657975196838, -0.04940870776772499, 0.02187119983136654, -0.02332223393023014, -0.014220775105059147, -0.00014507539162877947, 0.20844344794750214, -0.13164573907852173, 0.09212490916252136, 0.09795483946800232, 0.008407063782215118, -0.04079749435186386, -0.04353868588805199, -0.058975376188755035, -0.18225009739398956, 0.17520536482334137, -0.03832811862230301, 0.04771483689546585, 0.10272780805826187, -0.05597184598445892, -0.019616156816482544, -0.18757814168930054, 0.07442981004714966, 0.1445852369070053, 0.19857262074947357, -0.0850444808602333, -0.08538657426834106, -0.05090158432722092, 0.19852368533611298, -0.18375660479068756, 0.015529866330325603, 0.11564351618289948, 0.07538172602653503, 0.038226380944252014, -0.18777813017368317, 0.07752722501754761, -0.08053030073642731, 0.07854398339986801, 0.05703185871243477, 0.0406130813062191, -0.367631196975708, 0.2902714014053345, -0.009592424146831036, 0.048923421651124954, 0.027399612590670586, 0.012203030288219452, -0.12325707823038101, -0.09764086455106735, 0.044006235897541046, 0.04557906091213226, -0.056698255240917206, 0.019062746316194534, -0.22530046105384827, -0.18457506597042084, -0.004692446906119585, -0.06870260834693909, 0.14646172523498535, 0.21960213780403137, -0.061285533010959625, -0.12375187128782272, -0.05129646137356758, 0.02728947438299656, -0.002116022165864706, -0.15110325813293457, 0.13883957266807556, 0.09418074041604996, -0.05557795986533165, -0.1494838297367096, 0.08129749447107315, -0.008387763053178787, 0.05223696678876877, 0.16751796007156372, 0.04788968712091446, -0.11809147894382477, 0.06484948843717575, -0.07033057510852814, -0.06057344749569893, 0.041323721408843994, 0.19083908200263977, -0.03438492864370346, 0.07935547828674316, 0.000784938398282975, 0.01144459843635559, -0.10377581417560577, -0.06792313605546951, -0.3626134693622589, 0.11812158674001694, 0.02271553874015808, -0.03630866855382919, -0.04757165163755417, 0.033382635563611984, 0.07760979235172272, -0.1853187382221222, 0.02194211073219776, 0.023057647049427032, 0.06417054682970047, -0.13466167449951172, -0.03795795515179634, -0.14677846431732178, -0.0007885312661528587, 0.29895639419555664, -0.13950493931770325, 0.1713615208864212, 0.043798450380563736, -0.11240833252668381, 0.0895359069108963, -0.04946276545524597, -0.031159784644842148, -0.07193465530872345, 0.07546316832304001, -0.12947066128253937, -0.10853062570095062, -0.01121844444423914, 0.08649677038192749, 0.009605909697711468, -0.062133654952049255, 0.06209540367126465, -0.043913327157497406, -0.004132543224841356, 0.014509337022900581, 0.033971816301345825, 0.08047860860824585, 0.11414504051208496, 0.24334707856178284, -0.13190069794654846, -0.010855275206267834, -0.06609487533569336, 0.04484263062477112, -0.11279453337192535, 0.06166242063045502, -0.07420652359724045, 0.04640814661979675, -0.049956902861595154, -0.002646974753588438, -0.1308843493461609, 0.026443324983119965, -0.0708455890417099, 0.13213205337524414, -0.1256243735551834, -0.013959565199911594, 0.08277136087417603, -0.13401587307453156, 0.2232763022184372, 0.057679712772369385, -0.008109171874821186, -0.03937143832445145, -0.003359447466209531, 0.041321106255054474, -0.09275110065937042, -0.8415044546127319, 0.05218823254108429, -0.09333973377943039, -0.016544345766305923, 0.04430290684103966, 0.026491539552807808, 0.06331393122673035, 0.13737580180168152, -0.06380440294742584, -0.05123446136713028, -0.012982786633074284, 0.009730991907417774, -0.012204238213598728, 0.01938347890973091, 0.06182385981082916, 0.12015949189662933, -0.012874430976808071, -0.014197899959981441, -0.01754033751785755, -0.26695290207862854, 0.07449900358915329, 0.10766680538654327, 0.12370998412370682, 0.025131355971097946, -0.15409308671951294, -0.22835460305213928, 0.07697954773902893, 0.07862275838851929, 0.03972933813929558, 0.017169717699289322, -0.09900971502065659, 0.010143875144422054, -0.06317500025033951, 0.0071407947689294815, -0.26029276847839355, -0.039655908942222595, 0.23318341374397278, 0.31081706285476685, -0.13937750458717346, -0.022006677463650703, -0.11137866973876953, -0.18722569942474365, -0.2758941948413849, 0.05838410183787346, 0.0382889062166214, -0.0024779746308922768, 0.11813308298587799, -0.24369774758815765, -0.19677969813346863, -0.03600359335541725, -0.15618224442005157, -0.19596318900585175, 0.22464825212955475, 0.030260389670729637, -0.008617663756012917, 0.04804239794611931, -0.016261281445622444, 0.0611875057220459, 0.04573504626750946, 0.006255551241338253, -0.02336093783378601, -0.0326327346265316, 0.04077036678791046, -0.02197679691016674, 0.1121937707066536, -0.2033795565366745, 0.02094326540827751, -0.08402655273675919, 0.06947988271713257, -0.005525924731045961, 0.08637525886297226, 0.07530080527067184, -0.010190696455538273, 0.004418283700942993, 0.13637879490852356, 0.010522083379328251, -0.028036175295710564, 0.03571269288659096, -0.06321942061185837, -0.0956907570362091, 0.33066457509994507, 0.00292313564568758, 0.10250276327133179, -0.22670936584472656, -0.037456363439559937, 0.12832768261432648, 0.007528932765126228, -0.144271120429039, -0.21309605240821838, -0.07504642009735107, 0.05479572340846062, -0.03510681912302971, -0.05935439094901085, -0.13742123544216156, 0.1147901639342308, -0.11614318937063217, 0.17256122827529907, -0.005550668109208345, 0.005404012743383646, 0.046890418976545334, 0.15070432424545288, 0.053375519812107086, 0.16924799978733063, -0.07846733182668686, -0.04359590634703636, 0.08277220278978348, 0.001118136802688241, -0.07697301357984543, 0.12801405787467957, 0.0959315225481987, 0.07009940594434738, 0.0869441106915474, -0.039563585072755814, -0.026164520531892776, -0.11299188435077667, -0.04737696424126625, -0.006628880742937326, -0.04724826663732529, 0.032053910195827484, 0.01531374454498291, 0.23005034029483795, -0.09553556889295578, -0.06460584700107574, 0.07030873000621796, 0.023810915648937225, -0.0574394129216671, -0.02583361603319645, -0.011141619645059109, -0.009803750552237034, 0.21923892199993134, 0.035863619297742844, 0.28513187170028687, -0.033286117017269135, -0.01210083533078432, -0.029619421809911728, 0.10706982016563416, 0.07350603491067886, -0.07060098648071289, -0.17161287367343903, -0.10769475996494293, 0.046609215438365936, -0.12305085361003876, 0.08568926155567169, 0.3383277654647827, 0.11605880409479141, -0.10914021730422974, 0.015355417504906654, -0.047690603882074356, 0.1808089017868042, -0.22653986513614655, 0.01965492218732834, -0.028996603563427925, 0.04451298713684082, 0.09787142276763916, 0.007109915371984243, 0.000554087630007416, 0.003939752001315355, -0.02370571903884411, -0.212123841047287, 0.19777189195156097, -0.39432263374328613, 0.033022716641426086, 0.09661460667848587, 0.1873631328344345, 0.02292175032198429, 0.1277836263179779, -0.013850286602973938, 0.1827947050333023, 0.06757509708404541, 0.016571922227740288, 0.13547100126743317, -0.09654495120048523, -0.01159846130758524, -0.07173673808574677, -0.19740524888038635, -0.07114264369010925, 0.04034185782074928, -0.09642662853002548, -0.014636630192399025, 0.09194649755954742, 0.0516936331987381, -0.14785809814929962, -0.11367981135845184, -0.08001235127449036, 0.12868352234363556, 0.1939048171043396, -0.09706618636846542, 0.04848194867372513, -0.21891237795352936, -0.14488890767097473, 0.1518557071685791, 0.023102903738617897, 0.026920059695839882, -0.1374031901359558, 0.059421319514513016, 0.22221440076828003, -0.10146985948085785, 0.05509040504693985, 0.07781851291656494, -0.11700263619422913, 0.02749498561024666, 0.11648713797330856, 0.14801497757434845, 0.03714881092309952, -0.13473345339298248, -0.1891414374113083, 0.18961594998836517, 0.08093146234750748, 0.0010000052861869335, 0.018631095066666603, -0.08775448799133301, 0.09099715203046799, -0.006825156044214964, -0.09117329865694046, -0.01009884662926197, 0.0031245239078998566, 0.1938152015209198, -0.00949938502162695, -0.2674510180950165, 0.15159527957439423, 0.05557870492339134, 0.11513169854879379, -0.007654651068150997, 0.12661704421043396, -0.1040126234292984, 0.22232574224472046, 0.09666120260953903, 0.05257994681596756, -0.030984731391072273, 0.009999304078519344, 0.01653784140944481, -0.15194950997829437, -0.04631586745381355, 0.09547469019889832, 0.3076327443122864, -0.1761937290430069, -0.08094213157892227, -0.15389686822891235, -0.010141427628695965, 0.07795976102352142, -0.0820898786187172, 0.16234761476516724, -0.15605787932872772, -0.28269660472869873, 0.10643291473388672, -0.10557243227958679, 0.06719358265399933, 0.048755355179309845, 0.14032475650310516, -0.09416670352220535, -0.26461049914360046, -0.0061964113265275955, 0.17583999037742615, -0.0632016733288765, 0.014230345375835896, 0.33036038279533386, 0.015745190903544426, -0.059537291526794434, 0.017866676673293114, -0.02207336761057377, 0.2319963276386261, 0.0003070015227422118, 0.04155220091342926, -0.22847960889339447, 0.032724179327487946, 0.10002462565898895, -0.04994842782616615, -0.2244604378938675, -0.1280897706747055, -0.1449463963508606, 0.08361785113811493, 0.13594400882720947, -0.08309052884578705, -0.10694016516208649, 0.2299650013446808, 0.16254110634326935, -0.062008097767829895, 0.09401284158229828, -0.023377317935228348, 0.26775845885276794, -0.10369652509689331, 0.07378827035427094, 0.2202959656715393, 0.04107062146067619, -0.02380511909723282, -0.014953085221350193, -0.004139113239943981, 0.003230065805837512, 0.08558723330497742, 0.12074246257543564, 0.016053130850195885, -0.016797419637441635, -0.1669408529996872, 0.05103016272187233, -0.17244085669517517, -0.03607814759016037, -0.049821291118860245, -0.08010804653167725, -0.044846322387456894, -0.0537266731262207, 0.0854295864701271, -0.005763980094343424, -0.018513044342398643, 0.12086065113544464, -0.10272742807865143, 0.02945096790790558, -0.08587102591991425, -0.29453718662261963, 0.13332505524158478, 0.17222817242145538, -0.05413911119103432, -0.08875175565481186, -0.07539449632167816, 0.01545841246843338, 0.0910462960600853, 0.15754418075084686, -0.017257483676075935, -0.1300506293773651, 0.032390765845775604, -0.005214828532189131, -0.23785249888896942, -0.30720412731170654, 0.11779018491506577, -0.05128394067287445, 0.2745947241783142, -0.09811527281999588, -0.17367541790008545, 0.09474549442529678, -0.048450179398059845, 0.0748346820473671, 0.07218769937753677, 0.14489829540252686, 0.021744010969996452, -0.062163397669792175, -0.13737861812114716, 0.18221352994441986, -0.013876543380320072, 0.10011156648397446, 0.1198178380727768, -0.01345227099955082, -0.09499985724687576, 0.024468274787068367, 0.007205050904303789, 0.06231868639588356, -0.19593733549118042, -0.05303493142127991, 0.119690902531147, 0.1018025353550911, 0.11530806124210358, 0.05467076972126961, 0.17811283469200134, 0.04443223774433136, -0.06391352415084839, -0.08150795847177505, 0.009709784761071205, 0.10787232965230942, -0.10496564209461212, -0.01950729824602604, -0.02384036034345627, 0.1411183774471283, 0.13836383819580078, -0.18532373011112213, -0.053610168397426605, -0.03203924000263214, -0.025785749778151512, 0.026273511350154877, -0.033837080001831055, -0.07489767670631409, 0.07723712176084518, 0.15337741374969482, 0.15114903450012207, 0.002787330886349082, -0.07534278184175491, 0.0799439549446106, 0.06776756048202515, -0.015465986914932728, -0.08101887255907059, -0.05103171244263649, 0.006631062366068363, -0.024237150326371193, -0.010822457261383533, 0.014482516795396805, 0.5037632584571838, -0.2531397044658661, 0.022644545882940292, -0.04643690213561058, -0.24181672930717468, 0.09520941227674484, -0.0030520965810865164, -0.0054189953953027725, -0.03973258286714554, 0.06813222169876099, -0.0661306232213974, 0.21139509975910187, 0.04097868129611015, -0.2107378989458084, -0.0008799673523753881, 0.06062047556042671, 0.06420622020959854, -0.057470791041851044, -0.05955350399017334, -0.1130322515964508, -0.14730426669120789, 0.3167344927787781, 0.06447283923625946, 0.048000454902648926, 0.017703834921121597, 0.023266557604074478, 0.14211547374725342, 0.11287471652030945, 0.115321584045887, -0.19239267706871033, -0.07306218892335892, -0.013338101096451283, -0.10759109258651733, 0.0112551124766469, -0.10542933642864227, 0.10316933691501617, -0.16708435118198395, -0.1742100715637207, -0.21644379198551178, 0.028288643807172775, -0.046168528497219086, 0.08824042975902557, -0.0018173729768022895, -0.04751959443092346, 0.08121433109045029, 0.026255132630467415, 0.104427769780159, 0.17171066999435425, -0.09139817953109741, -0.10852345079183578, 0.08814410120248795, -0.08545178920030594, 0.02460513263940811, 0.14172066748142242, -0.05756966397166252, 0.07355628907680511, -0.07615766674280167, -0.12209799885749817, 0.03121592476963997, 0.11588875949382782, -0.013634839095175266, 0.06113007664680481, 0.08323688060045242, 0.09024056047201157, -0.15342538058757782, 0.008964380249381065, -0.2684395909309387, 0.12286757677793503, 0.01602596789598465, 0.0340084545314312, -0.10668010264635086, -0.02331625670194626, -0.09243153780698776, 0.18800008296966553, 0.02832140028476715, -0.011014827527105808, 0.1360417902469635, -0.09658066928386688, -0.11284460872411728, -0.18200568854808807, -0.017110057175159454, -0.053277306258678436, 0.08571858704090118, 0.04056543856859207, -0.031695883721113205, 0.1043350026011467, 0.1326456516981125, -0.0980478823184967, 0.129293754696846, 0.17592185735702515, -0.22625558078289032, 0.03569760546088219, -0.3457622826099396, -0.028046434745192528, -0.09885603934526443, -0.031500302255153656, -0.09928230941295624, 0.2185773402452469, 0.04273419827222824, 0.21102376282215118, -0.19075219333171844, 0.011478160507977009, -0.08955337107181549, 0.10853936523199081, 0.01652657985687256, -0.00047425556113012135, 0.019538691267371178, -0.07684900611639023, 0.0005064155557192862, -0.025155825540423393, -0.09575790166854858, 0.02836642786860466, 0.0029135816730558872, 0.12351049482822418, 0.10195228457450867, -0.061307892203330994, -0.012257532216608524, -0.031169220805168152, 0.07191658765077591, 0.104769766330719, 0.057626962661743164, -0.10577237606048584, -0.14567777514457703, -0.033320724964141846, 0.3382490575313568, -0.15607252717018127, 0.08960844576358795, -0.00615520728752017, 0.11019424349069595, -0.031025445088744164, 0.037959448993206024, -0.018626084551215172, -0.0008084956789389253, 0.08578800410032272, 0.11824209988117218, -0.22200115025043488, -0.16450071334838867, -0.2571665346622467, 0.027894126251339912, 0.09083797037601471, -0.1470751166343689, 0.08873497694730759, -0.060272544622421265, -0.0506674088537693, 0.009478976018726826, 0.0252652820199728, -0.0138412369415164, 0.22661690413951874, -0.01939438283443451, 0.10296381264925003, 0.012041725218296051, -0.15692302584648132, 0.019074101001024246, 0.03617957606911659, 0.35140880942344666, -0.07178423553705215, 0.08835922926664352, -0.022473178803920746, 0.10338113456964493, 0.05869162455201149, -0.06418476998806, -0.03536732867360115, 0.060461852699518204, -0.1359795331954956, 0.1157207190990448, -0.06994672119617462, -0.0992935374379158, 0.0902118906378746, 0.10810396820306778, -0.24162274599075317, 0.1424475908279419, 0.024983953684568405, 0.08735589683055878, -0.19581177830696106, 0.040732014924287796, 0.15454211831092834, -0.05477983504533768, -0.00838405266404152, 0.05244514346122742, 0.005803119856864214, 0.07947969436645508, 0.22211681306362152, -0.07883764803409576, 0.05822301656007767, 0.03979792445898056, -0.04614245519042015, 0.10138678550720215, 0.1633722484111786, -0.4113121032714844, -0.08483171463012695, -0.03737972304224968, -0.05986737832427025, -0.00012298606452532113, 0.1977188140153885, -0.12217985093593597, 0.060379739850759506, -0.007156244479119778, 0.048058826476335526, -0.11222132295370102, -0.016602786257863045, -0.09499279409646988, -0.1455170214176178, 0.07734289020299911, 0.13974998891353607, 0.06332135945558548, -0.0825960710644722, -0.01614527590572834, -0.0052095516584813595, -0.056983914226293564, 0.010795964859426022, 0.005957771558314562, 0.08994317054748535, -0.009597042575478554, -0.1363043189048767, 0.044383369386196136, -0.17016461491584778, 0.03180331364274025, -0.11435828357934952, 0.15420280396938324, 0.04349531605839729, -0.018703721463680267, 0.1028151661157608, 0.01790371723473072, 0.0568644255399704, 0.24739551544189453, -0.03645465895533562, -0.06625624746084213, 0.05456377938389778, -0.03755418211221695, -0.13168004155158997, 0.04752793163061142, -0.01562198530882597, -0.04695868864655495, -0.10891038924455643, -0.12624193727970123, -0.014402158558368683, 0.021534940227866173, -0.02210787497460842, 0.15759344398975372, -0.0010443333303555846, 0.08999659866094589, -0.11536266654729843, 0.01765473186969757, -0.15946057438850403, -0.16968727111816406, 0.11767430603504181, 0.11338517814874649, 0.052820540964603424, 0.07009944319725037, -0.09836572408676147, -0.033167462795972824, 0.1483183354139328, -0.18059316277503967, -0.06735453754663467, -0.13891750574111938, -0.16857756674289703, 0.09124672412872314, 0.28807446360588074, 0.006478253286331892, 0.038514893501996994, -0.04378633201122284, 0.04950126260519028, -0.08525023609399796, -0.05786069855093956, -0.11925198882818222, -0.004071440547704697, 0.027646470814943314, 0.17521212995052338, 0.009115157648921013, 0.011118723079562187, 0.06212294101715088, 0.11528511345386505, 0.12840121984481812, -0.017551731318235397, -0.054210808128118515, -0.08133001625537872, -0.14415478706359863, 0.06284664571285248, 0.018401170149445534, 0.11229298263788223, 0.21062244474887848, 0.14240267872810364, 0.05482299253344536, 0.15938787162303925, 0.0343436561524868, 0.008099230006337166, 0.07743098586797714, 0.1340300440788269, 0.051364801824092865, 0.06562144309282303, 0.13045087456703186, -0.047872789204120636, -0.038169849663972855, 0.24958479404449463, -0.1562110334634781, 0.1764976978302002, 0.01873343251645565, 0.3632068336009979, 0.03541801497340202, 0.12289005517959595, -0.13900458812713623, -0.1476520448923111, 0.1340666115283966, -0.03937428444623947, 0.06246687471866608, 0.0762171745300293, 0.08326806873083115, 0.14188314974308014, 0.048050474375486374, -0.16338378190994263, 0.1988561898469925, 0.05799812078475952, -0.08878563344478607, 0.041150495409965515, -0.020463962107896805, 0.0803707167506218, -0.18022304773330688, 0.16453762352466583, -0.0917801633477211, -0.04821391403675079, 0.06367652118206024, -0.0843689814209938, 0.4441176950931549, -0.016956493258476257, 0.23117080330848694, -0.09648492932319641, 0.20324185490608215, 0.020972371101379395, 0.12995806336402893, -0.01734127849340439, -0.03931739181280136, -0.09371490031480789, 0.22181284427642822, -0.010136807337403297, 0.045408256351947784, -0.23913715779781342, 0.035278815776109695, 0.04898635298013687, 0.2410375326871872, -0.11639213562011719, 0.07349462807178497, -0.3647336959838867, 0.0779729038476944, 0.05100974440574646, 0.01767740584909916, 0.0238881204277277, -0.052306659519672394, -0.09126216918230057, -0.013804980553686619, 0.14779998362064362, 0.03155867010354996, 0.044111285358667374, -0.04192373529076576, 0.07647492736577988, 0.03206216171383858, 0.09627475589513779, -0.11811323463916779, 0.11904369294643402, 0.3352820873260498, 0.14005158841609955, -0.11310546100139618, -0.06786056607961655, -0.10096536576747894, -0.07717269659042358, -0.06411553919315338, 0.15336652100086212, 0.02382669225335121, 0.04729091748595238, -0.08747130632400513, 0.0013518647756427526, -0.1253553032875061, 0.07720260322093964, -0.02872432954609394, 0.046182792633771896, 0.10200436413288116, 0.034015074372291565, 0.019923031330108643, -0.09290429949760437, -0.07727109640836716, 0.028967607766389847, 0.032426267862319946, -0.12768509984016418, -0.007344893645495176, 0.014601594768464565, -0.01971033401787281, -0.005099124275147915, -0.02903745137155056, 0.14971669018268585, -0.09916388988494873, 0.03489694744348526, -0.1258833110332489, -0.028587447479367256, -0.03397520259022713, 0.14930503070354462, -0.07846467941999435, -0.12963005900382996, -0.07279133796691895, 0.04408721998333931, 0.0308579932898283, -0.006258940789848566, -0.04101668670773506, 0.05930383503437042, 0.2124209851026535, 0.09215003997087479, 0.030940059572458267, -0.08672329038381577, 0.1562948375940323, -0.07745224237442017, -0.010976649820804596, -0.04629490152001381, 0.14424848556518555, -0.025921804830431938, -0.28011855483055115, -0.03577812388539314, 0.055591881275177, -0.018370160833001137, -0.0551881417632103, 0.008270388469099998, -0.21312636137008667, 0.0013822572072967887, -0.0833890363574028, -0.0768943801522255, 0.009344914928078651, 0.020590707659721375, 0.06282280385494232, -0.016285520046949387, 0.02702883630990982, 0.038483817130327225, 0.10633975267410278, -0.06718127429485321, -0.027375638484954834, -0.011920146644115448, -0.1292172074317932, 0.05327121168375015, 0.01757468469440937, 0.07391685247421265, -0.01891203038394451, -0.03643696755170822, 0.02343130297958851, 0.037328239530324936, 0.02667418122291565, 0.03686734661459923, 0.024672025814652443, 0.004845629446208477, -0.1051706001162529, 0.05711802467703819, 0.06801530718803406, 0.1958632469177246, 0.01587602309882641, -0.017111333087086678, -0.1816807985305786, 0.11824286729097366, -0.08148705959320068, -0.05266239494085312, -0.05325914919376373, 0.14800608158111572, -0.04959419369697571, -0.029111292213201523, -0.07322517037391663, -0.16912883520126343, -0.030591780319809914, 0.007999616675078869, 0.09075259417295456, -0.08791937679052353, 0.16288240253925323, -0.12427131831645966, 0.023351609706878662, -0.05739869922399521, -0.06303924322128296, -0.2688836455345154, 0.34832891821861267, -0.1343412846326828, 0.05763958394527435, 0.29840272665023804, 0.016165679320693016, 0.019297027960419655, 0.13495203852653503, 0.005937052424997091, 0.08234383165836334, -0.03571072220802307, -0.08127576112747192, 0.18477021157741547, -0.1005154699087143, 0.11965757608413696, -0.15221422910690308, -0.09396141767501831, 0.2273135781288147, 0.14468711614608765, -0.17695340514183044, -0.008547021076083183, 0.04180588573217392, 0.03555246815085411, -0.03407871350646019, -0.16090476512908936, -0.12267941236495972, -0.06880558282136917, 0.08772242814302444, -0.2070760577917099, -0.07130195945501328, -0.015834089368581772, -0.029883023351430893, 0.022729620337486267, 0.17679567635059357, -0.002102330792695284, 0.03013351373374462, 0.04703463986515999, 0.15166905522346497, -0.19889043271541595, 0.06161237135529518, -0.06462439149618149, 0.018476465716958046, 0.023346129804849625, -0.004011949058622122, -0.19635207951068878, 0.0932820662856102, -0.15570572018623352, 0.030357614159584045, 0.023417072370648384, -0.07386866211891174, -0.058221522718667984, 0.16238215565681458, -0.17113035917282104, -0.02824525535106659, 0.07359343022108078, -0.00639424379914999, 0.04180673137307167, 0.13180716335773468, -0.041737232357263565, 0.021119186654686928, -0.02194688841700554, 0.019882025197148323, 0.04865119978785515, 0.08698275685310364, -0.15826961398124695, -0.10990186035633087, -0.01385301724076271, 0.08955413103103638, -0.06133623421192169, 0.030549580231308937, -0.010809239000082016, 0.06370113044977188, 0.058437224477529526, -0.12942935526371002, -0.007302135694772005, 0.16225267946720123, -0.12364747375249863, -0.15207326412200928, 0.01255146786570549, 0.039249762892723083, -0.08391455560922623, 0.11180322617292404, 0.18170705437660217, -0.07162796705961227, -0.07735394686460495, -0.2124004065990448, -0.10868510603904724, 0.2196635901927948, -0.10331472009420395, -0.13918349146842957, 0.020105063915252686, -0.0162743479013443, -0.07434449344873428, -0.009975505992770195, 0.01364891603589058, 0.07773639261722565, -0.12404339760541916, 0.03968635946512222, -0.0647331029176712, -0.08395205438137054, -0.044257111847400665, -0.1816188395023346, 0.11202103644609451, 0.3743917942047119, 0.1224551871418953, 0.05695943906903267, 0.04363112151622772, -0.000797503802459687, -0.0404474250972271, -0.14750470221042633, -0.16733300685882568, 0.21011672914028168, 0.007850581780076027, 0.1708148866891861, 0.12964889407157898, 0.0408053919672966, 0.06481046974658966, -0.017487000674009323, -0.09985940158367157, 0.0755443200469017, -0.11537793278694153, -0.005591508932411671, -0.05884445831179619, 0.18784700334072113, 0.19331860542297363, -0.03399835526943207, -0.047505345195531845, 0.09342555701732635, -0.08223908394575119, -0.029178446158766747, 0.05299873277544975, -0.05752924829721451, 0.02306285873055458, 0.34608906507492065, 0.22648991644382477, -0.15170106291770935, 0.1708413064479828, 0.10726843029260635, 0.13596047461032867, 0.02321012131869793, -0.04840201511979103, 0.03652530908584595, 0.03177552670240402, -0.15666045248508453, -0.0027514805551618338, 0.10056968778371811, -0.015228936448693275, -0.08637475222349167, -0.11316020041704178, 0.031876254826784134, 0.02863216958940029, 0.042943548411130905, -0.03130895644426346, -0.03867637738585472, -0.07988035678863525, 0.05650912597775459, -0.04353528469800949, -0.17995081841945648, 0.21771977841854095, 0.009220062755048275, -0.2619900703430176, 0.07388446480035782, -0.10705398768186569, 0.006751260720193386, 0.23675964772701263, 0.026219528168439865, 0.1872115284204483, -0.05052248388528824, 0.02142682671546936, 0.044723790138959885, 0.05275321006774902, -0.05626428499817848, 0.17842558026313782, 0.1429300755262375, -0.01024458184838295, -0.04962620884180069, -0.01422672439366579, 0.27153241634368896, 0.05729550123214722, -0.018079403787851334, 0.15490704774856567, -0.10519617050886154, -0.09513281285762787, -0.015063763596117496, 0.03389012813568115, 0.08343669027090073, 0.06791215389966965, -0.08857765048742294, 0.05806775763630867, -0.097824327647686, -0.0662955641746521, 0.11750341951847076, -0.015584303997457027, 0.0010980520164594054, -0.12068349868059158, 0.009914770722389221, 0.004111526533961296, -0.06481445580720901, 0.17551323771476746, -0.19703173637390137, -0.06024770066142082, 0.08101638406515121, 0.19331727921962738, -0.1257447749376297, -0.004756296053528786, -0.0018398137763142586, -0.006010518874973059, -0.07283269613981247, -0.14937855303287506, 0.044158004224300385, 0.002377705881372094, -0.03828481584787369, 0.12270006537437439, -0.048527564853429794, -0.022658664733171463, 0.1262226551771164, -0.1410481035709381, 0.04930337890982628, -0.0820465236902237, -0.06671882420778275, -0.07442896068096161, 0.029535267502069473, 0.0009709092555567622, -0.05186086148023605, -0.1641303151845932, 0.039498504251241684, 0.005056076217442751, -0.008526481688022614, -0.09466536343097687, -0.08654409646987915, 0.025885634124279022, 0.15304036438465118, -0.08324593305587769, -0.11579683423042297, -0.07830452919006348, 0.19093050062656403, -0.0765710100531578, -0.13684715330600739, -0.030309779569506645, 0.5164535045623779, 0.24234750866889954, 0.14427196979522705, 0.013995903544127941, -0.11275532841682434, 0.02990833856165409, -0.11756011098623276, 0.029904428869485855, -0.01134579349309206, -0.015209496952593327, -0.07569760829210281, -0.19655632972717285, 0.11894615739583969, -0.08040232956409454, -0.04118901491165161, -0.010551495477557182, -0.04837660491466522, 0.1332014799118042, -0.013429615646600723, -0.04103629291057587, -0.015163987874984741, 0.11048130691051483, 0.45996952056884766, 0.15867580473423004, -0.25779256224632263, 0.09016035497188568, -0.04961613565683365, 0.13559213280677795, -0.11660405993461609, 0.01713782735168934, 0.0707482099533081, -0.12625378370285034, -0.05661455914378166, -0.16935235261917114, -0.16380903124809265, 0.008839180693030357, 0.07445001602172852, -0.2190535068511963, 0.015112126246094704, 0.043745897710323334, 0.014698357321321964, 0.06273122876882553, -0.06294944882392883, 0.016057314351201057, -0.03735119104385376, -0.09197176992893219, -0.05110219120979309, 0.17455372214317322, -0.03174349665641785, -0.30087509751319885, 0.2686964273452759, -0.0067801945842802525, 0.00998879037797451, -0.04334568977355957, -0.02893953025341034, -0.15363092720508575, -0.12082840502262115, -0.11881148815155029, 0.018035411834716797, -0.07245035469532013, 0.03183674439787865, 0.03733556345105171, -0.29112890362739563, 0.034191202372312546, 0.053092483431100845, 0.15834739804267883, 0.12125475704669952, -0.09317704290151596, -0.06592809408903122, 0.05380263924598694, 0.08235751837491989, 0.05360780656337738, -0.0816585123538971, 0.07601730525493622, -0.11376768350601196, -0.15457648038864136, 0.00044140510726720095, 0.07049670815467834, 0.07845494896173477, 0.0421188548207283, 0.020610103383660316, -0.021862739697098732, 0.08325864374637604, -0.17621637880802155, -0.01133698970079422, -0.047671325504779816, -0.13638406991958618, 0.1954382359981537, 0.17834773659706116, 0.19985443353652954, 0.010839737951755524, 0.00043984592775814235, -0.04860513657331467, 0.21063673496246338, -0.11486047506332397, -0.020551228895783424, 0.13049542903900146, 0.12887299060821533, 0.11007747799158096, 0.13743944466114044, -0.08909507095813751, 0.15476250648498535, 0.04139008745551109, -0.016863731667399406, 0.12123417109251022, -0.0029248762875795364, -0.03200408071279526, 0.08684416860342026, -0.022916974499821663, -0.07536355406045914, -0.027175424620509148, 0.027572130784392357, -0.053559333086013794, 0.008534114807844162, 0.09882362186908722, 0.052295900881290436, 0.1709480583667755, -0.05228504538536072, 0.10427810251712799, -0.048744410276412964, 0.017818843945860863, -0.013395767658948898, 0.09184888750314713, -0.05182081088423729, 0.034609105437994, 0.02852827124297619, -0.015992768108844757, 0.20935040712356567, 0.05154283344745636, 0.06028423458337784, 0.019923249259591103, -0.08091267943382263, -0.06678188592195511, 0.12344551086425781, 0.21883568167686462, -0.06916845589876175, 0.05071323737502098, 0.20067331194877625, 0.07072185724973679, 0.0018598760943859816, -0.12199746072292328, -0.010732432827353477, -0.03748577460646629, -0.005936569068580866, -0.11023648083209991, 0.045742541551589966, 0.014916702173650265, -0.2241947203874588, -0.00659191096201539, -0.062104731798172, -0.10589765012264252, -0.04295964166522026, 0.268683522939682, 0.08223731815814972, 0.07599204778671265, 0.038882721215486526, -0.09814043343067169, 0.2288164496421814, -0.21149234473705292, -0.11052905768156052, 0.1560407280921936, 0.1831323206424713, 0.013121637515723705, -0.05430024862289429, -0.06710962951183319, 0.029830314218997955, -0.026884257793426514, 0.09732145071029663, 0.08273040503263474, -0.06025206670165062, -0.026082247495651245, -0.1741880178451538, -0.011055968701839447, 0.031029608100652695, 0.06818234175443649, -0.019671745598316193, 0.07613813132047653, -0.21379584074020386, -0.027806773781776428, 0.09379114955663681, -0.053413450717926025, -0.10714386403560638, 0.4079951047897339, -0.09894376248121262, -0.11714157462120056, 0.08983732759952545, 0.05687415227293968, 0.003631291911005974, -0.07771783322095871, -0.1151866614818573, 0.003065897151827812, -0.05048917606472969, 0.017146475613117218, -0.24899476766586304, 0.22054524719715118, -0.0970713272690773, 0.11336103826761246, -0.011323745362460613, -0.03537843003869057, 0.10070344060659409, 0.0034114534500986338, 0.03682122007012367, -0.05191698670387268, -0.16492363810539246, -0.16770309209823608, 0.1735863983631134, -0.10237345844507217, 0.1979844868183136, 0.10790063440799713, 0.10064216703176498, -0.00022340775467455387, -0.11641900986433029, 0.010739447548985481, 0.011986259371042252, -0.11949796229600906, 0.2268594205379486, -0.3100418150424957, -0.14355367422103882, 0.1176120787858963, 0.11695878952741623, -0.20970389246940613, -0.08333512395620346, -0.019702566787600517, -0.05927621200680733, -0.15582481026649475, 0.12802666425704956, -0.030190279707312584, -0.10673359781503677, -0.0852370485663414, -0.2127690315246582, 0.13101202249526978, 0.050348278135061264, -0.17695793509483337, 0.04235488921403885, 0.05700482055544853, -0.03776952251791954, -0.030049460008740425, 0.060802020132541656, -0.046616826206445694, 0.009484919719398022, 0.2768843472003937, 0.1047566756606102, 0.1466953456401825, 0.14664512872695923, -0.04907569661736488, 0.12293028831481934, 0.17001517117023468, 0.17854049801826477, 0.12464571744203568, 0.08236788213253021, -0.07608546316623688, 0.13150370121002197, -0.12253709137439728, 0.15209312736988068, 0.04128982499241829, 0.06402354687452316, -0.004735251422971487, 0.24735605716705322, -0.025480017066001892, -0.03057626076042652, -0.05556250736117363, 0.13337916135787964, -0.0012128446251153946, 0.07420282065868378, 0.18421557545661926, 0.185934916138649, -0.02338809333741665, 0.2910286784172058, -0.10681132227182388, -0.04347802326083183, 0.10791294276714325, -0.0659111812710762, -0.09492597728967667, 0.22491738200187683, 0.06267988681793213, -0.050314586609601974, 0.022567708045244217, -0.05085492879152298, -0.11047136783599854, -0.040308330208063126, -0.09583361446857452, -0.2511014938354492, -0.17450720071792603, -0.01554824411869049, -0.16149476170539856, 0.3777015209197998, -0.04810122773051262, 0.08709296584129333, -0.06509149074554443, 0.004678048193454742, -0.15034770965576172, 0.09595205634832382, 0.025484679266810417, 0.01454443670809269, 0.00017942444537766278, -0.06769175827503204, 0.06790661811828613, 0.11858650296926498, -0.16365061700344086, -0.08969058841466904, -0.07663819193840027, 0.04313575476408005, 0.10479944944381714, 0.013129310682415962, 0.12891213595867157, -0.09561021625995636, 0.18410247564315796, 0.002580584492534399, 0.07274628430604935, -0.07192111760377884, -0.07856463640928268, 0.13726484775543213, 0.16276104748249054, -0.1644469052553177, -0.02407594583928585, 0.03806806728243828, -0.12511204183101654, -0.100619837641716, 0.18765804171562195, -0.013355824165046215, 0.03473960980772972, 0.06599719077348709, 0.06433539092540741, 0.10555476695299149, -0.17163421213626862, -0.06323472410440445, 0.11358382552862167, 0.03245960921049118, -0.1634717732667923, 0.23059961199760437, 0.08333281427621841, -0.09558875858783722, 0.08443493396043777, 0.17188844084739685, -0.1416182816028595, 0.02685346081852913, 0.0001736099657136947, 0.26150745153427124, 0.06138407811522484, -0.04957839474081993, 0.02954128012061119, 0.09067647904157639, -0.021597344428300858, -0.04942883551120758, -0.052894528955221176, 0.010070760734379292, -0.02765374444425106, 0.1264035850763321, -0.1768382042646408, 0.07105963677167892, -0.25314298272132874, 0.13544631004333496, -0.10620418190956116, 0.012218744494020939, -0.07610597461462021, 0.23726661503314972, -0.051598142832517624, 0.21263614296913147, -0.10808814316987991, -0.03076777048408985, 0.039612747728824615, -0.09979500621557236, 0.05619353428483009, -0.022624287754297256, 0.07654304057359695, -0.24782432615756989, 0.03167754039168358, 0.06691129505634308, 0.06110300123691559, -0.1505817174911499, -0.0019243288552388549, -0.06452248990535736, -0.016870375722646713, -0.001709926757030189, -0.21042563021183014, 0.14872540533542633, -0.19657647609710693, -0.02007734403014183, -0.06560919433832169, -0.11147600412368774, -0.04043029621243477, -0.07899940758943558, 0.26300734281539917, -0.20983609557151794, 0.05118994414806366, 0.03170501068234444, 0.1214580088853836, 0.027232162654399872, 0.27763256430625916, 0.04267753288149834, 0.14965365827083588, 0.05773165076971054, -0.1315385103225708, -0.09932941198348999, -0.06092554330825806, 0.2894853949546814, -0.060483478009700775, 0.0885472372174263, 0.08482611179351807, -0.008489895612001419, 0.08745735138654709, -0.21849514544010162, 0.25468358397483826, -0.03219681233167648, 0.003945790231227875, 0.3712244927883148, 0.2664976716041565, 0.13699284195899963, 0.048827625811100006, 0.1388702541589737, 0.014986841939389706, 0.02511695958673954, 0.04327709972858429, -0.1183323860168457, 0.027119161561131477, -0.04418696463108063, -0.0014764739898964763, 0.04107090085744858, 0.24828952550888062, 0.013157849200069904, -0.059521064162254333, 0.033906370401382446, -0.1502537876367569, -0.12078382074832916, -0.019106537103652954, 0.009342880919575691, 0.049407318234443665, -0.12998360395431519, -0.014852272346615791, -0.06428937613964081, 0.012783830985426903, -0.03574039041996002, -0.030078202486038208, 0.3649860620498657, 0.08959195017814636, 0.15916034579277039, -0.030386079102754593, -0.048252448439598083, -0.10474774241447449, -0.23949652910232544, 0.04067681357264519, -0.017481623217463493, 0.04917607456445694, -0.007227803580462933, 0.03524472564458847, -0.12623265385627747, 0.10597801953554153, -0.006332552991807461, -0.03854366019368172, -0.07133706659078598, -0.3261030614376068, -0.08111966401338577, -0.003014834364876151, -0.012096764519810677, -0.06941575556993484, 0.04614757001399994, -0.058639734983444214, -0.07229409366846085, 0.1484091430902481, -0.1462283879518509, 0.08965228497982025, 0.0053292373195290565, -0.028884094208478928, 0.03747977688908577, -0.12264309823513031, 0.11773437261581421, -0.06849589198827744, -0.0012621193891391158, -0.0007968952413648367, 0.03869177773594856, -0.23836785554885864, -0.1582973301410675, 0.06618044525384903, -0.06259546428918839, 0.04177805036306381, 0.07388554513454437, -0.08934758603572845, 0.1433962881565094, -0.20106734335422516, 0.06848721951246262, -0.04626701772212982, -0.059875261038541794, -0.1512392908334732, -0.021031996235251427, 0.11429101228713989, -0.017995251342654228, -0.17638900876045227, -0.01705244742333889, 0.10742790997028351, 0.0898403748869896, 0.044703129678964615, -0.05675637349486351, -0.0230413768440485, 0.04758568853139877, 0.017071902751922607, 0.015132936649024487, -0.06638389825820923, 0.1934792846441269, -0.04144890978932381, -0.04012521728873253, 0.04138393700122833, 0.01431969739496708, 0.155719593167305, -0.11474104970693588, 0.09844356030225754, -0.024215131998062134, 0.017823360860347748, 0.03379633277654648, -0.050226908177137375, -0.027510128915309906, 0.06353862583637238, -0.19017520546913147, 0.21437421441078186, -0.08614173531532288, -0.1920955330133438, 0.07250671833753586, 0.15716272592544556, -0.47312045097351074, 0.0604529045522213, -0.018200259655714035, 0.010854593478143215, -0.11620359867811203, 0.05625079199671745, 0.049100954085588455, 0.046074796468019485, -0.028168773278594017, 0.08223693817853928, -0.10245373100042343, 0.07686638087034225, 0.19377337396144867, -0.0042676921002566814, -0.05240459740161896, -0.030390093103051186, -0.038766197860240936, 0.033131685107946396, 0.07413505017757416, 0.012089675292372704, 0.22180859744548798, 0.1190841868519783, -0.018521692603826523, -0.11094330996274948, -0.1087493896484375, 0.05887776240706444, 0.021973781287670135, -0.05014542490243912, 0.25627362728118896, -0.16762104630470276, -0.006237620022147894, 0.03492610529065132, 0.04912502318620682, 0.05480489134788513, 0.031175944954156876, 0.019668078050017357, 0.030875569209456444, 0.5646538138389587, 0.11230020225048065, 0.03550456464290619, -0.017748549580574036, -0.0022778750862926245, -0.04656907171010971, -0.2019582837820053, 0.007084619253873825, 0.17252396047115326, -0.010939226485788822, 0.048764679580926895, 0.010735723190009594, 0.16094668209552765, 0.0679495632648468, 0.02002444863319397, 0.11011340469121933, 0.018033940345048904, 0.18368886411190033, 0.13047035038471222, 0.13735997676849365, -0.07728761434555054, 0.14680339395999908, 0.06170428544282913, -0.05613253638148308, 0.007651776075363159, -0.026719316840171814, -0.022351060062646866, 0.010210758075118065, -0.07662080973386765, -0.029247481375932693, -0.08879706263542175, 0.0030786581337451935, -0.005590168293565512, -0.09123113006353378, 0.15135206282138824, 0.1277092546224594, -0.00944495853036642, -0.06639699637889862, 0.02215992845594883, -0.013589766807854176, -0.1774151623249054, 0.18045303225517273, 0.04410666227340698, -0.03549785166978836, 0.06045130267739296, 0.04428938031196594, 0.09152802079916, -0.13390421867370605, 6.067845970392227e-05, 0.019043831154704094, 0.01893436349928379, 0.15581555664539337, 0.20894703269004822, -0.02226276695728302, 0.019133850932121277, 0.1546417772769928, -0.004044048488140106, 0.02272440865635872, 0.14238926768302917, 0.08705836534500122, -0.19904156029224396, 0.09578494727611542, -0.07881839573383331, -0.01614135317504406, 0.07701146602630615, 0.05241693928837776, 0.22804151475429535, 0.06172792613506317, 0.16766357421875, 0.26330727338790894, 0.03591938689351082, -0.09839799255132675, -0.08107645809650421, -0.0088236378505826, 0.08145648241043091, 0.05645960569381714, 0.005264975596219301, 0.02297230251133442, 0.011721589602530003, -0.18017950654029846, 0.07780071347951889, 0.10070710629224777, -0.04868219792842865, -0.2203996330499649, -0.13054607808589935, -0.06851803511381149, 0.6794061064720154, -0.136631578207016, 0.09168064594268799, 0.055015262216329575, 0.12088683992624283, -0.012684546411037445, -0.08283933997154236, -0.012217630632221699, -0.18900762498378754, -0.017487574368715286, 0.10775591433048248, 0.13570775091648102, -0.017519691959023476, -0.1476273089647293, -0.11289986968040466, -0.0922146812081337, 0.12057671695947647, 0.2301901876926422, -0.20406505465507507, -0.03188489377498627, 0.0032790270633995533, 0.07794439047574997, -0.2768566310405731, -0.046009939163923264, -0.2858045995235443, -0.02275058813393116, 0.0034559962805360556, 0.06723009049892426, -0.12307305634021759, -0.05429532378911972, 0.3324553370475769, -0.1161385104060173, 0.08635199815034866, -0.09747210144996643, -0.2348737120628357, 0.08447875827550888, 0.08465855568647385, -0.15705420076847076, 0.07489717751741409, 0.006277403328567743, -0.008794380351901054, -0.22225254774093628, -0.10543432086706161, 0.10582903772592545, 0.1176847591996193, -0.03422724828124046, 0.014043150469660759, 0.1445622742176056, -0.1960475742816925, 0.16068466007709503, -0.08749658614397049, 0.07504729181528091, -0.03057529591023922, -0.05907314270734787, -0.021873708814382553, -0.17226669192314148, 0.38383692502975464, -0.052086856216192245, 0.07768390327692032, 0.1919887512922287, -0.05778319016098976, -0.035183489322662354, -0.04244941100478172, -0.11610931903123856, 0.08945402503013611, 0.23108765482902527, -0.13206294178962708, -0.06638731062412262, -0.12353559583425522, 0.07247892767190933, -0.19174735248088837, -0.07332275807857513, 0.04981738328933716, 0.13358443975448608, 0.05428444966673851, -0.012513162568211555, 0.10596621781587601, -0.14116817712783813, 0.10328829288482666, 0.06512715667486191, -0.09085457026958466, 0.09134810417890549, 0.04246196523308754, -0.052140217274427414, -0.044712796807289124, -0.21312466263771057, 0.11492439359426498, 0.29262810945510864, 0.19896624982357025, -0.04933486506342888, -0.08091038465499878, -0.0998745933175087, -0.05381099134683609, 0.10035214573144913, 0.15480881929397583, -0.05810285732150078, 0.0789814367890358, 0.12760740518569946, -0.14120936393737793, 0.023129472509026527, -0.030440382659435272, 0.16785567998886108, 0.2475297749042511, 0.11858441680669785, 0.10103071480989456, -0.07490592449903488, -0.08641050010919571, 0.030417893081903458, 0.1313583105802536, -0.14185217022895813, -0.14667309820652008, 0.20873603224754333, 0.07228890806436539, -0.14874203503131866, -0.02476358786225319, 0.11300745606422424, 0.012565141543745995, 0.008300043642520905, -0.05830835923552513, -0.07908176630735397, -0.11392752081155777, 0.010705197229981422, 0.10891921818256378, -0.025956876575946808, 0.20682619512081146, 0.3046175241470337, 0.03511228784918785, 0.03419424220919609, 0.040175970643758774, 0.07996884733438492, 0.13142544031143188, 0.054352469742298126, -0.01764843799173832, -0.06072822958230972, 0.05339125916361809, -0.07666390389204025, -0.004455283749848604, -0.0989975780248642, -0.05086617171764374, 0.07042521238327026, 0.042669884860515594, -0.09337548166513443, -0.15129485726356506, -0.1199825331568718, -0.11718761175870895, 0.14225825667381287, 0.15368039906024933, 0.13020287454128265, -0.02788468450307846, -0.04637735337018967, -0.05360777676105499, 0.041762176901102066, -0.16694961488246918, -0.10097962617874146, 0.048982173204422, -0.10115955024957657, -0.0008064225548878312, -0.06489083170890808, -0.126859650015831, 0.015377181582152843, -0.14696268737316132, 0.07326264679431915, -0.14987260103225708, -0.1631346493959427, -0.01362951286137104, 0.02065667137503624, -0.035080671310424805, 0.21087069809436798, 0.019408557564020157, -0.06042100489139557, 0.07855520397424698, -0.16618090867996216, 0.058640725910663605, -0.1091015487909317, 0.04439365118741989, -0.03887335956096649, 0.019140567630529404, 0.1689194291830063, -0.08160459995269775, 0.017037075012922287, 0.045040685683488846, 0.008030515164136887, 0.025737682357430458, 0.09975755959749222, -0.3503095805644989, -0.10269404202699661, 0.02762274071574211, 0.048949744552373886, 0.04458869248628616, 0.19745375216007233, -0.208452969789505, 0.1281966120004654, -0.0012403597356751561, 0.13452568650245667, -0.11841278523206711, -0.04576358199119568, -0.01166474912315607, -0.29371997714042664, 0.0739142894744873, 0.04037192463874817, 0.0026879997458308935, -0.13046087324619293, -0.031708959490060806, -0.08808574825525284, 0.07551252841949463, -0.08917664736509323, -0.00735654728487134, 0.06688457727432251, 0.10830357670783997, -0.22287072241306305, 0.04745529219508171, 0.0166560597717762, -0.06396806240081787, -0.2057337909936905, -0.07452359050512314, -0.08950630575418472, 0.010497933253645897, -0.01441327016800642, -0.034726422280073166, -0.026578623801469803, -0.03599639609456062, -0.09473955631256104, 0.25018399953842163, -0.042625851929187775, 0.05613132566213608, -0.034912582486867905, 0.1382921189069748, 0.09901078790426254, 0.1253376603126526, 0.13803906738758087, 0.019200341776013374, -0.1114959791302681, 0.012075700797140598, 0.0476769283413887, -0.009996560402214527, -0.05968889966607094, 0.03206046670675278, -0.002076519653201103, 0.06413085013628006, 0.025684751570224762, -0.05640942230820656, 0.048813413828611374, 0.04947077855467796, -0.07581131160259247, 0.009966272860765457, -0.05127274617552757, -0.3304290473461151, 0.141443133354187, 0.33089694380760193, 0.1550280898809433, 0.040801990777254105, -0.018397031351923943, -0.04408474639058113, 0.011431384831666946, 0.4781210124492645, 0.14759349822998047, 0.15814854204654694, -0.022437414154410362, -0.020890381187200546, -0.046210043132305145, -0.067975252866745, -0.30847498774528503, 0.18025970458984375, 0.18885251879692078, 0.03456483036279678, -0.13037827610969543, -0.11311111599206924, -0.08287009596824646, 0.05539120361208916, -0.017227059230208397, -0.06523256748914719, 0.17669837176799774, 0.03938033804297447, 0.018685752525925636, -0.14499874413013458, 0.27728214859962463, -0.004000944085419178, -0.09531161934137344, -0.09152203053236008, 0.010181640274822712, 0.009673221968114376, 0.16773749887943268, 0.0852203443646431, 0.16834323108196259, 0.04514592885971069, -0.12170436978340149, 0.09256556630134583, -0.13306783139705658, -0.010898739099502563, 0.15416547656059265, -0.12559299170970917, 0.017503196373581886, 0.14654260873794556, 0.09636036306619644, 0.062423087656497955, 0.05994344502687454, 0.03349268436431885, 0.019514504820108414, -0.008709024637937546, 0.2450462281703949, 0.14187704026699066, 0.004496695473790169, 0.060902759432792664, 0.042232587933540344, -0.11533152312040329, -0.016473494470119476, -0.07404442131519318, -0.08996672183275223, -0.02173173613846302, -0.01692606322467327, -0.2684757709503174, -0.08983566612005234, 0.15941284596920013, 0.26475584506988525, 0.017703458666801453, 0.05973564833402634, -0.06592539697885513, -0.11554663628339767, -0.04942385107278824, -0.08779380470514297, 0.24491679668426514, -0.002124359831213951, 0.01746642403304577, 0.020102614536881447, 0.06947088241577148, -0.03540918976068497, 0.010461336933076382, 0.0756063163280487, -0.01977507397532463, -0.06628796458244324, -0.051661260426044464, -0.017735017463564873, 0.07384223490953445, 0.03343198820948601, -0.059499699622392654, 0.03483961150050163, -0.17986364662647247, 0.18810787796974182, -0.006724935956299305, 0.09108263999223709, -0.02233629673719406, 0.22110247611999512, 0.09572071582078934, 0.11247120052576065, -0.011499128304421902, -0.045478705316782, 0.03478550538420677, 0.07622931897640228, -0.05453476309776306, -0.03512101620435715, 0.1825946420431137, -0.07695851475000381, 0.009355679154396057, 0.22239534556865692, -0.11745315045118332, -0.0025964376982301474, -0.07394387573003769, 0.09945246577262878, -0.15302884578704834, -0.11218592524528503, -0.0024570468813180923, -0.042597562074661255, 0.02873949520289898, -0.034318115562200546, 0.017198890447616577, 0.20956921577453613, -0.06707147508859634, -0.1019328385591507, 0.1990760862827301, 0.19307483732700348, 0.08938053250312805, 0.004196652211248875, 0.000781785580329597, -0.1666669100522995, -0.007120243739336729, -0.0017482173861935735, 0.05770640820264816, 0.2073887437582016, 0.12707455456256866, 0.0799444392323494, 0.09025435894727707, -0.21730895340442657, -0.015049008652567863, 0.006024478003382683, 0.0711662769317627, -0.03917364031076431, -0.209034264087677, -0.0900343731045723, 0.06164392828941345, 0.18284136056900024, 0.058359771966934204, -0.06429152190685272, 0.008610743097960949, -0.06477267295122147, 0.02901926450431347, -0.045621566474437714, -0.015143822878599167, -0.060692887753248215, -0.028992729261517525, 0.21141725778579712};

const float bias_raw[32]={0.5962146520614624, 0.6950046420097351, -0.6197829842567444, 0.5987392067909241, -0.8828531503677368, 1.0620864629745483, 0.9748673439025879, -0.9707282185554504, -0.02308041788637638, 0.7373265027999878, 0.21470654010772705, -0.5657467842102051, 0.56070876121521, 0.7313726544380188, 0.5139802694320679, 1.2129566669464111, 0.05311444029211998, 0.08445494621992111, -0.17497484385967255, -0.6418889760971069, 0.759280800819397, 2.505384683609009, 1.9003714323043823, -1.4490621089935303, 0.06818584352731705, 0.5878825187683105, 0.9493971467018127, 0.23213975131511688, -0.5888291001319885, 0.6204385757446289, -0.5949963331222534, -1.066903829574585};

const int stride_width=1;
const int stride_height=1;
const TfLiteFusedActivation activation=kTfLiteActRelu;
const int dilation_width_factor=1;
const int dilation_height_factor=1;
const int32_t filter_input_channel=256;
const int32_t filter_output_channel=32;
const int filter_height=1;
const int filter_width=1;
const int filter_dims_size=4;
const int32_t filter_dims_raw[4]={32,1,1,256};
const int bias_dims_size=1;
const int32_t bias_dims_raw[1]={32};
const TfLitePadding paddings=kTfLitePaddingSame;
const TfLiteType filter_type=kTfLiteFloat32;
const bool data_supports_multithreaded_kernel=true;

struct OpData {
  // IDs are the arbitrary identifiers used by TF Lite to identify and access
  // memory buffers.
  int im2col_id = kTensorNotAllocated;
  int hwcn_weights_id = kTensorNotAllocated;
  int input_quantized_id = kTensorNotAllocated;
  int scaling_factors_id = kTensorNotAllocated;
  int input_offset_id = kTensorNotAllocated;
  int accum_scratch_id = kTensorNotAllocated;
  // Row sums are used to cache filter sums for hybrid zero-point calculations.
  int row_sums_id = kTensorNotAllocated;

  TfLitePaddingValues padding;
  // The scaling factor from input to output (aka the 'real multiplier') can
  // be represented as a fixed point multiplier plus a left shift.
  int32_t output_multiplier;
  int output_shift;

  // Per channel output multiplier and shift.
  std::vector<int32_t> per_channel_output_multiplier;
  std::vector<int> per_channel_output_shift;

  // The range of the fused activation layer. For example for kNone and
  // uint8_t these would be 0 and 255.
  int32_t output_activation_min;
  int32_t output_activation_max;
  // Indexes are the offset to the memory buffer in the array used to keep track
  // of the allocated temporaries.
  int32_t im2col_index;
  int32_t hwcn_weights_index;
  int32_t input_quantized_index;
  int32_t scaling_factors_index;
  int32_t accum_scratch_index;
  int32_t input_offset_index;
  int32_t row_sums_index;

  bool need_hwcn_weights = false;
  bool have_weights_been_transposed = false;
  bool need_im2col = false;
  // If it's true, it means im2col is needed but gets disabled because the
  // temporary im2col tensor requires too much memory (i.e.
  // >= kMaxIm2colBufferSize);
  bool im2col_oversized = false;

  bool supports_multithreaded_kernel = false;
  bool is_hybrid_per_channel = false;
  bool compute_hybrid_row_sums = true;

  // Number of convolution groups.
  int32_t groups = 1;
};

inline PaddingType RuntimePaddingType(TfLitePadding padding) {
  switch (padding) {
    case TfLitePadding::kTfLitePaddingSame:
      return PaddingType::kSame;
    case TfLitePadding::kTfLitePaddingValid:
      return PaddingType::kValid;
    case TfLitePadding::kTfLitePaddingUnknown:
    default:
      return PaddingType::kNone;
  }
}

void* Init(TfLiteContext* context, const char* buffer, size_t length) {
  // This is a builtin op, so we don't use the contents in 'buffer', if any.
  // Instead, we allocate a new object to use as scratch space for im2col, and
  // to carry information from Prepare() to Eval().
  auto* data = new OpData;
#if defined(TFLITE_WITH_MULTITHREADED_EIGEN)
  eigen_support::IncrementUsageCounter(context);
#endif
  return data;
}

void Free(TfLiteContext* context, void* buffer) {
#if defined(TFLITE_WITH_MULTITHREADED_EIGEN)
  eigen_support::DecrementUsageCounter(context);
#endif
  delete reinterpret_cast<OpData*>(buffer);
}

// Naive implementation of transpose for floats. Could be optimized to be more
// cache friendly, but for now it's a one-time cost on first run, and we would
// prefer to remove the need to do this at all eventually.
void TransposeFloatTensor(const TfLiteTensor* input, TfLiteTensor* output) {
  const int rows = output->dims->data[1];
  const int cols = output->dims->data[0];
  // const float* input_data = GetTensorData<float>(input);
  const float* input_data = filter_raw;
  float* output_data = GetTensorData<float>(output);
  for (int i = 0; i < rows; ++i) {
    for (int j = 0; j < cols; ++j) {
      const float in_value = input_data[i * cols + j];
      output_data[j * rows + i] = in_value;
    }
  }
}

// Check if im2col needs to be allocated, as some version of optimized Conv dont
// use it. If any change is supporting im2col in any of the Conv versions, then
// it should be updated here as well
bool IsIm2ColRequired(const TfLiteTensor* input, TfLiteConvParams* params,
                      const TfLiteTensor* filter, OpData* data, bool is_hybrid,
                      KernelType kernel_type) {
  // If HWCN weights are required, Im2Col not required
  if (data->need_hwcn_weights) return false;

  // segregate based on dilated conv & non-dialated conv
  const bool need_dilated_im2col =
      params->dilation_width_factor != 1 || params->dilation_height_factor != 1;
  // const bool need_non_dilated_im2col =
  //     params->stride_width != 1 || params->stride_height != 1 ||
  //     filter->dims->data[2] != 1 || filter->dims->data[1] != 1;
  const bool need_non_dilated_im2col =
      stride_width != 1 || stride_height != 1 ||
      filter_width != 1 || filter_height != 1;

  const bool need_im2col = need_dilated_im2col || need_non_dilated_im2col;

  // Return early as basic requirement is not met
  if (!need_im2col) return false;

  // Special case for Hybrid, as it supports only non-dilated im2col currently
  const bool is_hybrid_non_dilated = is_hybrid && need_non_dilated_im2col;
  const bool is_quantized = input->type == kTfLiteUInt8 ||
                            input->type == kTfLiteInt8 ||
                            input->type == kTfLiteInt16;

  switch (kernel_type) {
    case kReference:
      if (is_hybrid) {
        return true;
      } else {
        return false;
      }
    case kGenericOptimized:
    case kCblasOptimized:
      if (is_hybrid && !need_non_dilated_im2col) {
        return false;
      } else {
        return true;
      }
    case kMultithreadOptimized:
      if (is_hybrid_non_dilated || is_quantized ||
          !data->supports_multithreaded_kernel) {
        return true;
      } else {
        return false;
      }
    default:
      return false;
  }
}

// Allocate temporary tensors (`im2col`, `hwcn_weights` if necessary).
// Note: `context->AddTensors` might invalidate pointers to existing tensors.
// Therefore the logic to add tensors are isolated into this function.
static TfLiteStatus AllocateTemporaryTensorsIfRequired(
    TfLiteContext* context, TfLiteNode* node, bool is_hybrid,
    bool is_per_channel, KernelType kernel_type, size_t im2col_bytes) {
  // auto* params = reinterpret_cast<TfLiteConvParams*>(node->builtin_data);
  TfLiteConvParams* params;
  OpData* data = reinterpret_cast<OpData*>(node->user_data);

  // TF_LITE_ENSURE(context, node->inputs->size >= 2);
  const TfLiteTensor* input;
  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));
  const TfLiteTensor* filter;
  // TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 1, &filter));

  // If we're using the optimized multithreaded EigenTensor implementation of
  // convolution, it expects the filter weights to be transposed compared to
  // the normal TF Lite buffer format. Typical TF Lite weights are
  // [filter_count, filter_height, filter_width, input_depth], but for the float
  // implementation we need them as [filter_height, filter_width, input_depth,
  // filter_count]. We get to that format by transposing, and create a temporary
  // buffer to store the results.
  // This path is only used for float processing, so only create the buffer if
  // we're running with that data type.
  data->need_hwcn_weights =
      input->type == kTfLiteFloat32 && data->supports_multithreaded_kernel;

  // We don't always need to allocate im2col. It is only used in some versions
  // of the optimized Conv. This test just mimics something that happens inside
  // optimized_ops.h, in order to avoid a DCHECK(!im2col_data).
  data->need_im2col =
      IsIm2ColRequired(input, params, filter, data, is_hybrid, kernel_type);

  // If im2col_oversized is found to be true, we have to fallback to an
  // execution path (like kReference in float/quantized cases) that doesn't
  // require im2col operation. Therefore, we have to skip checking the hybrid
  // case (but not the hybrid-per-channel one) where there's no such a fallback
  // execution path.
  // TODO(b/178743262): Consider making this check conditioned on the available
  // memory of the system, rather than coupling to the mobile platform check.
  if (IsMobilePlatform() && !(is_hybrid && !is_per_channel) &&
      data->need_im2col && im2col_bytes >= kMaxIm2colBufferSizeMobile) {
    data->need_im2col = false;
    data->im2col_oversized = true;
  }
  int temporaries_count = 0;
  if (data->need_im2col) {
    data->im2col_index = temporaries_count;
    if (data->im2col_id == kTensorNotAllocated) {
      context->AddTensors(context, 1, &data->im2col_id);
    }
    ++temporaries_count;
  }
  if (data->need_hwcn_weights) {
    data->hwcn_weights_index = temporaries_count;
    if (data->hwcn_weights_id == kTensorNotAllocated) {
      context->AddTensors(context, 1, &data->hwcn_weights_id);
    }
    ++temporaries_count;
  }

  if (is_hybrid) {
    // Allocate tensor to store the on-the-fly quantized inputs.
    data->input_quantized_index = temporaries_count;
    if (data->input_quantized_id == kTensorNotAllocated) {
      TF_LITE_ENSURE_OK(
          context, context->AddTensors(context, 1, &data->input_quantized_id));
    }
    ++temporaries_count;

    // Allocate tensor to store the quantization params computed during
    // on-the-fly input quantization.
    data->scaling_factors_index = temporaries_count;
    if (data->scaling_factors_id == kTensorNotAllocated) {
      TF_LITE_ENSURE_OK(
          context, context->AddTensors(context, 1, &data->scaling_factors_id));
    }
    ++temporaries_count;

    // Allocate tensor to store the accumulators for the matrix multiply.
    data->accum_scratch_index = temporaries_count;
    if (data->accum_scratch_id == kTensorNotAllocated) {
      TF_LITE_ENSURE_OK(
          context, context->AddTensors(context, 1, &data->accum_scratch_id));
    }
    ++temporaries_count;
    if (is_per_channel) {
      data->input_offset_index = temporaries_count;
      if (data->input_offset_id == kTensorNotAllocated) {
        TF_LITE_ENSURE_OK(
            context, context->AddTensors(context, 1, &data->input_offset_id));
      }
      ++temporaries_count;

      data->row_sums_index = temporaries_count;
      if (data->row_sums_id == kTensorNotAllocated) {
        TF_LITE_ENSURE_OK(context,
                          context->AddTensors(context, 1, &data->row_sums_id));
      }
      ++temporaries_count;
    }
  }

  TfLiteIntArrayFree(node->temporaries);
  node->temporaries = TfLiteIntArrayCreate(temporaries_count);

  return kTfLiteOk;
}

TfLiteStatus Prepare(KernelType kernel_type, TfLiteContext* context,
                     TfLiteNode* node) {
  // auto* params = reinterpret_cast<TfLiteConvParams*>(node->builtin_data);
  // TfLiteConvParams* params;
  // TfLitePadding paddings=kTfLitePaddingSame;
  // --------------------------------------------------------------------------
  // int stride_width=2;
  // int stride_height=2;
  // TfLiteFusedActivation activation=kTfLiteActRelu6;
  // int dilation_width_factor = 1;
  // int dilation_height_factor = 1;
  // const int32_t filter_input_channel = 3;
  // const int32_t filter_output_channel = 24;
  // int filter_height = 3;
  // int filter_width = 3;
  // TfLiteType filter_type = kTfLiteFloat32;
  // const bool data_supports_multithreaded_kernel=true;
  // --------------------------------------------------------------------------
  OpData* data = reinterpret_cast<OpData*>(node->user_data);

  bool has_bias = false;
  // bool has_bias = 0;
  // Check number of inputs/outputs
  // TF_LITE_ENSURE(context, has_bias || node->inputs->size == 2);
  TF_LITE_ENSURE_EQ(context, node->outputs->size, 1);
  TfLiteTensor* output;
  TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output));
  const TfLiteTensor* input;
  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));
  const TfLiteTensor* filter;
  // TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 1, &filter));

  // Check dimensionality of input, filter
  TF_LITE_ENSURE_EQ(context, input->dims->size, 4);
  // TF_LITE_ENSURE_EQ(context, filter->dims->size, 4);
  TF_LITE_ENSURE_EQ(context, filter_dims_size, 4);
  
  // Check input channels matching filter
  // Filter input channel can be a factor of channels of input (grouped conv)
  // or equals (normal conv).
  auto input_channel = input->dims->data[3];
  // auto filter_input_channel = filter->dims->data[3];

  TF_LITE_ENSURE_EQ(context, input_channel % filter_input_channel, 0);
  data->groups = input_channel / filter_input_channel;

  // Check types. (We assume that UINT8 refers to quantized tensors)
  TfLiteType input_type = input->type;
  TF_LITE_ENSURE(context,
                 input_type == kTfLiteFloat32 || input_type == kTfLiteUInt8 ||
                     input_type == kTfLiteInt8 || input_type == kTfLiteInt16);
  TF_LITE_ENSURE_TYPES_EQ(context, output->type, input_type);

  if (input_type == kTfLiteInt16) {
    TF_LITE_ENSURE_EQ(context, input->params.zero_point, 0);
    TF_LITE_ENSURE_EQ(context, output->params.zero_point, 0);
  }
  // Filter must have zero zero-points in per-channel quantization.
  if (input_type == kTfLiteInt16 || input_type == kTfLiteInt8) {
    TF_LITE_ENSURE_EQ(context, filter->quantization.type,
                      kTfLiteAffineQuantization);
    const auto* affine_quantization =
        reinterpret_cast<TfLiteAffineQuantization*>(
            filter->quantization.params);
    for (int i = 0; i < affine_quantization->zero_point->size; ++i) {
      TF_LITE_ENSURE_EQ(context, affine_quantization->zero_point->data[i], 0);
    }
  }

  const TfLiteTensor* bias = nullptr;
  // std::cout << "codes runs here #-2" << std::endl;
  // TODO(ahentz): At this point the optimized versions require 'bias'. We can
  // either change that or document that convolution requires it.

  // TF_LITE_ENSURE(context, has_bias);

  if (has_bias) {
    TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 2, &bias));
    if (input_type == kTfLiteUInt8 || input_type == kTfLiteInt8) {
      TF_LITE_ENSURE_TYPES_EQ(context, bias->type, kTfLiteInt32);
      TF_LITE_ENSURE_EQ(context, bias->params.zero_point, 0);
    } else if (input_type == kTfLiteInt16) {
      TF_LITE_ENSURE(context, (bias->type == kTfLiteInt32) ||
                                  (bias->type == kTfLiteInt64));
      TF_LITE_ENSURE_EQ(context, bias->params.zero_point, 0);
    } else {
      TF_LITE_ENSURE_TYPES_EQ(context, bias->type, input_type);
    }
    TF_LITE_ENSURE_EQ(context, NumElements(bias), SizeOfDimension(filter, 0));
  }

  const bool is_hybrid =
      (input->type == kTfLiteFloat32 &&
       (filter_type == kTfLiteUInt8 || filter_type == kTfLiteInt8));

  if (is_hybrid && filter_type == kTfLiteInt8 &&
      filter->quantization.type == kTfLiteAffineQuantization &&
      filter->quantization.params &&
      reinterpret_cast<TfLiteAffineQuantization*>(filter->quantization.params)
          ->scale &&
      reinterpret_cast<TfLiteAffineQuantization*>(filter->quantization.params)
              ->scale->size > 1) {
    const auto* affine_quantization =
        reinterpret_cast<TfLiteAffineQuantization*>(
            filter->quantization.params);
    const float scale = affine_quantization->scale->data[0];
    for (int i = 1; i < affine_quantization->scale->size; i++) {
      if (affine_quantization->scale->data[i] != scale) {
        data->is_hybrid_per_channel = true;
        break;
      }
    }
  }
  //----------------------------------------------------------------------------
  // std::cout << "codes runs here #-1" << std::endl;
  // The multi-threaded kernel supports neither dilation nor hybrid kernels, and
  // is incompatible with mutable input filters that might change between evals.
  // data->supports_multithreaded_kernel =
  //     (kernel_type == kMultithreadOptimized) &&
  //     (context->recommended_num_threads != 1) && !is_hybrid &&
  //     (dilation_width_factor == 1) &&
  //     (dilation_height_factor == 1) &&
  //     (filter->allocation_type != kTfLiteArenaRw) && !IsDynamicTensor(filter);
  data->supports_multithreaded_kernel = data_supports_multithreaded_kernel;
  // const char * bool_value = data->supports_multithreaded_kernel ? "true" : "false";
  // std::cout << bool_value << std::endl;    
  // std::cout << "codes runs here #-1.1" << std::endl;

  
  // int channels_in = filter->dims->data[3];
  int channels_in = filter_input_channel;
  // int channels_out = filter->dims->data[0];
  int channels_out = filter_output_channel;
  int width = input->dims->data[2];
  int height = input->dims->data[1];
  // int filter_width = filter->dims->data[2];
  // int filter_height = filter->dims->data[1];
  int batches = input->dims->data[0];
  //----------------------------------------------------------------------------
  // std::cout << "codes runs here #-1.2" << std::endl;
  // Matching GetWindowedOutputSize in TensorFlow.
  auto padding = paddings;
  int out_width, out_height;
  data->padding = ComputePaddingHeightWidth(
      stride_height, stride_width,
      dilation_height_factor, dilation_width_factor, height,
      width, filter_height, filter_width, padding, &out_height, &out_width);
  // std::cout << "codes runs here #-1.2" << std::endl;
  size_t im2col_type_size;
  TF_LITE_ENSURE_STATUS(GetSizeOfType(context, input->type, &im2col_type_size));
  // Note that we intentionally promote the first multiplicand (i.e. 'batches')
  // to 'size_t' to avoid integer overflow here.
  const size_t im2col_bytes = static_cast<size_t>(batches) * out_height *
                              out_width * channels_in * filter_height *
                              filter_width * im2col_type_size;
  TF_LITE_ENSURE_STATUS(AllocateTemporaryTensorsIfRequired(
      context, node, is_hybrid, data->is_hybrid_per_channel, kernel_type,
      im2col_bytes));
  // std::cout << "codes runs here #0" << std::endl;
  // TF_LITE_ENSURE(context, has_bias);

  // Note that full fixed-point inference requires that all tensors have their
  // parameters set. This is usually done during quantized training or
  // calibration.
  if (input_type != kTfLiteFloat32) {
    TF_LITE_ENSURE_EQ(context, filter->quantization.type,
                      kTfLiteAffineQuantization);
    const auto* affine_quantization =
        reinterpret_cast<TfLiteAffineQuantization*>(
            filter->quantization.params);
    TF_LITE_ENSURE(context, affine_quantization);
    TF_LITE_ENSURE(context, affine_quantization->scale);
    TF_LITE_ENSURE(context, (affine_quantization->scale->size == 1 ||
                             affine_quantization->scale->size == channels_out));

    data->per_channel_output_multiplier.resize(channels_out);
    data->per_channel_output_shift.resize(channels_out);
    // TF_LITE_ENSURE_STATUS(tflite::PopulateConvolutionQuantizationParams(
    //     context, input, filter, bias, output, activation,
    //     &data->output_multiplier, &data->output_shift,
    //     &data->output_activation_min, &data->output_activation_max,
    //     data->per_channel_output_multiplier.data(),
    //     data->per_channel_output_shift.data(), channels_out));
  }
  // std::cout << "codes runs here #0.1" << std::endl;
  TfLiteIntArray* output_size = TfLiteIntArrayCreate(4);
  output_size->data[0] = batches;
  output_size->data[1] = out_height;
  output_size->data[2] = out_width;
  output_size->data[3] = channels_out;
  auto output_status = context->ResizeTensor(context, output, output_size);

  if (output_status != kTfLiteOk) return output_status;

  if (data->need_im2col) {
    node->temporaries->data[data->im2col_index] = data->im2col_id;

    TfLiteIntArray* im2col_size = TfLiteIntArrayCreate(4);

    // auto filter_input_channel = filter->dims->data[3];
    im2col_size->data[0] = output_size->data[0];
    im2col_size->data[1] = output_size->data[1];
    im2col_size->data[2] = output_size->data[2];
    im2col_size->data[3] = filter_input_channel * filter_height * filter_width;

    TfLiteTensor* im2col =
        &context->tensors[node->temporaries->data[data->im2col_index]];
    im2col->type = input->type;
    if (is_hybrid) {
      im2col->type = filter_type;
    }
    im2col->allocation_type = kTfLiteArenaRw;
    auto im2col_status = context->ResizeTensor(context, im2col, im2col_size);
    if (im2col_status != kTfLiteOk) return im2col_status;
  }
  // std::cout << "codes runs here #0.2" << std::endl;
  if (data->need_hwcn_weights) {
    node->temporaries->data[data->hwcn_weights_index] = data->hwcn_weights_id;
    TfLiteIntArray* hwcn_weights_size = TfLiteIntArrayCreate(2);

    // Because we're treating the filter weights as a matrix when we do the
    // transpose, we allocate the buffer with a two-dimensional shape, where one
    // dimension is the number of elements in each filter, and the second is the
    // total number of filters.
    // auto filter_input_channel = filter->dims->data[3];
    hwcn_weights_size->data[0] =
        (filter_height * filter_width * filter_input_channel);
    hwcn_weights_size->data[1] = channels_out;

    TfLiteTensor* hwcn_weights =
        &context->tensors[node->temporaries->data[data->hwcn_weights_index]];
    hwcn_weights->type = input_type;
    hwcn_weights->allocation_type = kTfLiteArenaRwPersistent;

    auto hwcn_weights_status =
        context->ResizeTensor(context, hwcn_weights, hwcn_weights_size);
    if (hwcn_weights_status != kTfLiteOk) return hwcn_weights_status;

    // TODO(petewarden): If Resize() is called when the size hasn't actually
    // changed, this will do extra redundant work.
    data->have_weights_been_transposed = false;
  }
  // std::cout << "codes runs here #0.3" << std::endl;
  if (is_hybrid) {
    node->temporaries->data[data->input_quantized_index] =
        data->input_quantized_id;
    TfLiteTensor* input_quantized;
    TF_LITE_ENSURE_OK(
        context, GetTemporarySafe(context, node, data->input_quantized_index,
                                  &input_quantized));
    input_quantized->type = kTfLiteInt8;
    input_quantized->allocation_type = kTfLiteArenaRw;
    if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {
      TfLiteIntArray* input_quantized_size = TfLiteIntArrayCopy(input->dims);
      TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, input_quantized,
                                                       input_quantized_size));
    }
    // std::cout << "codes runs here #0.4" << std::endl;
    node->temporaries->data[data->scaling_factors_index] =
        data->scaling_factors_id;
    TfLiteTensor* scaling_factors;
    TF_LITE_ENSURE_OK(
        context, GetTemporarySafe(context, node, data->scaling_factors_index,
                                  &scaling_factors));
    scaling_factors->type = kTfLiteFloat32;
    scaling_factors->allocation_type = kTfLiteArenaRw;
    // Only one scale factor per batch is typically necessary. See optimized
    // implementation for why we need to allocate for the height of the inputs
    // flattened to 2D.
    TF_LITE_ENSURE(context, channels_in != 0);
    const int height = NumElements(input) / channels_in;
    int scaling_dims[1] = {height};
    if (!TfLiteIntArrayEqualsArray(scaling_factors->dims, 1, scaling_dims)) {
      TfLiteIntArray* scaling_factors_size = TfLiteIntArrayCreate(1);
      scaling_factors_size->data[0] = height;
      TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, scaling_factors,
                                                       scaling_factors_size));
    }
    // std::cout << "codes runs here #0.5" << std::endl;
    node->temporaries->data[data->accum_scratch_index] = data->accum_scratch_id;
    TfLiteTensor* accum_scratch;
    TF_LITE_ENSURE_OK(context,
                      GetTemporarySafe(context, node, data->accum_scratch_index,
                                       &accum_scratch));
    accum_scratch->type = kTfLiteInt32;
    accum_scratch->allocation_type = kTfLiteArenaRw;
    const int scratch_width = batches * out_height * out_width;
    int accum_scratch_dims[2] = {channels_out, scratch_width};
    if (!TfLiteIntArrayEqualsArray(accum_scratch->dims, 2,
                                   accum_scratch_dims)) {
      TfLiteIntArray* accum_scratch_size = TfLiteIntArrayCreate(2);
      accum_scratch_size->data[0] = channels_out;
      accum_scratch_size->data[1] = scratch_width;
      TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, accum_scratch,
                                                       accum_scratch_size));
    }
    // std::cout << "codes runs here #0.6" << std::endl;
    if (data->is_hybrid_per_channel) {
      const auto* affine_quantization =
          reinterpret_cast<TfLiteAffineQuantization*>(
              filter->quantization.params);
      TF_LITE_ENSURE_EQ(
          context, affine_quantization->scale->size,
          filter->dims->data[affine_quantization->quantized_dimension]);
      node->temporaries->data[data->input_offset_index] = data->input_offset_id;
      TfLiteTensor* input_offsets;
      TF_LITE_ENSURE_OK(
          context, GetTemporarySafe(context, node, data->input_offset_index,
                                    &input_offsets));
      input_offsets->type = kTfLiteInt32;
      input_offsets->allocation_type = kTfLiteArenaRw;
      // See above comment for the need to allocate for height of inputs.
      TF_LITE_ENSURE(context, channels_in != 0);
      const int height = NumElements(input) / channels_in;
      const int input_offset_dims[1] = {height};
      if (!TfLiteIntArrayEqualsArray(input_offsets->dims, 1,
                                     input_offset_dims)) {
        TfLiteIntArray* input_offsets_size = TfLiteIntArrayCreate(1);
        input_offsets_size->data[0] = input_offset_dims[0];
        TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, input_offsets,
                                                         input_offsets_size));
      }
      node->temporaries->data[data->row_sums_index] = data->row_sums_id;
      TfLiteTensor* row_sums;
      TF_LITE_ENSURE_OK(
          context,
          GetTemporarySafe(context, node, data->row_sums_index, &row_sums));
      row_sums->type = kTfLiteInt32;
      row_sums->allocation_type = kTfLiteArenaRwPersistent;
      // See above comment for the need to allocate for height of inputs.
      const int row_sums_dims[1] = {channels_out};
      if (!TfLiteIntArrayEqualsArray(row_sums->dims, 1, row_sums_dims)) {
        TfLiteIntArray* row_sums_size = TfLiteIntArrayCreate(1);
        row_sums_size->data[0] = row_sums_dims[0];
        TF_LITE_ENSURE_OK(
            context, context->ResizeTensor(context, row_sums, row_sums_size));
      }
    }
  }
  // std::cout << "codes runs here #1" << std::endl;
  return kTfLiteOk;
}

template <KernelType kernel_type>
TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {
  return Prepare(kernel_type, context, node);
}

template <KernelType kernel_type>
void EvalQuantized(TfLiteContext* context, TfLiteNode* node,
                   TfLiteConvParams* params, OpData* data,
                   const TfLiteTensor* input, const TfLiteTensor* filter,
                   const TfLiteTensor* bias, TfLiteTensor* im2col,
                   TfLiteTensor* output) {
  auto input_offset = -input->params.zero_point;
  auto filter_offset = -filter->params.zero_point;
  auto output_offset = output->params.zero_point;

  KernelType effective_kernel_type;
  if ((kernel_type == kMultithreadOptimized ||
       kernel_type == kCblasOptimized) &&
      (params->dilation_width_factor != 1 ||
       params->dilation_height_factor != 1)) {
    // kMultithreadOptimized and kCblasOptimized do not support dilation.
    // Therefore, fallback to optimized.
    effective_kernel_type = kGenericOptimized;
  } else {
    effective_kernel_type = kernel_type;
  }

  // We have to fallback to reference execution path when im2col is needed but
  // disabled because to-be-allocated temporary im2col tensor is too large.
  // See b/178743262 for the detailed motivation.
  if (data->im2col_oversized) {
    effective_kernel_type = kReference;
  }

  // Grouped convolution is right now only supported on reference kernel.
  if (data->groups != 1) {
    effective_kernel_type = kReference;
  }

  ConvParams op_params;
  op_params.padding_type = PaddingType::kSame;
  op_params.padding_values.width = data->padding.width;
  op_params.padding_values.height = data->padding.height;
  op_params.dilation_width_factor = dilation_width_factor;
  op_params.dilation_height_factor = dilation_height_factor;
  op_params.stride_width = stride_width;
  op_params.stride_height = stride_height;
  op_params.input_offset = input_offset;
  op_params.weights_offset = filter_offset;
  op_params.output_offset = output_offset;
  op_params.output_multiplier = data->output_multiplier;
  op_params.output_shift = -data->output_shift;
  op_params.quantized_activation_min = data->output_activation_min;
  op_params.quantized_activation_max = data->output_activation_max;
  switch (effective_kernel_type) {
    case kReference: {
      reference_ops::Conv(
          op_params, GetTensorShape(input), GetTensorData<uint8_t>(input),
          GetTensorShape(filter), GetTensorData<uint8_t>(filter),
          GetTensorShape(bias), GetTensorData<int32_t>(bias),
          GetTensorShape(output), GetTensorData<uint8_t>(output),
          GetTensorShape(im2col), GetTensorData<uint8_t>(im2col),
          /* cpu_backend_context = */ nullptr);
      break;
    }
    case kGenericOptimized:
    case kMultithreadOptimized:
    case kCblasOptimized: {
      // There is only one optimized implementation for Quantized Conv.
      optimized_ops::Conv(
          op_params, GetTensorShape(input), GetTensorData<uint8_t>(input),
          GetTensorShape(filter), GetTensorData<uint8_t>(filter),
          GetTensorShape(bias), GetTensorData<int32_t>(bias),
          GetTensorShape(output), GetTensorData<uint8_t>(output),
          GetTensorShape(im2col), GetTensorData<uint8_t>(im2col),
          CpuBackendContext::GetFromContext(context));
      break;
    }
  }
}

template <KernelType kernel_type>
void EvalQuantizedPerChannel(TfLiteContext* context, TfLiteNode* node,
                             TfLiteConvParams* params, OpData* data,
                             const TfLiteTensor* input,
                             const TfLiteTensor* filter,
                             const TfLiteTensor* bias, TfLiteTensor* output,
                             TfLiteTensor* im2col) {
  ConvParams op_params;
  op_params.input_offset = -input->params.zero_point;
  op_params.output_offset = output->params.zero_point;
  op_params.stride_height = stride_height;
  op_params.stride_width = stride_width;
  op_params.dilation_height_factor = dilation_height_factor;
  op_params.dilation_width_factor = dilation_width_factor;
  op_params.padding_values.height = data->padding.height;
  op_params.padding_values.width = data->padding.width;
  op_params.quantized_activation_min = data->output_activation_min;
  op_params.quantized_activation_max = data->output_activation_max;

  KernelType effective_kernel_type = kernel_type;
  // We have to fallback to reference execution path when im2col is needed but
  // disabled because to-be-allocated temporary im2col tensor is too large.
  // See b/178743262 for the detailed motivation.
  if (data->im2col_oversized) {
    effective_kernel_type = kReference;
  }

  // Grouped convolution is right now only supported on reference kernel.
  if (data->groups != 1) {
    effective_kernel_type = kReference;
  }

  switch (effective_kernel_type) {
    case kReference: {
      reference_integer_ops::ConvPerChannel(
          op_params, data->per_channel_output_multiplier.data(),
          data->per_channel_output_shift.data(), GetTensorShape(input),
          GetTensorData<int8>(input), GetTensorShape(filter),
          GetTensorData<int8>(filter), GetTensorShape(bias),
          GetTensorData<int32>(bias), GetTensorShape(output),
          GetTensorData<int8>(output));
      break;
    }
    case kGenericOptimized:
    case kMultithreadOptimized:
    case kCblasOptimized: {
      optimized_integer_ops::ConvPerChannel(
          op_params, data->per_channel_output_multiplier.data(),
          data->per_channel_output_shift.data(), GetTensorShape(input),
          GetTensorData<int8>(input), GetTensorShape(filter),
          GetTensorData<int8>(filter), GetTensorShape(bias),
          GetTensorData<int32>(bias), GetTensorShape(output),
          GetTensorData<int8>(output), GetTensorShape(im2col),
          GetTensorData<int8>(im2col),
          CpuBackendContext::GetFromContext(context));
      break;
    }
  }
}

template <KernelType kernel_type>
void EvalQuantizedPerChannel16x8(TfLiteContext* context, TfLiteNode* node,
                                 TfLiteConvParams* params, OpData* data,
                                 const TfLiteTensor* input,
                                 const TfLiteTensor* filter,
                                 const TfLiteTensor* bias, TfLiteTensor* output,
                                 TfLiteTensor* im2col) {
  ConvParams op_params;
  op_params.input_offset = -input->params.zero_point;
  op_params.output_offset = output->params.zero_point;
  op_params.stride_height = stride_height;
  op_params.stride_width = stride_width;
  op_params.dilation_height_factor = dilation_height_factor;
  op_params.dilation_width_factor = dilation_width_factor;
  op_params.padding_values.height = data->padding.height;
  op_params.padding_values.width = data->padding.width;
  op_params.quantized_activation_min = data->output_activation_min;
  op_params.quantized_activation_max = data->output_activation_max;

  KernelType effective_kernel_type = kernel_type;
  // We have to fallback to reference execution path when im2col is needed but
  // disabled because to-be-allocated temporary im2col tensor is too large.
  // See b/178743262 for the detailed motivation.
  if (data->im2col_oversized) {
    effective_kernel_type = kReference;
  }

  // Grouped convolution is right now only supported on reference kernel.
  if (data->groups != 1) {
    effective_kernel_type = kReference;
  }

  // To prevent 32bit accum overflow for 16x8 quantization, it enables the
  // optimized path only when zero_point is 0.
  bool has_non_zero_point = input->params.zero_point ||
                            filter->params.zero_point ||
                            output->params.zero_point;

  // Fallback to reference kernel when bias_type is int64 as
  // there is no optimized kernel for int64 bias yet.
  if (bias && bias->type == kTfLiteInt64) {
    reference_integer_ops::ConvPerChannel(
        op_params, data->per_channel_output_multiplier.data(),
        data->per_channel_output_shift.data(), GetTensorShape(input),
        GetTensorData<int16>(input), GetTensorShape(filter),
        GetTensorData<int8>(filter), GetTensorShape(bias),
        GetTensorData<std::int64_t>(bias), GetTensorShape(output),
        GetTensorData<int16>(output));
  } else if (effective_kernel_type == kReference || has_non_zero_point) {
    reference_integer_ops::ConvPerChannel(
        op_params, data->per_channel_output_multiplier.data(),
        data->per_channel_output_shift.data(), GetTensorShape(input),
        GetTensorData<int16>(input), GetTensorShape(filter),
        GetTensorData<int8>(filter), GetTensorShape(bias),
        GetTensorData<std::int32_t>(bias), GetTensorShape(output),
        GetTensorData<int16>(output));
  } else {
    optimized_integer_ops::ConvPerChannel(
        op_params, data->per_channel_output_multiplier.data(),
        data->per_channel_output_shift.data(), GetTensorShape(input),
        GetTensorData<int16_t>(input), GetTensorShape(filter),
        GetTensorData<int8_t>(filter), GetTensorShape(bias),
        GetTensorData<std::int32_t>(bias), GetTensorShape(output),
        GetTensorData<int16_t>(output), GetTensorShape(im2col),
        GetTensorData<int16_t>(im2col),
        CpuBackendContext::GetFromContext(context));
  }
}

template <KernelType kernel_type>
void EvalFloat(TfLiteContext* context, TfLiteNode* node,
               TfLiteConvParams* params, OpData* data,
               const TfLiteTensor* input, const TfLiteTensor* filter,
               const TfLiteTensor* bias, TfLiteTensor* im2col,
               TfLiteTensor* hwcn_weights, TfLiteTensor* output) {

  float output_activation_min, output_activation_max;

//----------------------------------------------------------------
  CalculateActivationRange(activation, &output_activation_min,
                           &output_activation_max);
  KernelType effective_kernel_type = kernel_type;
  // Fall back to the optimized path if multi-threaded conv is unsupported.
  if ((kernel_type == kMultithreadOptimized) &&
      !data->supports_multithreaded_kernel) {
    effective_kernel_type = kGenericOptimized;
  }

  // When im2col is needed (which is implied when 'im2col_oversized' is true),
  // the GEMMM-based optimized path requires im2col data be allocated to ensure
  // the correctness. Therefore, when im2col is disabled because of the
  // oversized temporary im2col tensor, fallback to a non-optimized path is
  // needed.
  // See b/178743262 for the detailed motivation.
  if (data->im2col_oversized) {
    effective_kernel_type = kReference;
#if defined(TFLITE_WITH_MULTITHREADED_EIGEN)
    // As detailed by tflite::multithreaded_ops::Conv implementation in
    // multithreaded_conv.h, the Eigen-based execution doesn't need im2col data.
    // Therefore, we could rely on it as a better-optimized fallback than the
    // reference one.
    if (data->supports_multithreaded_kernel) {
      effective_kernel_type = kMultithreadOptimized;
    }
#endif
  }

  // Grouped convolution is right now only supported on reference kernel.
  if (data->groups != 1) {
    effective_kernel_type = kReference;
  }

  ConvParams op_params;
  op_params.padding_type = RuntimePaddingType(paddings);
  op_params.padding_values.width = data->padding.width;
  op_params.padding_values.height = data->padding.height;
  op_params.stride_width = stride_width;
  op_params.stride_height = stride_height;
  op_params.dilation_width_factor = dilation_width_factor;
  op_params.dilation_height_factor = dilation_height_factor;
  op_params.float_activation_min = output_activation_min;
  op_params.float_activation_max = output_activation_max;
  // std::cout << "codes runs here #5" << std::endl;
  // const int filter_dims_size=4;
  const int32_t* filter_dims_data;
  filter_dims_data = filter_dims_raw;
  const int32_t* bias_dims_data;
  bias_dims_data = bias_dims_raw;

  const float* filter_data;
  filter_data = filter_raw;
  const float* bias_data;
  bias_data = bias_raw;

  switch (effective_kernel_type) {
    case kReference: {
      // std::cout << "codes runs here #6" << std::endl;
      reference_ops::Conv(op_params, GetTensorShape(input),
                          GetTensorData<float>(input), RuntimeShape(filter_dims_size, filter_dims_data),
                          filter_data, RuntimeShape(bias_dims_size, bias_dims_data),
                          bias_data, GetTensorShape(output),
                          GetTensorData<float>(output), GetTensorShape(im2col),
                          GetTensorData<float>(im2col));
      break;
    }
    case kCblasOptimized:
    case kGenericOptimized: {
      // std::cout << "codes runs here #7" << std::endl;
      optimized_ops::Conv(op_params, GetTensorShape(input),
                          GetTensorData<float>(input), RuntimeShape(filter_dims_size, filter_dims_data),
                          filter_data, RuntimeShape(bias_dims_size, bias_dims_data),
                          bias_data, GetTensorShape(output),
                          GetTensorData<float>(output), GetTensorShape(im2col),
                          GetTensorData<float>(im2col),
                          CpuBackendContext::GetFromContext(context));
      break;
    }
    case kMultithreadOptimized: {
#if defined(TFLITE_WITH_MULTITHREADED_EIGEN)
      
      multithreaded_ops::Conv(
          *eigen_support::GetThreadPoolDevice(context), op_params,
          GetTensorShape(input), GetTensorData<float>(input),
          RuntimeShape(filter_dims_size, filter_dims_data), filter_data, RuntimeShape(bias_dims_size, bias_dims_data),
          bias_data, GetTensorShape(output),
          GetTensorData<float>(output), GetTensorShape(im2col),
          GetTensorData<float>(im2col));
      break;
#else   // !defined(TFLITE_WITH_MULTITHREADED_EIGEN)
      // See Register_CONV_2D: we should never be here when TFLITE_WITH_RUY
      // was enabled. We #if out this code in order to get the corresponding
      // binary size benefits.
      TFLITE_DCHECK(false);
#endif  // defined(TFLITE_WITH_MULTITHREADED_EIGEN)
    }
  }
}

template <KernelType kernel_type>
TfLiteStatus EvalHybridPerChannel(TfLiteContext* context, TfLiteNode* node,
                                  TfLiteConvParams* params, OpData* data,
                                  const TfLiteTensor* input,
                                  const TfLiteTensor* filter,
                                  const TfLiteTensor* bias,
                                  TfLiteTensor* im2col, TfLiteTensor* output) {
  float output_activation_min, output_activation_max;
  CalculateActivationRange(activation, &output_activation_min,
                           &output_activation_max);

  const int batch_size = SizeOfDimension(input, 0);
  TF_LITE_ENSURE(context, batch_size != 0);
  const int input_size = NumElements(input) / batch_size;
  TfLiteTensor* quantized_input_tensor;
  TF_LITE_ENSURE_OK(context,
                    GetTemporarySafe(context, node, data->input_quantized_index,
                                     &quantized_input_tensor));
  int8_t* quantized_input_ptr_batch =
      GetTensorData<int8_t>(quantized_input_tensor);
  TfLiteTensor* scaling_factors_tensor;
  TF_LITE_ENSURE_OK(context,
                    GetTemporarySafe(context, node, data->scaling_factors_index,
                                     &scaling_factors_tensor));
  float* scaling_factors_ptr = GetTensorData<float>(scaling_factors_tensor);
  TfLiteTensor* input_offset_tensor;
  TF_LITE_ENSURE_OK(context,
                    GetTemporarySafe(context, node, data->input_offset_index,
                                     &input_offset_tensor));
  int32_t* input_offset_ptr = GetTensorData<int32_t>(input_offset_tensor);

  for (int b = 0; b < batch_size; ++b) {
    const int offset = b * input_size;
    tensor_utils::AsymmetricQuantizeFloats(
        GetTensorData<float>(input) + offset, input_size,
        quantized_input_ptr_batch + offset, &scaling_factors_ptr[b],
        &input_offset_ptr[b]);
  }

  int8_t* im2col_ptr = nullptr;
  int8_t* filter_ptr = nullptr;
  if (im2col != nullptr) {
    im2col_ptr = im2col->data.int8;
  }
  filter_ptr = filter->data.int8;
  const auto* affine_quantization =
      reinterpret_cast<TfLiteAffineQuantization*>(filter->quantization.params);

  KernelType effective_kernel_type = kernel_type;
  // We have to fallback to reference execution path when im2col is needed but
  // disabled because to-be-allocated temporary im2col tensor is too large.
  // See b/178743262 for the detailed motivation.
  if (data->im2col_oversized) {
    effective_kernel_type = kReference;
  }

  // Grouped convolution is right now only supported on reference kernel.
  if (data->groups != 1) {
    effective_kernel_type = kReference;
  }

  ConvParams op_params;
  op_params.padding_type = PaddingType::kSame;
  op_params.padding_values.width = data->padding.width;
  op_params.padding_values.height = data->padding.height;
  op_params.dilation_width_factor = dilation_width_factor;
  op_params.dilation_height_factor = dilation_height_factor;
  op_params.stride_width = stride_width;
  op_params.stride_height = stride_height;
  op_params.float_activation_min = output_activation_min;
  op_params.float_activation_max = output_activation_max;

  switch (effective_kernel_type) {
    case kReference:
      reference_ops::HybridConvPerChannel(
          op_params, scaling_factors_ptr, GetTensorShape(input),
          quantized_input_ptr_batch, GetTensorShape(filter), filter_ptr,
          GetTensorShape(bias), GetTensorData<float>(bias),
          GetTensorShape(output), GetTensorData<float>(output),
          GetTensorShape(im2col), im2col_ptr, affine_quantization->scale->data,
          input_offset_ptr);
      break;
    case kGenericOptimized:
    case kMultithreadOptimized:
    case kCblasOptimized: {
      TfLiteTensor* row_sums;
      TF_LITE_ENSURE_OK(
          context,
          GetTemporarySafe(context, node, data->row_sums_index, &row_sums));
      TfLiteTensor* scratch;
      TF_LITE_ENSURE_OK(
          context,
          GetTemporarySafe(context, node, data->accum_scratch_index, &scratch));
      optimized_ops::HybridConvPerChannel(
          op_params, scaling_factors_ptr, GetTensorShape(input),
          quantized_input_ptr_batch, GetTensorShape(filter), filter_ptr,
          GetTensorShape(bias), GetTensorData<float>(bias),
          GetTensorShape(output), GetTensorData<float>(output),
          GetTensorShape(im2col), im2col_ptr, affine_quantization->scale->data,
          input_offset_ptr, GetTensorShape(scratch),
          GetTensorData<int32>(scratch), GetTensorData<int32_t>(row_sums),
          &data->compute_hybrid_row_sums,
          CpuBackendContext::GetFromContext(context));
      data->compute_hybrid_row_sums = false;
      break;
    }
  }

  return kTfLiteOk;
}

template <KernelType kernel_type>
TfLiteStatus EvalHybrid(TfLiteContext* context, TfLiteNode* node,
                        TfLiteConvParams* params, OpData* data,
                        const TfLiteTensor* input, const TfLiteTensor* filter,
                        const TfLiteTensor* bias, TfLiteTensor* im2col,
                        TfLiteTensor* accum_scratch, TfLiteTensor* output) {
  float output_activation_min, output_activation_max;
  CalculateActivationRange(activation, &output_activation_min,
                           &output_activation_max);

  const int batch_size = SizeOfDimension(input, 0);
  TF_LITE_ENSURE(context, batch_size != 0);
  const int input_size = NumElements(input) / batch_size;

  const float* input_ptr = GetTensorData<float>(input);
  TfLiteTensor* quantized_input_tensor;
  TF_LITE_ENSURE_OK(context,
                    GetTemporarySafe(context, node, data->input_quantized_index,
                                     &quantized_input_tensor));
  int8_t* quantized_input_ptr_batch =
      GetTensorData<int8_t>(quantized_input_tensor);
  TfLiteTensor* scaling_factors_tensor;
  TF_LITE_ENSURE_OK(context,
                    GetTemporarySafe(context, node, data->scaling_factors_index,
                                     &scaling_factors_tensor));
  float* scaling_factors_ptr = GetTensorData<float>(scaling_factors_tensor);

  // Per-batch input quantization for higher accuracy.
  {
    ruy::profiler::ScopeLabel label("ConvHybridQuantizeInputs");
    for (int b = 0; b < batch_size; ++b) {
      float unused_min, unused_max;
      const int offset = b * input_size;
      tensor_utils::SymmetricQuantizeFloats(
          input_ptr + offset, input_size, quantized_input_ptr_batch + offset,
          &unused_min, &unused_max, &scaling_factors_ptr[b]);
      scaling_factors_ptr[b] *= filter->params.scale;
    }
  }

  switch (kernel_type) {
    case kReference:
    case kGenericOptimized:
    case kMultithreadOptimized:
    case kCblasOptimized: {
      // There is only one implementation for hybrid kernel.
      ConvParams op_params;
      op_params.padding_type = PaddingType::kSame;
      op_params.padding_values.width = data->padding.width;
      op_params.padding_values.height = data->padding.height;
      op_params.stride_width = stride_width;
      op_params.stride_height = stride_height;
      op_params.dilation_width_factor = dilation_width_factor;
      op_params.dilation_height_factor = dilation_height_factor;
      op_params.float_activation_min = output_activation_min;
      op_params.float_activation_max = output_activation_max;
      if (data->groups == 1) {
        optimized_ops::HybridConv(
            op_params, scaling_factors_ptr, GetTensorShape(input),
            quantized_input_ptr_batch, GetTensorShape(filter),
            GetTensorData<int8_t>(filter), GetTensorShape(bias),
            GetTensorData<float>(bias), GetTensorShape(accum_scratch),
            GetTensorData<int32_t>(accum_scratch), GetTensorShape(output),
            GetTensorData<float>(output), GetTensorShape(im2col),
            GetTensorData<int8_t>(im2col),
            CpuBackendContext::GetFromContext(context));
      } else {
        // This case is handled by (fallbacked to) per channel hybrid group conv
        // and shouldn't hit this branch.
        TF_LITE_KERNEL_LOG(
            context,
            "Group convolution currently not supported for hybrid kernel.");
        return kTfLiteError;
      }
      break;
    }
  }

  return kTfLiteOk;
}

template <KernelType kernel_type, TfLiteType input_type>
TfLiteStatus EvalImpl(TfLiteContext* context, TfLiteNode* node) {
  // std::cout << "codes runs here #2" << std::endl;
  // auto* params = reinterpret_cast<TfLiteConvParams*>(node->builtin_data);
  TfLiteConvParams* params;

  OpData* data = reinterpret_cast<OpData*>(node->user_data);

  TfLiteTensor* output;
  TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output));
  const TfLiteTensor* input;
  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));
  const TfLiteTensor* filter;
  const int dims_size = filter_dims_size;

  // std::cout << "filter dim size:" << dims_size << std::endl;
  // const int32_t* dims_data = reinterpret_cast<const int32_t*>(dims->data);
  const int32_t* dims_data = filter_dims_raw;
  // bool has_bias = node->inputs->size == 3;
  // const TfLiteTensor* bias = has_bias ? GetInput(context, node, 2) : nullptr;
  const TfLiteTensor* bias = nullptr;
  TfLiteTensor* im2col =
      data->need_im2col
          ? &context->tensors[node->temporaries->data[data->im2col_index]]
          : nullptr;
  TfLiteTensor* hwcn_weights =
      data->need_hwcn_weights
          ? &context->tensors[node->temporaries->data[data->hwcn_weights_index]]
          : nullptr;

  if (data->need_hwcn_weights && !data->have_weights_been_transposed) {
    TransposeFloatTensor(filter, hwcn_weights);
    data->have_weights_been_transposed = true;
  }
  // std::cout << "codes runs here #3" << std::endl;

  TFLITE_DCHECK_EQ(input_type, input->type);
  switch (input_type) {  // Already know in/outtypes are same.
    case kTfLiteFloat32:
      if (filter_type == kTfLiteUInt8 || filter_type == kTfLiteInt8) {
        if (data->is_hybrid_per_channel ||
            // TODO(b/162870360): Fallback to PerChannel implementation
            // before we have grouped hybrid convolution.
            data->groups != 1) {
          TF_LITE_ENSURE_OK(context, EvalHybridPerChannel<kernel_type>(
                                         context, node, params, data, input,
                                         filter, bias, im2col, output));
        } else {
          TfLiteTensor* accum_scratch =
              &context->tensors[node->temporaries
                                    ->data[data->accum_scratch_index]];
          TF_LITE_ENSURE_OK(context,
                            EvalHybrid<kernel_type>(context, node, params, data,
                                                    input, filter, bias, im2col,
                                                    accum_scratch, output));
        }
      } else {
        EvalFloat<kernel_type>(context, node, params, data, input, filter, bias,
                               im2col, hwcn_weights, output);
      }
      break;
    case kTfLiteUInt8:
      EvalQuantized<kernel_type>(context, node, params, data, input, filter,
                                 bias, im2col, output);
      break;
    case kTfLiteInt8:
      EvalQuantizedPerChannel<kernel_type>(context, node, params, data, input,
                                           filter, bias, output, im2col);
      break;
    case kTfLiteInt16:
      EvalQuantizedPerChannel16x8<kernel_type>(
          context, node, params, data, input, filter, bias, output, im2col);
      break;
    default:
      TF_LITE_KERNEL_LOG(context, "Type %s currently not supported.",
                         TfLiteTypeGetName(input->type));
      return kTfLiteError;
  }
  return kTfLiteOk;
}

template <KernelType kernel_type>
TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {
  const TfLiteTensor* input;
  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));

  switch (input->type) {
    case kTfLiteFloat32:
      return EvalImpl<kernel_type, kTfLiteFloat32>(context, node);
    case kTfLiteUInt8:
      return EvalImpl<kernel_type, kTfLiteUInt8>(context, node);
    case kTfLiteInt8:
      return EvalImpl<kernel_type, kTfLiteInt8>(context, node);
    case kTfLiteInt16:
      return EvalImpl<kernel_type, kTfLiteInt16>(context, node);
    default:
      TF_LITE_KERNEL_LOG(context, "Type %s not currently supported.",
                         TfLiteTypeGetName(input->type));
      return kTfLiteError;
  }
}

}  // namespace conv

TfLiteRegistration* Register_onoewg_REF() {
  static TfLiteRegistration r = {onoewg::Init, onoewg::Free,
                                 onoewg::Prepare<onoewg::kReference>,
                                 onoewg::Eval<onoewg::kReference>};
  return &r;
}

TfLiteRegistration* Register_onoewg_GENERIC_OPT() {
  static TfLiteRegistration r = {onoewg::Init, onoewg::Free,
                                 onoewg::Prepare<onoewg::kGenericOptimized>,
                                 onoewg::Eval<onoewg::kGenericOptimized>};
  return &r;
}

TfLiteRegistration* Register_onoewg_MULTITHREADED_OPT() {
  static TfLiteRegistration r = {onoewg::Init, onoewg::Free,
                                 onoewg::Prepare<onoewg::kMultithreadOptimized>,
                                 onoewg::Eval<onoewg::kMultithreadOptimized>};
  return &r;
}

// TfLiteRegistration* Register_onoewg_CBLAS_OPT() {
//   static TfLiteRegistration r = {onoewg::Init, onoewg::Free,
//                                  onoewg::Prepare<onoewg::kCblasOptimized>,
//                                  onoewg::Eval<onoewg::kCblasOptimized>};
//   return &r;
// }

TfLiteRegistration* Register_onoewg() {
#if defined TFLITE_WITH_MULTITHREADED_EIGEN
  return Register_onoewg_MULTITHREADED_OPT();
#else
  return Register_onoewg_GENERIC_OPT();
#endif
}


}  // namespace builtin
}  // namespace ops
}  // namespace tflite
